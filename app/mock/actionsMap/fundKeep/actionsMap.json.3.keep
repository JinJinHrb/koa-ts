{
  "message": "ok",
  "fileActions": [
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "routerActions",
              "sourceValue": "actions/router",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/router.ts",
              "exportNames": ["locationInit", "matchPublicRouter", "matchPrivateRouter"]
            },
            {
              "isNamespace": true,
              "localName": "utilActions",
              "sourceValue": "actions/util",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/util.ts",
              "exportNames": [
                "pubKeyRequested",
                "pubKeySucceed",
                "pubKeyFailed",
                "toggleOrderAnnexUpload",
                "setIsMobile",
                "getFirmStatusRequested",
                "getFirmStatusSucceed",
                "getFirmStatusFailed",
                "setPreviewPageId",
                "setCountrys",
                "setProvinces",
                "setLoadAddress",
                "getLocationRequested",
                "getLocationSucceed",
                "getLocationFailed",
                "touchAndChangeAddressFields",
                "resetAddressFieldsThenSetCountry"
              ]
            },
            {
              "isNamespace": true,
              "localName": "intlActions",
              "sourceValue": "actions/intl",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/intl.ts",
              "exportNames": ["setLocale"]
            },
            {
              "isNamespace": true,
              "localName": "xshieldActions",
              "sourceValue": "actions/xshield",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xshield.ts",
              "exportNames": [
                "identityVerifyRequested",
                "identityVerifySucceed",
                "identityVerifyFailed",
                "xshieldBindRequested",
                "xshieldBindSucceed",
                "xshieldBindFailed",
                "xshieldUnBindRequested",
                "xshieldUnBindSucceed",
                "xshieldUnBindFailed",
                "mfaWechatAuthRequested",
                "mfaWechatAuthSucceed",
                "mfaWechatAuthFailed",
                "initMfaWechatAuth",
                "setXshieldBindStep",
                "setMFAVisible",
                "setMFAParam",
                "initXshield",
                "setMFATip",
                "unBindSubAccountRequested",
                "unBindSubAccountSucceed",
                "unBindSubAccountFailed",
                "unBindSubAccountModal"
              ]
            },
            {
              "isNamespace": true,
              "localName": "meActions",
              "sourceValue": "actions/me",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/me.ts",
              "exportNames": [
                "getProfileRequested",
                "getProfileSucceed",
                "getProfileFailed",
                "setProfile",
                "accountRequested",
                "accountSucceed",
                "accountFailed",
                "hideAccountError",
                "userPowerRequested",
                "userPowerSucceed",
                "userPowerFailed",
                "getDepositTodoRequested",
                "getDepositTodoSucceed",
                "getDepositTodoFailed",
                "setXtMethod",
                "setTransferNotice",
                "reset",
                "platformRequested",
                "platformSucceed",
                "platformFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "vcodeActions",
              "sourceValue": "actions/vcode",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/vcode.ts",
              "exportNames": [
                "updateCountDownSeconds",
                "stopVcodeCountDown",
                "sendVcodeMessage",
                "sendVcodeMessageSucceed",
                "sendVcodeMessageFailed",
                "hideVcodeTip"
              ]
            },
            {
              "isNamespace": true,
              "localName": "userActions",
              "sourceValue": "actions/user",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts",
              "exportNames": [
                "getUserFlowId",
                "getUserFlowIdAndCaptcha",
                "getUserFlowIdSucceed",
                "getUserFlowIdFailed",
                "initUserFlowId",
                "getUserCaptcha",
                "getUserCaptchaSucceed",
                "getUserCaptchaFailed",
                "initUserCaptcha",
                "verifyMfaRequested",
                "verifyMfaSucceed",
                "verifyMfaFailed",
                "initVerifyMfa",
                "setAuthId",
                "resetAuthId",
                "executeAuthIdCallBackRequested",
                "executeAuthIdCallBackSucceed",
                "executeAuthIdCallBackFailed",
                "sendMfaMessageRequested",
                "getMfaCaptchaRequested",
                "getMfaCaptchaSucceed",
                "getMfaCaptchaFailed",
                "initMfaCaptcha",
                "getWhiteListRequested",
                "getWhiteListSucceed",
                "getWhiteListFailed",
                "getWhiteListInit",
                "setMfaJson",
                "resetMfaJson",
                "queryIndustryRequested",
                "queryIndustrySucceed",
                "queryIndustryFailed",
                "queryRestrictionList",
                "queryRestrictionListSucceed",
                "queryRestrictionListFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "securityActions",
              "sourceValue": "actions/security",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/security.ts",
              "exportNames": [
                "checkABVType",
                "openABVPanel",
                "closeABVPanel",
                "validateCaptchaRequested",
                "validateCaptchaSucceed",
                "validateCaptchaFailed",
                "initValidateCaptcha",
                "setABVVeriType",
                "logSliderVeriInfo",
                "updateXRateLimitRoute"
              ]
            },
            {
              "isNamespace": true,
              "localName": "homeActions",
              "sourceValue": "actions/home",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/home.ts",
              "exportNames": [
                "getTagKeywordsRequested",
                "getTagKeywordsSucceed",
                "getTagKeywordsFailed",
                "getKeywordsRequested",
                "getKeywordsSucceed",
                "getKeywordsFailed",
                "getTopArticlesRequested",
                "getTopArticlesSucceed",
                "getTopArticlesFailed",
                "getNewsListRequested",
                "getNewsListSucceed",
                "getNewsListFailed",
                "getMoreNewsListSucceed",
                "getTagListRequested",
                "getTagListSucceed",
                "getTagListFailed",
                "getTagInfoListRequested",
                "getTagInfoListSucceed",
                "getTagInfoListFailed",
                "getLatestNewsRequested",
                "getLatestNewsSucceed",
                "getLatestNewsFailed",
                "getNewsDetailRequested",
                "getNewsDetailSucceed",
                "getNewsDetailFailed",
                "getTagNewsDetailRequested",
                "getTagNewsDetailSucceed",
                "getTagNewsDetailFailed",
                "postContactRequested",
                "postContactSucceed",
                "postContactFailed",
                "closeAdvertise",
                "openAdvertise",
                "advertiseShield",
                "closeContact",
                "openContact",
                "contactShield",
                "queryServerGrantIdRequest",
                "queryServerGrantIdSuccess"
              ]
            },
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 100,
                  "column": 43,
                  "index": 3247
                },
                "end": {
                  "line": 272,
                  "column": 1,
                  "index": 8533
                }
              },
              "actionsMethods": [
                {
                  "name": "locationInit"
                },
                {
                  "name": "setLocale"
                },
                {
                  "name": "setMFAVisible"
                },
                {
                  "name": "setMFAParam"
                },
                {
                  "name": "checkABVType",
                  "usageVariable": "MFAOrigin"
                },
                {
                  "name": "sendMfaMessageRequested"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "locationInit",
                  "importedName": "locationInit",
                  "sourceValue": "actions/router",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/router.ts"
                },
                {
                  "localName": "setLocale",
                  "importedName": "setLocale",
                  "sourceValue": "actions/intl",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/intl.ts"
                },
                {
                  "localName": "setMFAVisible",
                  "importedName": "setMFAVisible",
                  "sourceValue": "actions/xshield",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xshield.ts"
                },
                {
                  "localName": "setMFAParam",
                  "importedName": "setMFAParam",
                  "sourceValue": "actions/xshield",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xshield.ts"
                },
                {
                  "localName": "checkABVType",
                  "importedName": "checkABVType",
                  "sourceValue": "actions/security",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/security.ts",
                  "usageVariable": "MFAOrigin"
                },
                {
                  "localName": "sendMfaMessageRequested",
                  "importedName": "sendMfaMessageRequested",
                  "sourceValue": "actions/user",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 100,
                  "column": 43,
                  "index": 3247
                },
                "end": {
                  "line": 272,
                  "column": 1,
                  "index": 8533
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [
            "routerActions",
            "utilActions",
            "intlActions",
            "xshieldActions",
            "meActions",
            "vcodeActions",
            "userActions",
            "securityActions",
            "homeActions"
          ],
          "objectPropertyMap": {
            "push": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/ABVPanel/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "securityActions",
              "sourceValue": "actions/security",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/security.ts",
              "exportNames": [
                "checkABVType",
                "openABVPanel",
                "closeABVPanel",
                "validateCaptchaRequested",
                "validateCaptchaSucceed",
                "validateCaptchaFailed",
                "initValidateCaptcha",
                "setABVVeriType",
                "logSliderVeriInfo",
                "updateXRateLimitRoute"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 36,
                  "column": 58,
                  "index": 968
                },
                "end": {
                  "line": 80,
                  "column": 1,
                  "index": 2344
                }
              },
              "actionsMethods": [
                {
                  "name": "closeABVPanel",
                  "usageVariable": "usage"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "closeABVPanel",
                  "importedName": "closeABVPanel",
                  "sourceValue": "actions/security",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/security.ts",
                  "usageVariable": "usage"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 36,
                  "column": 58,
                  "index": 968
                },
                "end": {
                  "line": 80,
                  "column": 1,
                  "index": 2344
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["securityActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/MFAPanel/index.jsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "actions",
              "sourceValue": "actions/xshield",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xshield.ts",
              "exportNames": [
                "identityVerifyRequested",
                "identityVerifySucceed",
                "identityVerifyFailed",
                "xshieldBindRequested",
                "xshieldBindSucceed",
                "xshieldBindFailed",
                "xshieldUnBindRequested",
                "xshieldUnBindSucceed",
                "xshieldUnBindFailed",
                "mfaWechatAuthRequested",
                "mfaWechatAuthSucceed",
                "mfaWechatAuthFailed",
                "initMfaWechatAuth",
                "setXshieldBindStep",
                "setMFAVisible",
                "setMFAParam",
                "initXshield",
                "setMFATip",
                "unBindSubAccountRequested",
                "unBindSubAccountSucceed",
                "unBindSubAccountFailed",
                "unBindSubAccountModal"
              ]
            },
            {
              "isNamespace": true,
              "localName": "bindActions",
              "sourceValue": "actions/bind",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/bind.ts",
              "exportNames": [
                "bindRequested",
                "bindSucceed",
                "bindFailed",
                "modifyBindRequested",
                "modifyBindSucceed",
                "modifyBindFailed",
                "setBindStep",
                "resetBindStep",
                "hideBindError"
              ]
            },
            {
              "isNamespace": true,
              "localName": "passwordActions",
              "sourceValue": "actions/password",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/password.ts",
              "exportNames": [
                "modifyTradePasswordRequested",
                "modifyTradePasswordSucceed",
                "modifyTradePasswordFailed",
                "initModifyTradePassword",
                "forgotTradePasswordRequested",
                "forgotTradePasswordSucceed",
                "forgotTradePasswordFailed",
                "initForgotTradePassword",
                "setTradePasswordRequested",
                "setTradePasswordSucceed",
                "setTradePasswordFailed",
                "initSetTradePassword",
                "modifyLoginPasswordRequested",
                "modifyLoginPasswordSucceed",
                "modifyLoginPasswordFailed",
                "setModifyLoginPasswordStep",
                "resetModifyLoginPassword",
                "hideModifyLoginPasswordError",
                "initLoginPasswordRequested",
                "initLoginPasswordSucceed",
                "initLoginPasswordFailed",
                "initInitLoginPassword"
              ]
            },
            {
              "isNamespace": true,
              "localName": "vcodeActions",
              "sourceValue": "actions/vcode",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/vcode.ts",
              "exportNames": [
                "updateCountDownSeconds",
                "stopVcodeCountDown",
                "sendVcodeMessage",
                "sendVcodeMessageSucceed",
                "sendVcodeMessageFailed",
                "hideVcodeTip"
              ]
            },
            {
              "isNamespace": true,
              "localName": "withdrawalsActions",
              "sourceValue": "actions/withdrawals",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts",
              "exportNames": [
                "accountListRequested",
                "accountListSucceed",
                "accountListFailed",
                "hideAccountListError",
                "deleteItemRequested",
                "deleteItemSucceed",
                "deleteItemFailed",
                "swithDeleteItemModal",
                "setDeleteItemId",
                "setDeleteItemType",
                "hideDeleteItemError",
                "historyDetailRequested",
                "historyDetailSucceed",
                "historyDetailFailed",
                "hideHistoryDetailError",
                "createAccountRequested",
                "createAccountSucceed",
                "createAccountFailed",
                "setCreateAccountStep",
                "resetCreateAccount",
                "hideCreateAccountError",
                "withdrawFXAddRequested",
                "withdrawFXAddSucceed",
                "withdrawFXAddFailed",
                "hideWithdrawFXAddError",
                "setWithdrawFXAddStep",
                "resetWithdrawFXAdd",
                "withdrawFXAddVerifyRequested",
                "withdrawFXAddVerifySucceed",
                "withdrawFXAddVerifyFailed",
                "queryBanks",
                "queryBanksSucceed",
                "queryBanksFailed",
                "queryProvinces",
                "queryProvincesSucceed",
                "queryProvincesFailed",
                "getLegalProfile",
                "getLegalProfileSucceed",
                "getLegalProfileFailed",
                "createTransferAccountRequested",
                "createTransferAccountSucceed",
                "createTransferAccountFailed",
                "hideCreateTransferAccountError",
                "setCreateTransferAccountStep",
                "resetCreateTransferAccount",
                "setBeneficiaryNameError",
                "getBeneficiayAccountNoRequested",
                "getBeneficiayAccountNoSucceed",
                "getBeneficiayAccountNoFailed",
                "resetBeneficiayAccountNo",
                "getAccountLimitRequested",
                "getAccountLimitSucceed",
                "getAccountLimitFailed",
                "bindAccountPhoneNoRequested",
                "bindAccountPhoneNoSucceed",
                "bindAccountPhoneNoFailed",
                "bindAccountPhoneNoVerifyFailed",
                "swithBindPhoneNoModal",
                "getBeneficiayPhoneNoRequested",
                "getBeneficiayPhoneNoSucceed",
                "getBeneficiayPhoneNoFailed",
                "resetBeneficiayPhoneNo",
                "getFXPrivateAgreementRequested",
                "getFXPrivateAgreementSucceed",
                "getFXPrivateAgreementFailed",
                "getFXPublicAgreementRequested",
                "getFXPublicAgreementSucceed",
                "getFXPublicAgreementFailed",
                "getTransferPublicAgreementRequested",
                "getTransferPublicAgreementSucceed",
                "getTransferPublicAgreementFailed",
                "getWithdrawNormalAgreementRequested",
                "getWithdrawNormalAgreementSucceed",
                "getWithdrawNormalAgreementFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "withdrawActions",
              "sourceValue": "actions/withdraw",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts",
              "exportNames": [
                "withdrawListRequested",
                "withdrawListSucceed",
                "withdrawListFailed",
                "hideWithdrawListError",
                "resetWithdrawList",
                "changeTab",
                "switchWithdrawApplyModal",
                "setWithdrawApplyIsReserved",
                "withdrawApplyRequested",
                "withdrawApplySucceed",
                "withdrawApplyFailed",
                "hideWithdrawApplyError",
                "setStep",
                "resetWithdrawApply",
                "withdrawInitRequested",
                "withdrawInitSucceed",
                "withdrawInitFailed",
                "hideWithdrawInitError",
                "withdrawDebtRequested",
                "withdrawDebtSucceed",
                "withdrawDebtFailed",
                "hideWithdrawDebtError",
                "removeRelatedItemOrderId",
                "addRelatedItemOrderId",
                "inputChangeRelatedItemValue",
                "resetRelatedOrders",
                "changeRelatedOrderChecked",
                "resetRelatedOrderChecked",
                "swithWithdrawFXApplyModal",
                "setWithdrawFXApplyStep",
                "setWithdrawFXApplyIsReserved",
                "withdrawFXApplyRequested",
                "withdrawFXApplySucceed",
                "withdrawFXApplyFailed",
                "hideWithdrawFXApplyError",
                "resetWithdrawFXApply",
                "isWithdrawErrorPage",
                "getFXWithdrawFeeRequested",
                "getFXWithdrawFeeSucceed",
                "getFXWithdrawFeeFailed",
                "hideGetFXWithdrawFeeError",
                "resetGetFXWithdrawFee",
                "getFXCanRelatedOrderRequested",
                "getFXCanRelatedOrderSucceed",
                "getFXCanRelatedOrderFailed",
                "hideGetFXCanRelatedOrderError",
                "resetGetFXCanRelatedOrder",
                "pushFXCanRelatedOrderRequested",
                "pushFXCanRelatedOrderSucceed",
                "pushFXCanRelatedOrderFailed",
                "swithWithdrawFXReApplyModal",
                "setWithdrawFXReApplyStep",
                "withdrawFXReApplyRequested",
                "withdrawFXReApplySucceed",
                "withdrawFXReApplyFailed",
                "resetWithdrawFXReApply",
                "hideWithdrawFXReApplyError",
                "getWithdrawReApplyItemRequested",
                "getWithdrawReApplyItemSucceed",
                "getWithdrawReApplyItemFailed",
                "resetGetWithdrawReApplyItem",
                "withdrawCheckBothFrozen",
                "withdrawCheckBothFrozenSucceed",
                "withdrawCheckBothFrozenFailed",
                "getFxWithdrawHolderTypeRequested",
                "getFxWithdrawHolderTypeSucceed",
                "getFxWithdrawHolderTypeFailed",
                "withdrawDetailRequested",
                "withdrawDetailSucceed",
                "withdrawDetailFailed",
                "resetWithdrawDetail",
                "withdrawFeeRequested",
                "withdrawFeeSucceed",
                "withdrawFeeFailed",
                "queryAddMaterialInfoRequested",
                "queryAddMaterialInfoSucceed",
                "queryAddMaterialInfoFailed",
                "addMaterialCommitRequested",
                "addMaterialCommitSucceed",
                "addMaterialCommitFailed",
                "resetAddMaterialCommit",
                "cancelFxWithdrawRequested",
                "cancelFxWithdrawSucceed",
                "cancelFxWithdrawFailed",
                "resetCancelFxWithdraw",
                "setCancelFxWithdrawModal",
                "cancelWithdrawRequested",
                "cancelWithdrawSucceed",
                "cancelWithdrawFailed",
                "resetCancelWithdraw",
                "setCancelWithdrawModal",
                "cancelOnGoingTransferRequested",
                "cancelOnGoingTransferSucceed",
                "cancelOnGoingTransferFailed",
                "resetCancelOnGoingTransfer",
                "setCancelOnGoingTransferModal",
                "withdrawSupportCcys",
                "withdrawSupportCcysSucceed",
                "withdrawSupportCcysFailed",
                "transferFeeRequested",
                "transferFeeSucceed",
                "transferFeeFailed",
                "setTransferApplyStep",
                "transferApplyRequested",
                "transferApplySucceed",
                "transferApplyFailed",
                "hideTransferApplyError",
                "resetTransferApply",
                "setTransferStep",
                "queryTransferAddMaterialInfoRequested",
                "queryTransferAddMaterialInfoSucceed",
                "queryTransferAddMaterialInfoFailed",
                "transferAddMaterialCommitRequested",
                "transferAddMaterialCommitSucceed",
                "transferAddMaterialCommitFailed",
                "resetTransferAddMaterialCommit",
                "cancelTransferRequested",
                "cancelTransferSucceed",
                "cancelTransferFailed",
                "resetCancelTransfer",
                "setCancelModal",
                "addCardInfoRequested",
                "addCardInfoSucceed",
                "addCardInfoFailed",
                "querySupportBoostRequested",
                "querySupportBoostSucceed",
                "querySupportBoostFailed",
                "resetQuerySupportBoost",
                "queryCanFastWithdrawWorkRequested",
                "queryCanFastWithdrawWorkFailed",
                "queryCanFastWithdrawWorkSuccess",
                "queryACrossBorderRequested",
                "queryACrossBorderSuccess",
                "queryACrossBorderFailed",
                "getAbRequested",
                "getAbSucceed",
                "getAbFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "userActions",
              "sourceValue": "actions/user",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts",
              "exportNames": [
                "getUserFlowId",
                "getUserFlowIdAndCaptcha",
                "getUserFlowIdSucceed",
                "getUserFlowIdFailed",
                "initUserFlowId",
                "getUserCaptcha",
                "getUserCaptchaSucceed",
                "getUserCaptchaFailed",
                "initUserCaptcha",
                "verifyMfaRequested",
                "verifyMfaSucceed",
                "verifyMfaFailed",
                "initVerifyMfa",
                "setAuthId",
                "resetAuthId",
                "executeAuthIdCallBackRequested",
                "executeAuthIdCallBackSucceed",
                "executeAuthIdCallBackFailed",
                "sendMfaMessageRequested",
                "getMfaCaptchaRequested",
                "getMfaCaptchaSucceed",
                "getMfaCaptchaFailed",
                "initMfaCaptcha",
                "getWhiteListRequested",
                "getWhiteListSucceed",
                "getWhiteListFailed",
                "getWhiteListInit",
                "setMfaJson",
                "resetMfaJson",
                "queryIndustryRequested",
                "queryIndustrySucceed",
                "queryIndustryFailed",
                "queryRestrictionList",
                "queryRestrictionListSucceed",
                "queryRestrictionListFailed"
              ]
            },
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 97,
                  "column": 52,
                  "index": 3240
                },
                "end": {
                  "line": 418,
                  "column": 1,
                  "index": 13234
                }
              },
              "actionsMethods": [
                {
                  "name": "initVerifyMfa"
                },
                {
                  "name": "verifyMfaRequested",
                  "usageVariable": "MFAOrigin"
                },
                {
                  "name": "setMFAVisible"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "initVerifyMfa",
                  "importedName": "initVerifyMfa",
                  "sourceValue": "actions/user",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts"
                },
                {
                  "localName": "verifyMfaRequested",
                  "importedName": "verifyMfaRequested",
                  "sourceValue": "actions/user",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts",
                  "usageVariable": "MFAOrigin"
                },
                {
                  "localName": "setMFAVisible",
                  "importedName": "setMFAVisible",
                  "sourceValue": "actions/xshield",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xshield.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 97,
                  "column": 52,
                  "index": 3240
                },
                "end": {
                  "line": 418,
                  "column": 1,
                  "index": 13234
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [
            "actions",
            "bindActions",
            "passwordActions",
            "vcodeActions",
            "withdrawalsActions",
            "withdrawActions",
            "userActions"
          ],
          "objectPropertyMap": {
            "push": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Modal/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": false,
              "localName": "goBack",
              "importedName": "goBack",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 26,
                  "column": 41,
                  "index": 834
                },
                "end": {
                  "line": 55,
                  "column": 1,
                  "index": 1781
                }
              },
              "actionsMethods": [
                {
                  "name": "goBack"
                }
              ],
              "usedActionsDependencies": [
                {
                  "isNamespace": false,
                  "localName": "goBack",
                  "importedName": "goBack",
                  "sourceValue": "react-router-redux",
                  "dependencyPath": "react-router-redux"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 26,
                  "column": 41,
                  "index": 834
                },
                "end": {
                  "line": 55,
                  "column": 1,
                  "index": 1781
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {
            "goBack": "goBack"
          }
        },
        {
          "actionsDependencies": [
            {
              "isNamespace": false,
              "localName": "goBack",
              "importedName": "goBack",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 63,
                  "column": 44,
                  "index": 1926
                },
                "end": {
                  "line": 124,
                  "column": 1,
                  "index": 3413
                }
              },
              "actionsMethods": [
                {
                  "name": "goBack"
                }
              ],
              "usedActionsDependencies": [
                {
                  "isNamespace": false,
                  "localName": "goBack",
                  "importedName": "goBack",
                  "sourceValue": "react-router-redux",
                  "dependencyPath": "react-router-redux"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 63,
                  "column": 44,
                  "index": 1926
                },
                "end": {
                  "line": 124,
                  "column": 1,
                  "index": 3413
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {
            "goBack": "goBack"
          }
        },
        {
          "actionsDependencies": [
            {
              "isNamespace": false,
              "localName": "goBack",
              "importedName": "goBack",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 131,
                  "column": 47,
                  "index": 3560
                },
                "end": {
                  "line": 183,
                  "column": 1,
                  "index": 4793
                }
              },
              "actionsMethods": [
                {
                  "name": "goBack"
                }
              ],
              "usedActionsDependencies": [
                {
                  "isNamespace": false,
                  "localName": "goBack",
                  "importedName": "goBack",
                  "sourceValue": "react-router-redux",
                  "dependencyPath": "react-router-redux"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 131,
                  "column": 47,
                  "index": 3560
                },
                "end": {
                  "line": 183,
                  "column": 1,
                  "index": 4793
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {
            "goBack": "goBack"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Modal/BindEmailModal/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "modalActions",
              "sourceValue": "actions/modal",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/modal.ts",
              "exportNames": [
                "toggleModalStatus",
                "toggleModalWithCallback",
                "toggleGlobalPriorityModalStatus"
              ]
            },
            {
              "isNamespace": true,
              "localName": "userActions",
              "sourceValue": "actions/user",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts",
              "exportNames": [
                "getUserFlowId",
                "getUserFlowIdAndCaptcha",
                "getUserFlowIdSucceed",
                "getUserFlowIdFailed",
                "initUserFlowId",
                "getUserCaptcha",
                "getUserCaptchaSucceed",
                "getUserCaptchaFailed",
                "initUserCaptcha",
                "verifyMfaRequested",
                "verifyMfaSucceed",
                "verifyMfaFailed",
                "initVerifyMfa",
                "setAuthId",
                "resetAuthId",
                "executeAuthIdCallBackRequested",
                "executeAuthIdCallBackSucceed",
                "executeAuthIdCallBackFailed",
                "sendMfaMessageRequested",
                "getMfaCaptchaRequested",
                "getMfaCaptchaSucceed",
                "getMfaCaptchaFailed",
                "initMfaCaptcha",
                "getWhiteListRequested",
                "getWhiteListSucceed",
                "getWhiteListFailed",
                "getWhiteListInit",
                "setMfaJson",
                "resetMfaJson",
                "queryIndustryRequested",
                "queryIndustrySucceed",
                "queryIndustryFailed",
                "queryRestrictionList",
                "queryRestrictionListSucceed",
                "queryRestrictionListFailed"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "BindEmailModal",
              "loc": {
                "start": {
                  "line": 59,
                  "column": 2,
                  "index": 1471
                },
                "end": {
                  "line": 59,
                  "column": 16,
                  "index": 1485
                },
                "identifierName": "BindEmailModal"
              },
              "actionsMethods": [
                {
                  "name": "toggleModalStatus",
                  "usage": "EMModalUsages.BindEmailOrPhoneModal"
                },
                {
                  "name": "getUserFlowId",
                  "usage": ""
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "toggleModalStatus",
                  "importedName": "toggleModalStatus",
                  "sourceValue": "actions/modal",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/modal.ts",
                  "usage": "EMModalUsages.BindEmailOrPhoneModal"
                },
                {
                  "localName": "getUserFlowId",
                  "importedName": "getUserFlowId",
                  "sourceValue": "actions/user",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts",
                  "usage": ""
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 11,
                  "column": 6,
                  "index": 423
                },
                "end": {
                  "line": 11,
                  "column": 20,
                  "index": 437
                },
                "identifierName": "BindEmailModal"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["modalActions", "userActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Modal/ServiceProtocolModal/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "modalActions",
              "sourceValue": "actions/modal",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/modal.ts",
              "exportNames": [
                "toggleModalStatus",
                "toggleModalWithCallback",
                "toggleGlobalPriorityModalStatus"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "ServiceProtocolModal",
              "loc": {
                "start": {
                  "line": 147,
                  "column": 3,
                  "index": 3995
                },
                "end": {
                  "line": 147,
                  "column": 23,
                  "index": 4015
                },
                "identifierName": "ServiceProtocolModal"
              },
              "actionsMethods": [
                {
                  "name": "fetchMetaRequested",
                  "usage": "EMMetaUsages.SignProtocolVersion"
                }
              ],
              "usedActionsDependencies": [],
              "nodeLoc": {
                "start": {
                  "line": 31,
                  "column": 6,
                  "index": 1051
                },
                "end": {
                  "line": 31,
                  "column": 26,
                  "index": 1071
                },
                "identifierName": "ServiceProtocolModal"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["modalActions"],
          "objectPropertyMap": {}
        },
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "metaActions",
              "sourceValue": "actions/meta",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
              "exportNames": [
                "fetchMetaRequested",
                "fetchMetaSucceed",
                "fetchMetaFailed",
                "resetFetchMeta",
                "hideFetchMetaError"
              ]
            },
            {
              "isNamespace": true,
              "localName": "meActions",
              "sourceValue": "actions/me",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/me.ts",
              "exportNames": [
                "getProfileRequested",
                "getProfileSucceed",
                "getProfileFailed",
                "setProfile",
                "accountRequested",
                "accountSucceed",
                "accountFailed",
                "hideAccountError",
                "userPowerRequested",
                "userPowerSucceed",
                "userPowerFailed",
                "getDepositTodoRequested",
                "getDepositTodoSucceed",
                "getDepositTodoFailed",
                "setXtMethod",
                "setTransferNotice",
                "reset",
                "platformRequested",
                "platformSucceed",
                "platformFailed"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "ServiceProtocolModal",
              "loc": {
                "start": {
                  "line": 147,
                  "column": 3,
                  "index": 3995
                },
                "end": {
                  "line": 147,
                  "column": 23,
                  "index": 4015
                },
                "identifierName": "ServiceProtocolModal"
              },
              "actionsMethods": [
                {
                  "name": "fetchMetaRequested",
                  "usage": "EMMetaUsages.SignProtocolVersion"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "fetchMetaRequested",
                  "importedName": "fetchMetaRequested",
                  "sourceValue": "actions/meta",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
                  "usage": "EMMetaUsages.SignProtocolVersion"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 31,
                  "column": 6,
                  "index": 1051
                },
                "end": {
                  "line": 31,
                  "column": 26,
                  "index": 1071
                },
                "identifierName": "ServiceProtocolModal"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["metaActions", "meActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Modal/SetLoginPasswordModal/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "modalActions",
              "sourceValue": "actions/modal",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/modal.ts",
              "exportNames": [
                "toggleModalStatus",
                "toggleModalWithCallback",
                "toggleGlobalPriorityModalStatus"
              ]
            },
            {
              "isNamespace": true,
              "localName": "userActions",
              "sourceValue": "actions/user",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts",
              "exportNames": [
                "getUserFlowId",
                "getUserFlowIdAndCaptcha",
                "getUserFlowIdSucceed",
                "getUserFlowIdFailed",
                "initUserFlowId",
                "getUserCaptcha",
                "getUserCaptchaSucceed",
                "getUserCaptchaFailed",
                "initUserCaptcha",
                "verifyMfaRequested",
                "verifyMfaSucceed",
                "verifyMfaFailed",
                "initVerifyMfa",
                "setAuthId",
                "resetAuthId",
                "executeAuthIdCallBackRequested",
                "executeAuthIdCallBackSucceed",
                "executeAuthIdCallBackFailed",
                "sendMfaMessageRequested",
                "getMfaCaptchaRequested",
                "getMfaCaptchaSucceed",
                "getMfaCaptchaFailed",
                "initMfaCaptcha",
                "getWhiteListRequested",
                "getWhiteListSucceed",
                "getWhiteListFailed",
                "getWhiteListInit",
                "setMfaJson",
                "resetMfaJson",
                "queryIndustryRequested",
                "queryIndustrySucceed",
                "queryIndustryFailed",
                "queryRestrictionList",
                "queryRestrictionListSucceed",
                "queryRestrictionListFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "utilActions",
              "sourceValue": "actions/util",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/util.ts",
              "exportNames": [
                "pubKeyRequested",
                "pubKeySucceed",
                "pubKeyFailed",
                "toggleOrderAnnexUpload",
                "setIsMobile",
                "getFirmStatusRequested",
                "getFirmStatusSucceed",
                "getFirmStatusFailed",
                "setPreviewPageId",
                "setCountrys",
                "setProvinces",
                "setLoadAddress",
                "getLocationRequested",
                "getLocationSucceed",
                "getLocationFailed",
                "touchAndChangeAddressFields",
                "resetAddressFieldsThenSetCountry"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "SetLoginPasswordModal",
              "loc": {
                "start": {
                  "line": 68,
                  "column": 60,
                  "index": 1766
                },
                "end": {
                  "line": 68,
                  "column": 81,
                  "index": 1787
                },
                "identifierName": "SetLoginPasswordModal"
              },
              "actionsMethods": [
                {
                  "name": "toggleModalStatus",
                  "usage": "EMModalUsages.SetLoginPasswordModal"
                },
                {
                  "name": "pubKeyRequested"
                },
                {
                  "name": "getUserFlowId",
                  "usage": "EMGetUserFlowIdUsages.InitPwd"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "toggleModalStatus",
                  "importedName": "toggleModalStatus",
                  "sourceValue": "actions/modal",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/modal.ts",
                  "usage": "EMModalUsages.SetLoginPasswordModal"
                },
                {
                  "localName": "pubKeyRequested",
                  "importedName": "pubKeyRequested",
                  "sourceValue": "actions/util",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/util.ts"
                },
                {
                  "localName": "getUserFlowId",
                  "importedName": "getUserFlowId",
                  "sourceValue": "actions/user",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts",
                  "usage": "EMGetUserFlowIdUsages.InitPwd"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 15,
                  "column": 6,
                  "index": 520
                },
                "end": {
                  "line": 15,
                  "column": 27,
                  "index": 541
                },
                "identifierName": "SetLoginPasswordModal"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["modalActions", "userActions", "utilActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/FirstRegisterStep/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "firmActions",
              "sourceValue": "actions/firm",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/firm.ts",
              "exportNames": [
                "fetchFirmRequested",
                "fetchFirmSucceed",
                "fetchFirmFailed",
                "hideFetchFirmError",
                "resetFirmVerifyInfo",
                "firmRegistedIdExistRequested",
                "firmRegistedIdExistSucceed",
                "firmRegistedIdExistFailed",
                "hideFirmRegistedIdExistError",
                "resetFirmRegistedIdExist",
                "toggleFirmVerifyInitLoading",
                "toggleFirmVerifyTip",
                "checkEngNameExistRequested",
                "checkEngNameExistSucceed",
                "checkEngNameExistFailed",
                "hideCheckEngNameExistError",
                "resetCheckEngNameExist",
                "presetCountriesRequested",
                "presetCountriesSucceed",
                "presetCountriesFailed"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 30,
                  "column": 57,
                  "index": 830
                },
                "end": {
                  "line": 63,
                  "column": 1,
                  "index": 1780
                }
              },
              "actionsMethods": [
                {
                  "name": "fetchFirmRequested"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "fetchFirmRequested",
                  "importedName": "fetchFirmRequested",
                  "sourceValue": "actions/firm",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/firm.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 30,
                  "column": 57,
                  "index": 830
                },
                "end": {
                  "line": 63,
                  "column": 1,
                  "index": 1780
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["firmActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "uiActions",
              "sourceValue": "actions/ui",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/ui.ts",
              "exportNames": [
                "toggleMobileNavSidebar",
                "toggleSubAppLoading",
                "setSubAppError"
              ]
            },
            {
              "isNamespace": true,
              "localName": "navActions",
              "sourceValue": "actions/nav",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/nav.ts",
              "exportNames": [
                "sideNavbarRequested",
                "sideNavbarSucceed",
                "sideNavbarFailed",
                "resetSideNavbar"
              ]
            },
            {
              "isNamespace": true,
              "localName": "meActions",
              "sourceValue": "actions/me",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/me.ts",
              "exportNames": [
                "getProfileRequested",
                "getProfileSucceed",
                "getProfileFailed",
                "setProfile",
                "accountRequested",
                "accountSucceed",
                "accountFailed",
                "hideAccountError",
                "userPowerRequested",
                "userPowerSucceed",
                "userPowerFailed",
                "getDepositTodoRequested",
                "getDepositTodoSucceed",
                "getDepositTodoFailed",
                "setXtMethod",
                "setTransferNotice",
                "reset",
                "platformRequested",
                "platformSucceed",
                "platformFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "xshieldActions",
              "sourceValue": "actions/xshield",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xshield.ts",
              "exportNames": [
                "identityVerifyRequested",
                "identityVerifySucceed",
                "identityVerifyFailed",
                "xshieldBindRequested",
                "xshieldBindSucceed",
                "xshieldBindFailed",
                "xshieldUnBindRequested",
                "xshieldUnBindSucceed",
                "xshieldUnBindFailed",
                "mfaWechatAuthRequested",
                "mfaWechatAuthSucceed",
                "mfaWechatAuthFailed",
                "initMfaWechatAuth",
                "setXshieldBindStep",
                "setMFAVisible",
                "setMFAParam",
                "initXshield",
                "setMFATip",
                "unBindSubAccountRequested",
                "unBindSubAccountSucceed",
                "unBindSubAccountFailed",
                "unBindSubAccountModal"
              ]
            },
            {
              "isNamespace": true,
              "localName": "protocolActions",
              "sourceValue": "actions/protocol",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/protocol.ts",
              "exportNames": [
                "checkAgreedRequested",
                "checkAgreedSucceed",
                "checkAgreedFailed",
                "sendAgreementRequested",
                "sendAgreementSucceed",
                "sendAgreementFailed",
                "getProtocolContentRequested",
                "getProtocolContentSucceed",
                "getProtocolContentFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "userActions",
              "sourceValue": "actions/user",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts",
              "exportNames": [
                "getUserFlowId",
                "getUserFlowIdAndCaptcha",
                "getUserFlowIdSucceed",
                "getUserFlowIdFailed",
                "initUserFlowId",
                "getUserCaptcha",
                "getUserCaptchaSucceed",
                "getUserCaptchaFailed",
                "initUserCaptcha",
                "verifyMfaRequested",
                "verifyMfaSucceed",
                "verifyMfaFailed",
                "initVerifyMfa",
                "setAuthId",
                "resetAuthId",
                "executeAuthIdCallBackRequested",
                "executeAuthIdCallBackSucceed",
                "executeAuthIdCallBackFailed",
                "sendMfaMessageRequested",
                "getMfaCaptchaRequested",
                "getMfaCaptchaSucceed",
                "getMfaCaptchaFailed",
                "initMfaCaptcha",
                "getWhiteListRequested",
                "getWhiteListSucceed",
                "getWhiteListFailed",
                "getWhiteListInit",
                "setMfaJson",
                "resetMfaJson",
                "queryIndustryRequested",
                "queryIndustrySucceed",
                "queryIndustryFailed",
                "queryRestrictionList",
                "queryRestrictionListSucceed",
                "queryRestrictionListFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "appActions",
              "sourceValue": "actions/app",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/app.ts",
              "exportNames": ["userCheckFuncs", "userConfirmNewFuncOrChange"]
            },
            {
              "isNamespace": false,
              "localName": "modalActions",
              "importedName": "modalActions",
              "sourceValue": "actions",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/index.ts"
            },
            {
              "isNamespace": false,
              "localName": "queryCountriesIfNeeded",
              "importedName": "queryCountriesIfNeeded",
              "sourceValue": "actions/addressLocations",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/addressLocations.ts"
            },
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 97,
                  "column": 59,
                  "index": 3552
                },
                "end": {
                  "line": 355,
                  "column": 1,
                  "index": 11770
                }
              },
              "actionsMethods": [
                {
                  "name": "userPowerRequested"
                },
                {
                  "name": "queryCountriesIfNeeded"
                },
                {
                  "name": "getWhiteListRequested"
                },
                {
                  "name": "setMFATip"
                },
                {
                  "name": "toggleMobileNavSidebar"
                },
                {
                  "name": "sendAgreementRequested",
                  "usageVariable": "USER_AGREEMENT_SOURCE"
                },
                {
                  "name": "userConfirmNewFuncOrChange",
                  "usage": "EMUserCheckedUsages.FuncTransferIntro"
                },
                {
                  "name": "userConfirmNewFuncOrChange",
                  "usage": "EMUserCheckedUsages.TradePlatformEntrance"
                },
                {
                  "name": "push"
                },
                {
                  "name": "toggleModalStatus",
                  "usage": "EMModalUsages.MembershipUpdateNotify"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "userPowerRequested",
                  "importedName": "userPowerRequested",
                  "sourceValue": "actions/me",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/me.ts"
                },
                {
                  "isNamespace": false,
                  "localName": "queryCountriesIfNeeded",
                  "importedName": "queryCountriesIfNeeded",
                  "sourceValue": "actions/addressLocations",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/addressLocations.ts"
                },
                {
                  "localName": "getWhiteListRequested",
                  "importedName": "getWhiteListRequested",
                  "sourceValue": "actions/user",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts"
                },
                {
                  "localName": "setMFATip",
                  "importedName": "setMFATip",
                  "sourceValue": "actions/xshield",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xshield.ts"
                },
                {
                  "localName": "toggleMobileNavSidebar",
                  "importedName": "toggleMobileNavSidebar",
                  "sourceValue": "actions/ui",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/ui.ts"
                },
                {
                  "localName": "sendAgreementRequested",
                  "importedName": "sendAgreementRequested",
                  "sourceValue": "actions/protocol",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/protocol.ts",
                  "usageVariable": "USER_AGREEMENT_SOURCE"
                },
                {
                  "localName": "userConfirmNewFuncOrChange",
                  "importedName": "userConfirmNewFuncOrChange",
                  "sourceValue": "actions/app",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/app.ts",
                  "usage": "EMUserCheckedUsages.FuncTransferIntro"
                },
                {
                  "localName": "userConfirmNewFuncOrChange",
                  "importedName": "userConfirmNewFuncOrChange",
                  "sourceValue": "actions/app",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/app.ts",
                  "usage": "EMUserCheckedUsages.TradePlatformEntrance"
                },
                {
                  "isNamespace": false,
                  "localName": "push",
                  "importedName": "push",
                  "sourceValue": "react-router-redux",
                  "dependencyPath": "react-router-redux"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 97,
                  "column": 59,
                  "index": 3552
                },
                "end": {
                  "line": 355,
                  "column": 1,
                  "index": 11770
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [
            "uiActions",
            "navActions",
            "meActions",
            "xshieldActions",
            "protocolActions",
            "userActions",
            "appActions",
            "modalActions"
          ],
          "objectPropertyMap": {
            "queryCountriesIfNeeded": "queryCountriesIfNeeded",
            "push": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/DashboardHome/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "meActions",
              "sourceValue": "actions/me",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/me.ts",
              "exportNames": [
                "getProfileRequested",
                "getProfileSucceed",
                "getProfileFailed",
                "setProfile",
                "accountRequested",
                "accountSucceed",
                "accountFailed",
                "hideAccountError",
                "userPowerRequested",
                "userPowerSucceed",
                "userPowerFailed",
                "getDepositTodoRequested",
                "getDepositTodoSucceed",
                "getDepositTodoFailed",
                "setXtMethod",
                "setTransferNotice",
                "reset",
                "platformRequested",
                "platformSucceed",
                "platformFailed"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 256,
                  "column": 48,
                  "index": 8203
                },
                "end": {
                  "line": 887,
                  "column": 1,
                  "index": 27276
                }
              },
              "actionsMethods": [
                {
                  "name": "killLoopGetRate"
                },
                {
                  "name": "getNormalRateListRequested"
                },
                {
                  "name": "fetchMetaRequested",
                  "usage": "EMMetaUsages.Recommend"
                },
                {
                  "name": "accountListRequested"
                },
                {
                  "name": "fetchMetaRequested",
                  "usage": "EMMetaUsages.Announcement"
                },
                {
                  "name": "fetchMetaRequested",
                  "usage": "EMMetaUsages.QueryMakeUserKnowPackageChange"
                },
                {
                  "name": "getWhiteListRequested"
                },
                {
                  "name": "setMFATip"
                },
                {
                  "name": "submitRequested",
                  "usage": "EMSubmitUsages.RenewBenefitPkg"
                }
              ],
              "usedActionsDependencies": [],
              "nodeLoc": {
                "start": {
                  "line": 256,
                  "column": 48,
                  "index": 8203
                },
                "end": {
                  "line": 887,
                  "column": 1,
                  "index": 27276
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["meActions"],
          "objectPropertyMap": {}
        },
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "rateActions",
              "sourceValue": "actions/rate",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/rate.ts",
              "exportNames": [
                "getExchangeRateRequested",
                "getExchangeRateSucceed",
                "getExchangeRateFailed",
                "hideGetExchangeRateError",
                "getNormalRateListRequested",
                "getNormalRateListSucceed",
                "getNormalRateListFailed",
                "hideGetNormalRateListError",
                "setRefreshTime",
                "killLoopGetRate"
              ]
            },
            {
              "isNamespace": true,
              "localName": "xshieldActions",
              "sourceValue": "actions/xshield",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xshield.ts",
              "exportNames": [
                "identityVerifyRequested",
                "identityVerifySucceed",
                "identityVerifyFailed",
                "xshieldBindRequested",
                "xshieldBindSucceed",
                "xshieldBindFailed",
                "xshieldUnBindRequested",
                "xshieldUnBindSucceed",
                "xshieldUnBindFailed",
                "mfaWechatAuthRequested",
                "mfaWechatAuthSucceed",
                "mfaWechatAuthFailed",
                "initMfaWechatAuth",
                "setXshieldBindStep",
                "setMFAVisible",
                "setMFAParam",
                "initXshield",
                "setMFATip",
                "unBindSubAccountRequested",
                "unBindSubAccountSucceed",
                "unBindSubAccountFailed",
                "unBindSubAccountModal"
              ]
            },
            {
              "isNamespace": true,
              "localName": "withdrawalsActions",
              "sourceValue": "actions/withdrawals",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts",
              "exportNames": [
                "accountListRequested",
                "accountListSucceed",
                "accountListFailed",
                "hideAccountListError",
                "deleteItemRequested",
                "deleteItemSucceed",
                "deleteItemFailed",
                "swithDeleteItemModal",
                "setDeleteItemId",
                "setDeleteItemType",
                "hideDeleteItemError",
                "historyDetailRequested",
                "historyDetailSucceed",
                "historyDetailFailed",
                "hideHistoryDetailError",
                "createAccountRequested",
                "createAccountSucceed",
                "createAccountFailed",
                "setCreateAccountStep",
                "resetCreateAccount",
                "hideCreateAccountError",
                "withdrawFXAddRequested",
                "withdrawFXAddSucceed",
                "withdrawFXAddFailed",
                "hideWithdrawFXAddError",
                "setWithdrawFXAddStep",
                "resetWithdrawFXAdd",
                "withdrawFXAddVerifyRequested",
                "withdrawFXAddVerifySucceed",
                "withdrawFXAddVerifyFailed",
                "queryBanks",
                "queryBanksSucceed",
                "queryBanksFailed",
                "queryProvinces",
                "queryProvincesSucceed",
                "queryProvincesFailed",
                "getLegalProfile",
                "getLegalProfileSucceed",
                "getLegalProfileFailed",
                "createTransferAccountRequested",
                "createTransferAccountSucceed",
                "createTransferAccountFailed",
                "hideCreateTransferAccountError",
                "setCreateTransferAccountStep",
                "resetCreateTransferAccount",
                "setBeneficiaryNameError",
                "getBeneficiayAccountNoRequested",
                "getBeneficiayAccountNoSucceed",
                "getBeneficiayAccountNoFailed",
                "resetBeneficiayAccountNo",
                "getAccountLimitRequested",
                "getAccountLimitSucceed",
                "getAccountLimitFailed",
                "bindAccountPhoneNoRequested",
                "bindAccountPhoneNoSucceed",
                "bindAccountPhoneNoFailed",
                "bindAccountPhoneNoVerifyFailed",
                "swithBindPhoneNoModal",
                "getBeneficiayPhoneNoRequested",
                "getBeneficiayPhoneNoSucceed",
                "getBeneficiayPhoneNoFailed",
                "resetBeneficiayPhoneNo",
                "getFXPrivateAgreementRequested",
                "getFXPrivateAgreementSucceed",
                "getFXPrivateAgreementFailed",
                "getFXPublicAgreementRequested",
                "getFXPublicAgreementSucceed",
                "getFXPublicAgreementFailed",
                "getTransferPublicAgreementRequested",
                "getTransferPublicAgreementSucceed",
                "getTransferPublicAgreementFailed",
                "getWithdrawNormalAgreementRequested",
                "getWithdrawNormalAgreementSucceed",
                "getWithdrawNormalAgreementFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "trendActions",
              "sourceValue": "actions/trend",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/trend.ts",
              "exportNames": [
                "rateTrendRequested",
                "rateTrendSucceed",
                "rateTrendFailed",
                "resetRateTrend",
                "setRateTrendRange"
              ]
            },
            {
              "isNamespace": true,
              "localName": "metaActions",
              "sourceValue": "actions/meta",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
              "exportNames": [
                "fetchMetaRequested",
                "fetchMetaSucceed",
                "fetchMetaFailed",
                "resetFetchMeta",
                "hideFetchMetaError"
              ]
            },
            {
              "isNamespace": true,
              "localName": "appActions",
              "sourceValue": "actions/app",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/app.ts",
              "exportNames": ["userCheckFuncs", "userConfirmNewFuncOrChange"]
            },
            {
              "isNamespace": true,
              "localName": "submitActions",
              "sourceValue": "actions/submit",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/submit.ts",
              "exportNames": [
                "submitRequested",
                "submitSucceed",
                "submitFailed",
                "resetSubmit"
              ]
            },
            {
              "isNamespace": true,
              "localName": "userActions",
              "sourceValue": "actions/user",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts",
              "exportNames": [
                "getUserFlowId",
                "getUserFlowIdAndCaptcha",
                "getUserFlowIdSucceed",
                "getUserFlowIdFailed",
                "initUserFlowId",
                "getUserCaptcha",
                "getUserCaptchaSucceed",
                "getUserCaptchaFailed",
                "initUserCaptcha",
                "verifyMfaRequested",
                "verifyMfaSucceed",
                "verifyMfaFailed",
                "initVerifyMfa",
                "setAuthId",
                "resetAuthId",
                "executeAuthIdCallBackRequested",
                "executeAuthIdCallBackSucceed",
                "executeAuthIdCallBackFailed",
                "sendMfaMessageRequested",
                "getMfaCaptchaRequested",
                "getMfaCaptchaSucceed",
                "getMfaCaptchaFailed",
                "initMfaCaptcha",
                "getWhiteListRequested",
                "getWhiteListSucceed",
                "getWhiteListFailed",
                "getWhiteListInit",
                "setMfaJson",
                "resetMfaJson",
                "queryIndustryRequested",
                "queryIndustrySucceed",
                "queryIndustryFailed",
                "queryRestrictionList",
                "queryRestrictionListSucceed",
                "queryRestrictionListFailed"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 256,
                  "column": 48,
                  "index": 8203
                },
                "end": {
                  "line": 887,
                  "column": 1,
                  "index": 27276
                }
              },
              "actionsMethods": [
                {
                  "name": "killLoopGetRate"
                },
                {
                  "name": "getNormalRateListRequested"
                },
                {
                  "name": "fetchMetaRequested",
                  "usage": "EMMetaUsages.Recommend"
                },
                {
                  "name": "accountListRequested"
                },
                {
                  "name": "fetchMetaRequested",
                  "usage": "EMMetaUsages.Announcement"
                },
                {
                  "name": "fetchMetaRequested",
                  "usage": "EMMetaUsages.QueryMakeUserKnowPackageChange"
                },
                {
                  "name": "getWhiteListRequested"
                },
                {
                  "name": "setMFATip"
                },
                {
                  "name": "submitRequested",
                  "usage": "EMSubmitUsages.RenewBenefitPkg"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "killLoopGetRate",
                  "importedName": "killLoopGetRate",
                  "sourceValue": "actions/rate",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/rate.ts"
                },
                {
                  "localName": "getNormalRateListRequested",
                  "importedName": "getNormalRateListRequested",
                  "sourceValue": "actions/rate",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/rate.ts"
                },
                {
                  "localName": "fetchMetaRequested",
                  "importedName": "fetchMetaRequested",
                  "sourceValue": "actions/meta",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
                  "usage": "EMMetaUsages.Recommend"
                },
                {
                  "localName": "accountListRequested",
                  "importedName": "accountListRequested",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts"
                },
                {
                  "localName": "fetchMetaRequested",
                  "importedName": "fetchMetaRequested",
                  "sourceValue": "actions/meta",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
                  "usage": "EMMetaUsages.Announcement"
                },
                {
                  "localName": "fetchMetaRequested",
                  "importedName": "fetchMetaRequested",
                  "sourceValue": "actions/meta",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
                  "usage": "EMMetaUsages.QueryMakeUserKnowPackageChange"
                },
                {
                  "localName": "getWhiteListRequested",
                  "importedName": "getWhiteListRequested",
                  "sourceValue": "actions/user",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts"
                },
                {
                  "localName": "setMFATip",
                  "importedName": "setMFATip",
                  "sourceValue": "actions/xshield",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xshield.ts"
                },
                {
                  "localName": "submitRequested",
                  "importedName": "submitRequested",
                  "sourceValue": "actions/submit",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/submit.ts",
                  "usage": "EMSubmitUsages.RenewBenefitPkg"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 256,
                  "column": 48,
                  "index": 8203
                },
                "end": {
                  "line": 887,
                  "column": 1,
                  "index": 27276
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [
            "rateActions",
            "xshieldActions",
            "withdrawalsActions",
            "trendActions",
            "metaActions",
            "appActions",
            "submitActions",
            "userActions"
          ],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Collection/CollectionList/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": false,
              "localName": "depositLimitRequested",
              "importedName": "depositLimitRequested",
              "sourceValue": "actions/collection",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/collection.ts"
            },
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [],
          "warnings": [
            "[Warning] #230 lastArguments.length !== 1 (start line: 106, start column: 18, end line: 106",
            ", end column: 62)"
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {
            "depositLimitRequested": "depositLimitRequested",
            "push": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Withdrawal/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "actions",
              "sourceValue": "actions/withdrawals",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts",
              "exportNames": [
                "accountListRequested",
                "accountListSucceed",
                "accountListFailed",
                "hideAccountListError",
                "deleteItemRequested",
                "deleteItemSucceed",
                "deleteItemFailed",
                "swithDeleteItemModal",
                "setDeleteItemId",
                "setDeleteItemType",
                "hideDeleteItemError",
                "historyDetailRequested",
                "historyDetailSucceed",
                "historyDetailFailed",
                "hideHistoryDetailError",
                "createAccountRequested",
                "createAccountSucceed",
                "createAccountFailed",
                "setCreateAccountStep",
                "resetCreateAccount",
                "hideCreateAccountError",
                "withdrawFXAddRequested",
                "withdrawFXAddSucceed",
                "withdrawFXAddFailed",
                "hideWithdrawFXAddError",
                "setWithdrawFXAddStep",
                "resetWithdrawFXAdd",
                "withdrawFXAddVerifyRequested",
                "withdrawFXAddVerifySucceed",
                "withdrawFXAddVerifyFailed",
                "queryBanks",
                "queryBanksSucceed",
                "queryBanksFailed",
                "queryProvinces",
                "queryProvincesSucceed",
                "queryProvincesFailed",
                "getLegalProfile",
                "getLegalProfileSucceed",
                "getLegalProfileFailed",
                "createTransferAccountRequested",
                "createTransferAccountSucceed",
                "createTransferAccountFailed",
                "hideCreateTransferAccountError",
                "setCreateTransferAccountStep",
                "resetCreateTransferAccount",
                "setBeneficiaryNameError",
                "getBeneficiayAccountNoRequested",
                "getBeneficiayAccountNoSucceed",
                "getBeneficiayAccountNoFailed",
                "resetBeneficiayAccountNo",
                "getAccountLimitRequested",
                "getAccountLimitSucceed",
                "getAccountLimitFailed",
                "bindAccountPhoneNoRequested",
                "bindAccountPhoneNoSucceed",
                "bindAccountPhoneNoFailed",
                "bindAccountPhoneNoVerifyFailed",
                "swithBindPhoneNoModal",
                "getBeneficiayPhoneNoRequested",
                "getBeneficiayPhoneNoSucceed",
                "getBeneficiayPhoneNoFailed",
                "resetBeneficiayPhoneNo",
                "getFXPrivateAgreementRequested",
                "getFXPrivateAgreementSucceed",
                "getFXPrivateAgreementFailed",
                "getFXPublicAgreementRequested",
                "getFXPublicAgreementSucceed",
                "getFXPublicAgreementFailed",
                "getTransferPublicAgreementRequested",
                "getTransferPublicAgreementSucceed",
                "getTransferPublicAgreementFailed",
                "getWithdrawNormalAgreementRequested",
                "getWithdrawNormalAgreementSucceed",
                "getWithdrawNormalAgreementFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "statusActions",
              "sourceValue": "actions/status",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/status.ts",
              "exportNames": ["toggleEntityStatus"]
            },
            {
              "isNamespace": true,
              "localName": "withdrawActions",
              "sourceValue": "actions/withdraw",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts",
              "exportNames": [
                "withdrawListRequested",
                "withdrawListSucceed",
                "withdrawListFailed",
                "hideWithdrawListError",
                "resetWithdrawList",
                "changeTab",
                "switchWithdrawApplyModal",
                "setWithdrawApplyIsReserved",
                "withdrawApplyRequested",
                "withdrawApplySucceed",
                "withdrawApplyFailed",
                "hideWithdrawApplyError",
                "setStep",
                "resetWithdrawApply",
                "withdrawInitRequested",
                "withdrawInitSucceed",
                "withdrawInitFailed",
                "hideWithdrawInitError",
                "withdrawDebtRequested",
                "withdrawDebtSucceed",
                "withdrawDebtFailed",
                "hideWithdrawDebtError",
                "removeRelatedItemOrderId",
                "addRelatedItemOrderId",
                "inputChangeRelatedItemValue",
                "resetRelatedOrders",
                "changeRelatedOrderChecked",
                "resetRelatedOrderChecked",
                "swithWithdrawFXApplyModal",
                "setWithdrawFXApplyStep",
                "setWithdrawFXApplyIsReserved",
                "withdrawFXApplyRequested",
                "withdrawFXApplySucceed",
                "withdrawFXApplyFailed",
                "hideWithdrawFXApplyError",
                "resetWithdrawFXApply",
                "isWithdrawErrorPage",
                "getFXWithdrawFeeRequested",
                "getFXWithdrawFeeSucceed",
                "getFXWithdrawFeeFailed",
                "hideGetFXWithdrawFeeError",
                "resetGetFXWithdrawFee",
                "getFXCanRelatedOrderRequested",
                "getFXCanRelatedOrderSucceed",
                "getFXCanRelatedOrderFailed",
                "hideGetFXCanRelatedOrderError",
                "resetGetFXCanRelatedOrder",
                "pushFXCanRelatedOrderRequested",
                "pushFXCanRelatedOrderSucceed",
                "pushFXCanRelatedOrderFailed",
                "swithWithdrawFXReApplyModal",
                "setWithdrawFXReApplyStep",
                "withdrawFXReApplyRequested",
                "withdrawFXReApplySucceed",
                "withdrawFXReApplyFailed",
                "resetWithdrawFXReApply",
                "hideWithdrawFXReApplyError",
                "getWithdrawReApplyItemRequested",
                "getWithdrawReApplyItemSucceed",
                "getWithdrawReApplyItemFailed",
                "resetGetWithdrawReApplyItem",
                "withdrawCheckBothFrozen",
                "withdrawCheckBothFrozenSucceed",
                "withdrawCheckBothFrozenFailed",
                "getFxWithdrawHolderTypeRequested",
                "getFxWithdrawHolderTypeSucceed",
                "getFxWithdrawHolderTypeFailed",
                "withdrawDetailRequested",
                "withdrawDetailSucceed",
                "withdrawDetailFailed",
                "resetWithdrawDetail",
                "withdrawFeeRequested",
                "withdrawFeeSucceed",
                "withdrawFeeFailed",
                "queryAddMaterialInfoRequested",
                "queryAddMaterialInfoSucceed",
                "queryAddMaterialInfoFailed",
                "addMaterialCommitRequested",
                "addMaterialCommitSucceed",
                "addMaterialCommitFailed",
                "resetAddMaterialCommit",
                "cancelFxWithdrawRequested",
                "cancelFxWithdrawSucceed",
                "cancelFxWithdrawFailed",
                "resetCancelFxWithdraw",
                "setCancelFxWithdrawModal",
                "cancelWithdrawRequested",
                "cancelWithdrawSucceed",
                "cancelWithdrawFailed",
                "resetCancelWithdraw",
                "setCancelWithdrawModal",
                "cancelOnGoingTransferRequested",
                "cancelOnGoingTransferSucceed",
                "cancelOnGoingTransferFailed",
                "resetCancelOnGoingTransfer",
                "setCancelOnGoingTransferModal",
                "withdrawSupportCcys",
                "withdrawSupportCcysSucceed",
                "withdrawSupportCcysFailed",
                "transferFeeRequested",
                "transferFeeSucceed",
                "transferFeeFailed",
                "setTransferApplyStep",
                "transferApplyRequested",
                "transferApplySucceed",
                "transferApplyFailed",
                "hideTransferApplyError",
                "resetTransferApply",
                "setTransferStep",
                "queryTransferAddMaterialInfoRequested",
                "queryTransferAddMaterialInfoSucceed",
                "queryTransferAddMaterialInfoFailed",
                "transferAddMaterialCommitRequested",
                "transferAddMaterialCommitSucceed",
                "transferAddMaterialCommitFailed",
                "resetTransferAddMaterialCommit",
                "cancelTransferRequested",
                "cancelTransferSucceed",
                "cancelTransferFailed",
                "resetCancelTransfer",
                "setCancelModal",
                "addCardInfoRequested",
                "addCardInfoSucceed",
                "addCardInfoFailed",
                "querySupportBoostRequested",
                "querySupportBoostSucceed",
                "querySupportBoostFailed",
                "resetQuerySupportBoost",
                "queryCanFastWithdrawWorkRequested",
                "queryCanFastWithdrawWorkFailed",
                "queryCanFastWithdrawWorkSuccess",
                "queryACrossBorderRequested",
                "queryACrossBorderSuccess",
                "queryACrossBorderFailed",
                "getAbRequested",
                "getAbSucceed",
                "getAbFailed"
              ]
            },
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 121,
                  "column": 60,
                  "index": 3804
                },
                "end": {
                  "line": 328,
                  "column": 1,
                  "index": 9768
                }
              },
              "actionsMethods": [
                {
                  "name": "accountListRequested"
                },
                {
                  "name": "queryACrossBorderRequested"
                },
                {
                  "name": "resetBeneficiayAccountNo"
                },
                {
                  "name": "deleteItemRequested"
                },
                {
                  "name": "swithDeleteItemModal"
                },
                {
                  "name": "setDeleteItemId"
                },
                {
                  "name": "setDeleteItemType"
                },
                {
                  "name": "hideDeleteItemError"
                },
                {
                  "name": "toggleEntityStatus",
                  "usage": "EMEntityStatusUsages.ActiveWithdrawalTabKey"
                },
                {
                  "name": "push"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "accountListRequested",
                  "importedName": "accountListRequested",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts"
                },
                {
                  "localName": "queryACrossBorderRequested",
                  "importedName": "queryACrossBorderRequested",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "localName": "resetBeneficiayAccountNo",
                  "importedName": "resetBeneficiayAccountNo",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts"
                },
                {
                  "localName": "deleteItemRequested",
                  "importedName": "deleteItemRequested",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts"
                },
                {
                  "localName": "swithDeleteItemModal",
                  "importedName": "swithDeleteItemModal",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts"
                },
                {
                  "localName": "setDeleteItemId",
                  "importedName": "setDeleteItemId",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts"
                },
                {
                  "localName": "setDeleteItemType",
                  "importedName": "setDeleteItemType",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts"
                },
                {
                  "localName": "hideDeleteItemError",
                  "importedName": "hideDeleteItemError",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts"
                },
                {
                  "localName": "toggleEntityStatus",
                  "importedName": "toggleEntityStatus",
                  "sourceValue": "actions/status",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/status.ts",
                  "usage": "EMEntityStatusUsages.ActiveWithdrawalTabKey"
                },
                {
                  "isNamespace": false,
                  "localName": "push",
                  "importedName": "push",
                  "sourceValue": "react-router-redux",
                  "dependencyPath": "react-router-redux"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 121,
                  "column": 60,
                  "index": 3804
                },
                "end": {
                  "line": 328,
                  "column": 1,
                  "index": 9768
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["actions", "statusActions", "withdrawActions"],
          "objectPropertyMap": {
            "push": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/EarnExchange/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "actions",
              "sourceValue": "actions/earnExchange",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/earnExchange.ts",
              "exportNames": [
                "earnExchangeListRequested",
                "earnExchangeListSucceed",
                "earnExchangeListFailed",
                "hideEarnExchangeListError",
                "setQueryEarnExchangeListType",
                "viewRelatedOrderListRequested",
                "viewRelatedOrderListSucceed",
                "viewRelatedOrderListFailed",
                "hideViewRelatedOrderListError",
                "queryReceiveMoneyOrderListRequested",
                "queryReceiveMoneyOrderListSucceed",
                "queryReceiveMoneyOrderListFailed",
                "hideQueryReceiveMoneyOrderListError",
                "queryReceiveMoneyOrderDetailRequested",
                "queryReceiveMoneyOrderDetailSucceed",
                "queryReceiveMoneyOrderDetailFailed",
                "hideQueryReceiveMoneyOrderDetailError",
                "resetRelateDetail",
                "setHasUpdateOrder",
                "resetSetHasUpdateOrder",
                "switchRelatedOrderModal",
                "earnListDownloadRequested",
                "earnListDownloadSucceed",
                "earnListDownloadFailed",
                "toggleEarnListDownloadModal",
                "resetEarnListDownload",
                "cancelRelateRequested",
                "cancelRelateSucceed",
                "cancelRelateFailed",
                "resetCancelRelate",
                "setCancelRelateModal"
              ]
            },
            {
              "isNamespace": true,
              "localName": "staffActions",
              "sourceValue": "actions/staff",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/staff.ts",
              "exportNames": [
                "staffSuffixRequested",
                "staffSuffixSucceed",
                "staffSuffixFailed",
                "toggleStaffSuffixModal",
                "hideStaffSuffixError",
                "modifyStaffSuffixRequested",
                "modifyStaffSuffixSucceed",
                "modifyStaffSuffixFailed",
                "toggleModifyStaffSuffixModal",
                "resetModifyStaffSuffix",
                "addStaffRequested",
                "addStaffSucceed",
                "addStaffFailed",
                "setAddStaffStep",
                "hideAddStaffError",
                "setAddStaffAccount",
                "resetAddStaff",
                "staffListRequested",
                "staffListSucceed",
                "staffListFailed",
                "setStaffListStatus",
                "resetStaffList",
                "oneStaffInfoRequested",
                "oneStaffInfoSucceed",
                "oneStaffInfoFailed",
                "updateOneStaffRequested",
                "updateOneStaffSucceed",
                "updateOneStaffFailed",
                "hideUpdateOneStaffError",
                "resetUpdateOneStaff",
                "delOneStaffRequested",
                "delOneStaffSucceed",
                "delOneStaffFailed",
                "hideDelOneStaffError",
                "toggleDelOneStaffModal",
                "resetStaffPwRequested",
                "resetStaffPwSucceed",
                "resetStaffPwFailed",
                "genResetStaffPassword",
                "toggleResetStaffPwModal",
                "resetResetStaffPw",
                "assignStaffDepositRequested",
                "assignStaffDepositSucceed",
                "assignStaffDepositFailed",
                "toggleAssignStaffDepositModal",
                "setDepositIdsWaitAssign",
                "addDepositIdsWaitAssign",
                "removeDepositIdsWaitAssign",
                "resetDepositIdsWaitAssign",
                "resetAssignStaffDeposit"
              ]
            },
            {
              "isNamespace": true,
              "localName": "downloadActions",
              "sourceValue": "actions/download",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/download.ts",
              "exportNames": ["downloadRequested", "downloadSucceed", "downloadFailed"]
            },
            {
              "isNamespace": true,
              "localName": "userActions",
              "sourceValue": "actions/user",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts",
              "exportNames": [
                "getUserFlowId",
                "getUserFlowIdAndCaptcha",
                "getUserFlowIdSucceed",
                "getUserFlowIdFailed",
                "initUserFlowId",
                "getUserCaptcha",
                "getUserCaptchaSucceed",
                "getUserCaptchaFailed",
                "initUserCaptcha",
                "verifyMfaRequested",
                "verifyMfaSucceed",
                "verifyMfaFailed",
                "initVerifyMfa",
                "setAuthId",
                "resetAuthId",
                "executeAuthIdCallBackRequested",
                "executeAuthIdCallBackSucceed",
                "executeAuthIdCallBackFailed",
                "sendMfaMessageRequested",
                "getMfaCaptchaRequested",
                "getMfaCaptchaSucceed",
                "getMfaCaptchaFailed",
                "initMfaCaptcha",
                "getWhiteListRequested",
                "getWhiteListSucceed",
                "getWhiteListFailed",
                "getWhiteListInit",
                "setMfaJson",
                "resetMfaJson",
                "queryIndustryRequested",
                "queryIndustrySucceed",
                "queryIndustryFailed",
                "queryRestrictionList",
                "queryRestrictionListSucceed",
                "queryRestrictionListFailed"
              ]
            },
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 202,
                  "column": 52,
                  "index": 5593
                },
                "end": {
                  "line": 1087,
                  "column": 1,
                  "index": 31926
                }
              },
              "actionsMethods": [
                {
                  "name": "toggleEarnListDownloadModal"
                },
                {
                  "name": "resetEarnListDownload"
                },
                {
                  "name": "resetDepositIdsWaitAssign"
                },
                {
                  "name": "setDepositIdsWaitAssign"
                },
                {
                  "name": "earnExchangeListRequested"
                },
                {
                  "name": "toggleAssignStaffDepositModal"
                },
                {
                  "name": "assignStaffDepositRequested"
                },
                {
                  "name": "setQueryEarnExchangeListType"
                },
                {
                  "name": "viewRelatedOrderListRequested"
                },
                {
                  "name": "resetRelateDetail"
                },
                {
                  "name": "getWhiteListRequested"
                },
                {
                  "name": "staffListRequested"
                },
                {
                  "name": "resetAssignStaffDeposit"
                },
                {
                  "name": "addDepositIdsWaitAssign"
                },
                {
                  "name": "removeDepositIdsWaitAssign"
                },
                {
                  "name": "downloadRequested",
                  "usage": "EMDownloadUsages.BankSlip"
                },
                {
                  "name": "push"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "toggleEarnListDownloadModal",
                  "importedName": "toggleEarnListDownloadModal",
                  "sourceValue": "actions/earnExchange",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/earnExchange.ts"
                },
                {
                  "localName": "resetEarnListDownload",
                  "importedName": "resetEarnListDownload",
                  "sourceValue": "actions/earnExchange",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/earnExchange.ts"
                },
                {
                  "localName": "resetDepositIdsWaitAssign",
                  "importedName": "resetDepositIdsWaitAssign",
                  "sourceValue": "actions/staff",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/staff.ts"
                },
                {
                  "localName": "setDepositIdsWaitAssign",
                  "importedName": "setDepositIdsWaitAssign",
                  "sourceValue": "actions/staff",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/staff.ts"
                },
                {
                  "localName": "earnExchangeListRequested",
                  "importedName": "earnExchangeListRequested",
                  "sourceValue": "actions/earnExchange",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/earnExchange.ts"
                },
                {
                  "localName": "toggleAssignStaffDepositModal",
                  "importedName": "toggleAssignStaffDepositModal",
                  "sourceValue": "actions/staff",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/staff.ts"
                },
                {
                  "localName": "assignStaffDepositRequested",
                  "importedName": "assignStaffDepositRequested",
                  "sourceValue": "actions/staff",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/staff.ts"
                },
                {
                  "localName": "setQueryEarnExchangeListType",
                  "importedName": "setQueryEarnExchangeListType",
                  "sourceValue": "actions/earnExchange",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/earnExchange.ts"
                },
                {
                  "localName": "viewRelatedOrderListRequested",
                  "importedName": "viewRelatedOrderListRequested",
                  "sourceValue": "actions/earnExchange",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/earnExchange.ts"
                },
                {
                  "localName": "resetRelateDetail",
                  "importedName": "resetRelateDetail",
                  "sourceValue": "actions/earnExchange",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/earnExchange.ts"
                },
                {
                  "localName": "getWhiteListRequested",
                  "importedName": "getWhiteListRequested",
                  "sourceValue": "actions/user",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts"
                },
                {
                  "localName": "staffListRequested",
                  "importedName": "staffListRequested",
                  "sourceValue": "actions/staff",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/staff.ts"
                },
                {
                  "localName": "resetAssignStaffDeposit",
                  "importedName": "resetAssignStaffDeposit",
                  "sourceValue": "actions/staff",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/staff.ts"
                },
                {
                  "localName": "addDepositIdsWaitAssign",
                  "importedName": "addDepositIdsWaitAssign",
                  "sourceValue": "actions/staff",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/staff.ts"
                },
                {
                  "localName": "removeDepositIdsWaitAssign",
                  "importedName": "removeDepositIdsWaitAssign",
                  "sourceValue": "actions/staff",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/staff.ts"
                },
                {
                  "localName": "downloadRequested",
                  "importedName": "downloadRequested",
                  "sourceValue": "actions/download",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/download.ts",
                  "usage": "EMDownloadUsages.BankSlip"
                },
                {
                  "isNamespace": false,
                  "localName": "push",
                  "importedName": "push",
                  "sourceValue": "react-router-redux",
                  "dependencyPath": "react-router-redux"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 202,
                  "column": 52,
                  "index": 5593
                },
                "end": {
                  "line": 1087,
                  "column": 1,
                  "index": 31926
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [
            "actions",
            "staffActions",
            "downloadActions",
            "userActions"
          ],
          "objectPropertyMap": {
            "push": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/EarnExchange/EarnExchangeDetail/index.tsx",
      "localConnect": "connect",
      "localCompose": "compose",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "actions",
              "sourceValue": "actions/earnExchange",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/earnExchange.ts",
              "exportNames": [
                "earnExchangeListRequested",
                "earnExchangeListSucceed",
                "earnExchangeListFailed",
                "hideEarnExchangeListError",
                "setQueryEarnExchangeListType",
                "viewRelatedOrderListRequested",
                "viewRelatedOrderListSucceed",
                "viewRelatedOrderListFailed",
                "hideViewRelatedOrderListError",
                "queryReceiveMoneyOrderListRequested",
                "queryReceiveMoneyOrderListSucceed",
                "queryReceiveMoneyOrderListFailed",
                "hideQueryReceiveMoneyOrderListError",
                "queryReceiveMoneyOrderDetailRequested",
                "queryReceiveMoneyOrderDetailSucceed",
                "queryReceiveMoneyOrderDetailFailed",
                "hideQueryReceiveMoneyOrderDetailError",
                "resetRelateDetail",
                "setHasUpdateOrder",
                "resetSetHasUpdateOrder",
                "switchRelatedOrderModal",
                "earnListDownloadRequested",
                "earnListDownloadSucceed",
                "earnListDownloadFailed",
                "toggleEarnListDownloadModal",
                "resetEarnListDownload",
                "cancelRelateRequested",
                "cancelRelateSucceed",
                "cancelRelateFailed",
                "resetCancelRelate",
                "setCancelRelateModal"
              ]
            },
            {
              "isNamespace": true,
              "localName": "previewActions",
              "sourceValue": "actions/preview",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/preview.ts",
              "exportNames": [
                "preview",
                "previewLoading",
                "removePreview",
                "resetAllPreview"
              ]
            },
            {
              "isNamespace": true,
              "localName": "staffActions",
              "sourceValue": "actions/staff",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/staff.ts",
              "exportNames": [
                "staffSuffixRequested",
                "staffSuffixSucceed",
                "staffSuffixFailed",
                "toggleStaffSuffixModal",
                "hideStaffSuffixError",
                "modifyStaffSuffixRequested",
                "modifyStaffSuffixSucceed",
                "modifyStaffSuffixFailed",
                "toggleModifyStaffSuffixModal",
                "resetModifyStaffSuffix",
                "addStaffRequested",
                "addStaffSucceed",
                "addStaffFailed",
                "setAddStaffStep",
                "hideAddStaffError",
                "setAddStaffAccount",
                "resetAddStaff",
                "staffListRequested",
                "staffListSucceed",
                "staffListFailed",
                "setStaffListStatus",
                "resetStaffList",
                "oneStaffInfoRequested",
                "oneStaffInfoSucceed",
                "oneStaffInfoFailed",
                "updateOneStaffRequested",
                "updateOneStaffSucceed",
                "updateOneStaffFailed",
                "hideUpdateOneStaffError",
                "resetUpdateOneStaff",
                "delOneStaffRequested",
                "delOneStaffSucceed",
                "delOneStaffFailed",
                "hideDelOneStaffError",
                "toggleDelOneStaffModal",
                "resetStaffPwRequested",
                "resetStaffPwSucceed",
                "resetStaffPwFailed",
                "genResetStaffPassword",
                "toggleResetStaffPwModal",
                "resetResetStaffPw",
                "assignStaffDepositRequested",
                "assignStaffDepositSucceed",
                "assignStaffDepositFailed",
                "toggleAssignStaffDepositModal",
                "setDepositIdsWaitAssign",
                "addDepositIdsWaitAssign",
                "removeDepositIdsWaitAssign",
                "resetDepositIdsWaitAssign",
                "resetAssignStaffDeposit"
              ]
            },
            {
              "isNamespace": true,
              "localName": "metaActions",
              "sourceValue": "actions/meta",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
              "exportNames": [
                "fetchMetaRequested",
                "fetchMetaSucceed",
                "fetchMetaFailed",
                "resetFetchMeta",
                "hideFetchMetaError"
              ]
            },
            {
              "isNamespace": true,
              "localName": "downloadActions",
              "sourceValue": "actions/download",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/download.ts",
              "exportNames": ["downloadRequested", "downloadSucceed", "downloadFailed"]
            },
            {
              "isNamespace": true,
              "localName": "refundActions",
              "sourceValue": "actions/earnRefund",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/earnRefund.ts",
              "exportNames": [
                "changeStep",
                "setRefundData",
                "refundApplyRequested",
                "refundApplySucceed",
                "refundApplyFailed",
                "cancelRefundRequested",
                "cancelRefundSucceed",
                "cancelRefundFailed",
                "resetCancelRefund",
                "setCancelRefundModal"
              ]
            },
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "EarnExchangeDetail",
              "loc": {
                "start": {
                  "line": 219,
                  "column": 2,
                  "index": 6779
                },
                "end": {
                  "line": 219,
                  "column": 20,
                  "index": 6797
                },
                "identifierName": "EarnExchangeDetail"
              },
              "actionsMethods": [
                {
                  "name": "staffListRequested"
                },
                {
                  "name": "viewRelatedOrderListRequested"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "staffListRequested",
                  "importedName": "staffListRequested",
                  "sourceValue": "actions/staff",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/staff.ts"
                },
                {
                  "localName": "viewRelatedOrderListRequested",
                  "importedName": "viewRelatedOrderListRequested",
                  "sourceValue": "actions/earnExchange",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/earnExchange.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 33,
                  "column": 6,
                  "index": 1565
                },
                "end": {
                  "line": 33,
                  "column": 24,
                  "index": 1583
                },
                "identifierName": "EarnExchangeDetail"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [
            "actions",
            "previewActions",
            "staffActions",
            "metaActions",
            "downloadActions",
            "refundActions"
          ],
          "objectPropertyMap": {
            "push": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Refund/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "earnExchangeAction",
              "sourceValue": "actions/earnExchange",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/earnExchange.ts",
              "exportNames": [
                "earnExchangeListRequested",
                "earnExchangeListSucceed",
                "earnExchangeListFailed",
                "hideEarnExchangeListError",
                "setQueryEarnExchangeListType",
                "viewRelatedOrderListRequested",
                "viewRelatedOrderListSucceed",
                "viewRelatedOrderListFailed",
                "hideViewRelatedOrderListError",
                "queryReceiveMoneyOrderListRequested",
                "queryReceiveMoneyOrderListSucceed",
                "queryReceiveMoneyOrderListFailed",
                "hideQueryReceiveMoneyOrderListError",
                "queryReceiveMoneyOrderDetailRequested",
                "queryReceiveMoneyOrderDetailSucceed",
                "queryReceiveMoneyOrderDetailFailed",
                "hideQueryReceiveMoneyOrderDetailError",
                "resetRelateDetail",
                "setHasUpdateOrder",
                "resetSetHasUpdateOrder",
                "switchRelatedOrderModal",
                "earnListDownloadRequested",
                "earnListDownloadSucceed",
                "earnListDownloadFailed",
                "toggleEarnListDownloadModal",
                "resetEarnListDownload",
                "cancelRelateRequested",
                "cancelRelateSucceed",
                "cancelRelateFailed",
                "resetCancelRelate",
                "setCancelRelateModal"
              ]
            },
            {
              "isNamespace": true,
              "localName": "fundAction",
              "sourceValue": "actions/fund",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fund.ts",
              "exportNames": [
                "getFrozenListRequested",
                "getFrozenListSucceed",
                "getFrozenListFailed",
                "initFrozenList",
                "getWithDrawSpeedFlagRequested",
                "getWithDrawSpeedFlagSucceed",
                "getWithDrawSpeedFlagFailed",
                "getWithDrawDateRequested",
                "getWithDrawDateSucceed",
                "getWithDrawDateFailed",
                "getBankCardInfoRequested",
                "getBankCardInfoSucceed",
                "getBankCardInfoFailed",
                "resetBankCardInfo"
              ]
            },
            {
              "isNamespace": true,
              "localName": "annexAction",
              "sourceValue": "actions/annex",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/annex.ts",
              "exportNames": [
                "uploadAnnexRequested",
                "uploadAnnexSucceed",
                "uploadAnnexFailed",
                "uploadAnnexInit",
                "previewAnnexRequested",
                "previewAnnexSucceed",
                "previewAnnexFailed",
                "previewAnnexInit",
                "deleteAnnex"
              ]
            },
            {
              "isNamespace": true,
              "localName": "refundAction",
              "sourceValue": "actions/refund",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/refund.ts",
              "exportNames": [
                "setRefundExchangeModal",
                "refundExchangeRequested",
                "refundExchangeSucceed",
                "refundExchangeFailed",
                "refundExchangeInit",
                "exchangeRateRequested",
                "exchangeRateSucceed",
                "exchangeRateFailed",
                "exchangeRateInit",
                "refundApplyRequested",
                "refundApplySucceed",
                "refundApplyFailed",
                "refundApplyInit",
                "setRefundStep",
                "setFxRequestId",
                "refundExchangeAvailableRequested",
                "refundExchangeAvailableSucceed",
                "refundExchangeAvailableFailed",
                "checkFieldRequested",
                "checkSwiftCodeRequested",
                "checkFieldSucceed",
                "checkFieldFailed",
                "refundReasonRequested",
                "refundReasonSucceed",
                "refundReasonFailed",
                "refundLocCreateRequested",
                "refundLocCreateSucceed",
                "refundLocCreateFailed",
                "beneficiaryMsgRequested",
                "beneficiaryMsgSucceed",
                "beneficiaryMsgFailed"
              ]
            },
            {
              "isNamespace": false,
              "localName": "destroy",
              "importedName": "destroy",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 73,
                  "column": 64,
                  "index": 2362
                },
                "end": {
                  "line": 276,
                  "column": 1,
                  "index": 8324
                }
              },
              "actionsMethods": [
                {
                  "name": "getFrozenListRequested",
                  "usage": "REFUND"
                },
                {
                  "name": "viewRelatedOrderListRequested"
                },
                {
                  "name": "beneficiaryMsgRequested"
                },
                {
                  "name": "destroy"
                },
                {
                  "name": "uploadAnnexInit",
                  "usage": "undefined.usage"
                },
                {
                  "name": "previewAnnexInit",
                  "usage": "undefined.usage"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "getFrozenListRequested",
                  "importedName": "getFrozenListRequested",
                  "sourceValue": "actions/fund",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fund.ts",
                  "usage": "REFUND"
                },
                {
                  "localName": "viewRelatedOrderListRequested",
                  "importedName": "viewRelatedOrderListRequested",
                  "sourceValue": "actions/earnExchange",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/earnExchange.ts"
                },
                {
                  "localName": "beneficiaryMsgRequested",
                  "importedName": "beneficiaryMsgRequested",
                  "sourceValue": "actions/refund",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/refund.ts"
                },
                {
                  "isNamespace": false,
                  "localName": "destroy",
                  "importedName": "destroy",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                },
                {
                  "localName": "uploadAnnexInit",
                  "importedName": "uploadAnnexInit",
                  "sourceValue": "actions/annex",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/annex.ts",
                  "usage": "undefined.usage"
                },
                {
                  "localName": "previewAnnexInit",
                  "importedName": "previewAnnexInit",
                  "sourceValue": "actions/annex",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/annex.ts",
                  "usage": "undefined.usage"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 73,
                  "column": 64,
                  "index": 2362
                },
                "end": {
                  "line": 276,
                  "column": 1,
                  "index": 8324
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [
            "earnExchangeAction",
            "fundAction",
            "annexAction",
            "refundAction"
          ],
          "objectPropertyMap": {
            "destroy": "destroy",
            "push": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Refund/RefundChoose/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "RefundChoose",
              "loc": {
                "start": {
                  "line": 114,
                  "column": 13,
                  "index": 3180
                },
                "end": {
                  "line": 114,
                  "column": 25,
                  "index": 3192
                },
                "identifierName": "RefundChoose"
              },
              "actionsMethods": [
                {
                  "name": "push"
                }
              ],
              "usedActionsDependencies": [
                {
                  "isNamespace": false,
                  "localName": "push",
                  "importedName": "push",
                  "sourceValue": "react-router-redux",
                  "dependencyPath": "react-router-redux"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 14,
                  "column": 6,
                  "index": 537
                },
                "end": {
                  "line": 14,
                  "column": 18,
                  "index": 549
                },
                "identifierName": "RefundChoose"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {
            "push": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Refund/RefundTT/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "refundAction",
              "sourceValue": "actions/refund",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/refund.ts",
              "exportNames": [
                "setRefundExchangeModal",
                "refundExchangeRequested",
                "refundExchangeSucceed",
                "refundExchangeFailed",
                "refundExchangeInit",
                "exchangeRateRequested",
                "exchangeRateSucceed",
                "exchangeRateFailed",
                "exchangeRateInit",
                "refundApplyRequested",
                "refundApplySucceed",
                "refundApplyFailed",
                "refundApplyInit",
                "setRefundStep",
                "setFxRequestId",
                "refundExchangeAvailableRequested",
                "refundExchangeAvailableSucceed",
                "refundExchangeAvailableFailed",
                "checkFieldRequested",
                "checkSwiftCodeRequested",
                "checkFieldSucceed",
                "checkFieldFailed",
                "refundReasonRequested",
                "refundReasonSucceed",
                "refundReasonFailed",
                "refundLocCreateRequested",
                "refundLocCreateSucceed",
                "refundLocCreateFailed",
                "beneficiaryMsgRequested",
                "beneficiaryMsgSucceed",
                "beneficiaryMsgFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "annexAction",
              "sourceValue": "actions/annex",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/annex.ts",
              "exportNames": [
                "uploadAnnexRequested",
                "uploadAnnexSucceed",
                "uploadAnnexFailed",
                "uploadAnnexInit",
                "previewAnnexRequested",
                "previewAnnexSucceed",
                "previewAnnexFailed",
                "previewAnnexInit",
                "deleteAnnex"
              ]
            },
            {
              "isNamespace": true,
              "localName": "metaActions",
              "sourceValue": "actions/meta",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
              "exportNames": [
                "fetchMetaRequested",
                "fetchMetaSucceed",
                "fetchMetaFailed",
                "resetFetchMeta",
                "hideFetchMetaError"
              ]
            },
            {
              "isNamespace": false,
              "localName": "change",
              "importedName": "change",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "initialize",
              "importedName": "initialize",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 58,
                  "column": 48,
                  "index": 1626
                },
                "end": {
                  "line": 191,
                  "column": 1,
                  "index": 5392
                }
              },
              "actionsMethods": [
                {
                  "name": "change"
                },
                {
                  "name": "refundExchangeAvailableRequested"
                },
                {
                  "name": "initialize"
                },
                {
                  "name": "fetchMetaRequested",
                  "usage": "EMMetaUsages.BeneficaryAddressProvince"
                },
                {
                  "name": "setRefundStep",
                  "usage": "TT"
                },
                {
                  "name": "setFxRequestId",
                  "usage": "TT"
                }
              ],
              "usedActionsDependencies": [
                {
                  "isNamespace": false,
                  "localName": "change",
                  "importedName": "change",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                },
                {
                  "localName": "refundExchangeAvailableRequested",
                  "importedName": "refundExchangeAvailableRequested",
                  "sourceValue": "actions/refund",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/refund.ts"
                },
                {
                  "isNamespace": false,
                  "localName": "initialize",
                  "importedName": "initialize",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                },
                {
                  "localName": "fetchMetaRequested",
                  "importedName": "fetchMetaRequested",
                  "sourceValue": "actions/meta",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
                  "usage": "EMMetaUsages.BeneficaryAddressProvince"
                },
                {
                  "localName": "setRefundStep",
                  "importedName": "setRefundStep",
                  "sourceValue": "actions/refund",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/refund.ts",
                  "usage": "TT"
                },
                {
                  "localName": "setFxRequestId",
                  "importedName": "setFxRequestId",
                  "sourceValue": "actions/refund",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/refund.ts",
                  "usage": "TT"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 58,
                  "column": 48,
                  "index": 1626
                },
                "end": {
                  "line": 191,
                  "column": 1,
                  "index": 5392
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["refundAction", "annexAction", "metaActions"],
          "objectPropertyMap": {
            "change": "change",
            "initialize": "initialize"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Refund/RefundMSG/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "refundAction",
              "sourceValue": "actions/refund",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/refund.ts",
              "exportNames": [
                "setRefundExchangeModal",
                "refundExchangeRequested",
                "refundExchangeSucceed",
                "refundExchangeFailed",
                "refundExchangeInit",
                "exchangeRateRequested",
                "exchangeRateSucceed",
                "exchangeRateFailed",
                "exchangeRateInit",
                "refundApplyRequested",
                "refundApplySucceed",
                "refundApplyFailed",
                "refundApplyInit",
                "setRefundStep",
                "setFxRequestId",
                "refundExchangeAvailableRequested",
                "refundExchangeAvailableSucceed",
                "refundExchangeAvailableFailed",
                "checkFieldRequested",
                "checkSwiftCodeRequested",
                "checkFieldSucceed",
                "checkFieldFailed",
                "refundReasonRequested",
                "refundReasonSucceed",
                "refundReasonFailed",
                "refundLocCreateRequested",
                "refundLocCreateSucceed",
                "refundLocCreateFailed",
                "beneficiaryMsgRequested",
                "beneficiaryMsgSucceed",
                "beneficiaryMsgFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "annexAction",
              "sourceValue": "actions/annex",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/annex.ts",
              "exportNames": [
                "uploadAnnexRequested",
                "uploadAnnexSucceed",
                "uploadAnnexFailed",
                "uploadAnnexInit",
                "previewAnnexRequested",
                "previewAnnexSucceed",
                "previewAnnexFailed",
                "previewAnnexInit",
                "deleteAnnex"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 33,
                  "column": 49,
                  "index": 922
                },
                "end": {
                  "line": 94,
                  "column": 1,
                  "index": 2938
                }
              },
              "actionsMethods": [
                {
                  "name": "refundExchangeAvailableRequested"
                },
                {
                  "name": "setRefundStep",
                  "usage": "MSG"
                },
                {
                  "name": "setFxRequestId",
                  "usage": "MSG"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "refundExchangeAvailableRequested",
                  "importedName": "refundExchangeAvailableRequested",
                  "sourceValue": "actions/refund",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/refund.ts"
                },
                {
                  "localName": "setRefundStep",
                  "importedName": "setRefundStep",
                  "sourceValue": "actions/refund",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/refund.ts",
                  "usage": "MSG"
                },
                {
                  "localName": "setFxRequestId",
                  "importedName": "setFxRequestId",
                  "sourceValue": "actions/refund",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/refund.ts",
                  "usage": "MSG"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 33,
                  "column": 49,
                  "index": 922
                },
                "end": {
                  "line": 94,
                  "column": 1,
                  "index": 2938
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["refundAction", "annexAction"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/ReceiveMoney/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "actions",
              "sourceValue": "actions/earnExchange",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/earnExchange.ts",
              "exportNames": [
                "earnExchangeListRequested",
                "earnExchangeListSucceed",
                "earnExchangeListFailed",
                "hideEarnExchangeListError",
                "setQueryEarnExchangeListType",
                "viewRelatedOrderListRequested",
                "viewRelatedOrderListSucceed",
                "viewRelatedOrderListFailed",
                "hideViewRelatedOrderListError",
                "queryReceiveMoneyOrderListRequested",
                "queryReceiveMoneyOrderListSucceed",
                "queryReceiveMoneyOrderListFailed",
                "hideQueryReceiveMoneyOrderListError",
                "queryReceiveMoneyOrderDetailRequested",
                "queryReceiveMoneyOrderDetailSucceed",
                "queryReceiveMoneyOrderDetailFailed",
                "hideQueryReceiveMoneyOrderDetailError",
                "resetRelateDetail",
                "setHasUpdateOrder",
                "resetSetHasUpdateOrder",
                "switchRelatedOrderModal",
                "earnListDownloadRequested",
                "earnListDownloadSucceed",
                "earnListDownloadFailed",
                "toggleEarnListDownloadModal",
                "resetEarnListDownload",
                "cancelRelateRequested",
                "cancelRelateSucceed",
                "cancelRelateFailed",
                "resetCancelRelate",
                "setCancelRelateModal"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 92,
                  "column": 52,
                  "index": 2357
                },
                "end": {
                  "line": 222,
                  "column": 1,
                  "index": 5798
                }
              },
              "actionsMethods": [
                {
                  "name": "queryReceiveMoneyOrderListRequested"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "queryReceiveMoneyOrderListRequested",
                  "importedName": "queryReceiveMoneyOrderListRequested",
                  "sourceValue": "actions/earnExchange",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/earnExchange.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 92,
                  "column": 52,
                  "index": 2357
                },
                "end": {
                  "line": 222,
                  "column": 1,
                  "index": 5798
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["actions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/ReceiveMoney/ReceiveMoneyDetail/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "actions",
              "sourceValue": "actions/earnExchange",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/earnExchange.ts",
              "exportNames": [
                "earnExchangeListRequested",
                "earnExchangeListSucceed",
                "earnExchangeListFailed",
                "hideEarnExchangeListError",
                "setQueryEarnExchangeListType",
                "viewRelatedOrderListRequested",
                "viewRelatedOrderListSucceed",
                "viewRelatedOrderListFailed",
                "hideViewRelatedOrderListError",
                "queryReceiveMoneyOrderListRequested",
                "queryReceiveMoneyOrderListSucceed",
                "queryReceiveMoneyOrderListFailed",
                "hideQueryReceiveMoneyOrderListError",
                "queryReceiveMoneyOrderDetailRequested",
                "queryReceiveMoneyOrderDetailSucceed",
                "queryReceiveMoneyOrderDetailFailed",
                "hideQueryReceiveMoneyOrderDetailError",
                "resetRelateDetail",
                "setHasUpdateOrder",
                "resetSetHasUpdateOrder",
                "switchRelatedOrderModal",
                "earnListDownloadRequested",
                "earnListDownloadSucceed",
                "earnListDownloadFailed",
                "toggleEarnListDownloadModal",
                "resetEarnListDownload",
                "cancelRelateRequested",
                "cancelRelateSucceed",
                "cancelRelateFailed",
                "resetCancelRelate",
                "setCancelRelateModal"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 34,
                  "column": 58,
                  "index": 1058
                },
                "end": {
                  "line": 146,
                  "column": 1,
                  "index": 4481
                }
              },
              "actionsMethods": [
                {
                  "name": "queryReceiveMoneyOrderDetailRequested"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "queryReceiveMoneyOrderDetailRequested",
                  "importedName": "queryReceiveMoneyOrderDetailRequested",
                  "sourceValue": "actions/earnExchange",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/earnExchange.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 34,
                  "column": 58,
                  "index": 1058
                },
                "end": {
                  "line": 146,
                  "column": 1,
                  "index": 4481
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["actions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/FixRate/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "actions",
              "sourceValue": "actions/fixRate",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fixRate.ts",
              "exportNames": [
                "getFixRateListRequested",
                "getFixRateListSucceed",
                "getFixRateListFailed",
                "hideGetFixRateListError",
                "fixRateTradeRequested",
                "fixRateTradeSucceed",
                "fixRateTradeFailed",
                "hideFixRateTradeError",
                "fixRateTradeModal",
                "resetFixRateTrade",
                "resetTrade",
                "getContractRateRequested",
                "getContractRateSucceed",
                "getContractRateFailed",
                "hideGetContractRateError",
                "updateFixRateCountDownSeconds",
                "stopFixRateCountDown",
                "resetFixRateCountDownSeconds",
                "resetRate",
                "getOneFixRateRequested",
                "getOneFixRateSucceed",
                "getOneFixRateFailed",
                "hideGetOneFixRateError",
                "setCancelItem",
                "resetCancelItem",
                "cancelOneFixRateContractRequested",
                "cancelOneFixRateContractSucceed",
                "cancelOneFixRateContractFailed",
                "hideCancelOneFixRateContractError",
                "cancelOneFixRateContractModal",
                "resetCancelOneFixRateContract",
                "getFixRateMarginFeeRequested",
                "getFixRateMarginFeeSucceed",
                "getFixRateMarginFeeFailed",
                "hideGetFixRateMarginFeeError",
                "resetMarginFee",
                "getFixRateCancelFeeRequested",
                "getFixRateCancelFeeSucceed",
                "getFixRateCancelFeeFailed",
                "hideGetFixRateCancelFeeError",
                "resetFixRateCancelFee",
                "getContractDeadlineRequested",
                "getContractDeadlineSucceed",
                "getContractDeadlineFailed",
                "hideGetContractDeadlineError",
                "resetGetContractDeadline",
                "setFixRateQueryType",
                "validFixRateOrderDateRequested",
                "validFixRateOrderDateSucceed",
                "validFixRateOrderDateFailed",
                "hideValidFixRateOrderDateError",
                "resetValidFixRateOrderDate"
              ]
            },
            {
              "isNamespace": true,
              "localName": "protocolActions",
              "sourceValue": "actions/protocol",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/protocol.ts",
              "exportNames": [
                "checkAgreedRequested",
                "checkAgreedSucceed",
                "checkAgreedFailed",
                "sendAgreementRequested",
                "sendAgreementSucceed",
                "sendAgreementFailed",
                "getProtocolContentRequested",
                "getProtocolContentSucceed",
                "getProtocolContentFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "submitActions",
              "sourceValue": "actions/submit",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/submit.ts",
              "exportNames": [
                "submitRequested",
                "submitSucceed",
                "submitFailed",
                "resetSubmit"
              ]
            },
            {
              "isNamespace": false,
              "localName": "goBack",
              "importedName": "goBack",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            },
            {
              "isNamespace": false,
              "localName": "replace",
              "importedName": "replace",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 74,
                  "column": 47,
                  "index": 2045
                },
                "end": {
                  "line": 138,
                  "column": 1,
                  "index": 3863
                }
              },
              "actionsMethods": [
                {
                  "name": "validFixRateOrderDateRequested"
                },
                {
                  "name": "replace"
                },
                {
                  "name": "submitRequested",
                  "usage": "EMSubmitUsages.ProtocolSign"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "validFixRateOrderDateRequested",
                  "importedName": "validFixRateOrderDateRequested",
                  "sourceValue": "actions/fixRate",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fixRate.ts"
                },
                {
                  "isNamespace": false,
                  "localName": "replace",
                  "importedName": "replace",
                  "sourceValue": "react-router-redux",
                  "dependencyPath": "react-router-redux"
                },
                {
                  "localName": "submitRequested",
                  "importedName": "submitRequested",
                  "sourceValue": "actions/submit",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/submit.ts",
                  "usage": "EMSubmitUsages.ProtocolSign"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 74,
                  "column": 47,
                  "index": 2045
                },
                "end": {
                  "line": 138,
                  "column": 1,
                  "index": 3863
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["actions", "protocolActions", "submitActions"],
          "objectPropertyMap": {
            "goBack": "goBack",
            "replace": "replace"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/FixRate/FixRateInfoList/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "actions",
              "sourceValue": "actions/fixRate",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fixRate.ts",
              "exportNames": [
                "getFixRateListRequested",
                "getFixRateListSucceed",
                "getFixRateListFailed",
                "hideGetFixRateListError",
                "fixRateTradeRequested",
                "fixRateTradeSucceed",
                "fixRateTradeFailed",
                "hideFixRateTradeError",
                "fixRateTradeModal",
                "resetFixRateTrade",
                "resetTrade",
                "getContractRateRequested",
                "getContractRateSucceed",
                "getContractRateFailed",
                "hideGetContractRateError",
                "updateFixRateCountDownSeconds",
                "stopFixRateCountDown",
                "resetFixRateCountDownSeconds",
                "resetRate",
                "getOneFixRateRequested",
                "getOneFixRateSucceed",
                "getOneFixRateFailed",
                "hideGetOneFixRateError",
                "setCancelItem",
                "resetCancelItem",
                "cancelOneFixRateContractRequested",
                "cancelOneFixRateContractSucceed",
                "cancelOneFixRateContractFailed",
                "hideCancelOneFixRateContractError",
                "cancelOneFixRateContractModal",
                "resetCancelOneFixRateContract",
                "getFixRateMarginFeeRequested",
                "getFixRateMarginFeeSucceed",
                "getFixRateMarginFeeFailed",
                "hideGetFixRateMarginFeeError",
                "resetMarginFee",
                "getFixRateCancelFeeRequested",
                "getFixRateCancelFeeSucceed",
                "getFixRateCancelFeeFailed",
                "hideGetFixRateCancelFeeError",
                "resetFixRateCancelFee",
                "getContractDeadlineRequested",
                "getContractDeadlineSucceed",
                "getContractDeadlineFailed",
                "hideGetContractDeadlineError",
                "resetGetContractDeadline",
                "setFixRateQueryType",
                "validFixRateOrderDateRequested",
                "validFixRateOrderDateSucceed",
                "validFixRateOrderDateFailed",
                "hideValidFixRateOrderDateError",
                "resetValidFixRateOrderDate"
              ]
            },
            {
              "isNamespace": false,
              "localName": "setFixRateQueryType",
              "importedName": "setFixRateQueryType",
              "sourceValue": "actions/fixRate",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fixRate.ts"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 357,
                  "column": 55,
                  "index": 10403
                },
                "end": {
                  "line": 571,
                  "column": 1,
                  "index": 17092
                }
              },
              "actionsMethods": [
                {
                  "name": "resetCancelItem"
                },
                {
                  "name": "resetCancelOneFixRateContract"
                },
                {
                  "name": "resetFixRateCancelFee"
                },
                {
                  "name": "cancelOneFixRateContractModal"
                },
                {
                  "name": "setCancelItem"
                },
                {
                  "name": "setFixRateQueryType"
                },
                {
                  "name": "getFixRateListRequested"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "resetCancelItem",
                  "importedName": "resetCancelItem",
                  "sourceValue": "actions/fixRate",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fixRate.ts"
                },
                {
                  "localName": "resetCancelOneFixRateContract",
                  "importedName": "resetCancelOneFixRateContract",
                  "sourceValue": "actions/fixRate",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fixRate.ts"
                },
                {
                  "localName": "resetFixRateCancelFee",
                  "importedName": "resetFixRateCancelFee",
                  "sourceValue": "actions/fixRate",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fixRate.ts"
                },
                {
                  "localName": "cancelOneFixRateContractModal",
                  "importedName": "cancelOneFixRateContractModal",
                  "sourceValue": "actions/fixRate",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fixRate.ts"
                },
                {
                  "localName": "setCancelItem",
                  "importedName": "setCancelItem",
                  "sourceValue": "actions/fixRate",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fixRate.ts"
                },
                {
                  "localName": "setFixRateQueryType",
                  "importedName": "setFixRateQueryType",
                  "sourceValue": "actions/fixRate",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fixRate.ts"
                },
                {
                  "localName": "getFixRateListRequested",
                  "importedName": "getFixRateListRequested",
                  "sourceValue": "actions/fixRate",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fixRate.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 357,
                  "column": 55,
                  "index": 10403
                },
                "end": {
                  "line": 571,
                  "column": 1,
                  "index": 17092
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["actions"],
          "objectPropertyMap": {
            "setFixRateQueryType": "setFixRateQueryType"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/FixRate/ContractDetail/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "actions",
              "sourceValue": "actions/fixRate",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fixRate.ts",
              "exportNames": [
                "getFixRateListRequested",
                "getFixRateListSucceed",
                "getFixRateListFailed",
                "hideGetFixRateListError",
                "fixRateTradeRequested",
                "fixRateTradeSucceed",
                "fixRateTradeFailed",
                "hideFixRateTradeError",
                "fixRateTradeModal",
                "resetFixRateTrade",
                "resetTrade",
                "getContractRateRequested",
                "getContractRateSucceed",
                "getContractRateFailed",
                "hideGetContractRateError",
                "updateFixRateCountDownSeconds",
                "stopFixRateCountDown",
                "resetFixRateCountDownSeconds",
                "resetRate",
                "getOneFixRateRequested",
                "getOneFixRateSucceed",
                "getOneFixRateFailed",
                "hideGetOneFixRateError",
                "setCancelItem",
                "resetCancelItem",
                "cancelOneFixRateContractRequested",
                "cancelOneFixRateContractSucceed",
                "cancelOneFixRateContractFailed",
                "hideCancelOneFixRateContractError",
                "cancelOneFixRateContractModal",
                "resetCancelOneFixRateContract",
                "getFixRateMarginFeeRequested",
                "getFixRateMarginFeeSucceed",
                "getFixRateMarginFeeFailed",
                "hideGetFixRateMarginFeeError",
                "resetMarginFee",
                "getFixRateCancelFeeRequested",
                "getFixRateCancelFeeSucceed",
                "getFixRateCancelFeeFailed",
                "hideGetFixRateCancelFeeError",
                "resetFixRateCancelFee",
                "getContractDeadlineRequested",
                "getContractDeadlineSucceed",
                "getContractDeadlineFailed",
                "hideGetContractDeadlineError",
                "resetGetContractDeadline",
                "setFixRateQueryType",
                "validFixRateOrderDateRequested",
                "validFixRateOrderDateSucceed",
                "validFixRateOrderDateFailed",
                "hideValidFixRateOrderDateError",
                "resetValidFixRateOrderDate"
              ]
            },
            {
              "isNamespace": false,
              "localName": "goBack",
              "importedName": "goBack",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 139,
                  "column": 54,
                  "index": 2799
                },
                "end": {
                  "line": 358,
                  "column": 1,
                  "index": 11000
                }
              },
              "actionsMethods": [
                {
                  "name": "getOneFixRateRequested"
                },
                {
                  "name": "validFixRateOrderDateRequested"
                },
                {
                  "name": "goBack"
                },
                {
                  "name": "resetCancelItem"
                },
                {
                  "name": "resetCancelOneFixRateContract"
                },
                {
                  "name": "resetFixRateCancelFee"
                },
                {
                  "name": "cancelOneFixRateContractModal"
                },
                {
                  "name": "setCancelItem"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "getOneFixRateRequested",
                  "importedName": "getOneFixRateRequested",
                  "sourceValue": "actions/fixRate",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fixRate.ts"
                },
                {
                  "localName": "validFixRateOrderDateRequested",
                  "importedName": "validFixRateOrderDateRequested",
                  "sourceValue": "actions/fixRate",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fixRate.ts"
                },
                {
                  "isNamespace": false,
                  "localName": "goBack",
                  "importedName": "goBack",
                  "sourceValue": "react-router-redux",
                  "dependencyPath": "react-router-redux"
                },
                {
                  "localName": "resetCancelItem",
                  "importedName": "resetCancelItem",
                  "sourceValue": "actions/fixRate",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fixRate.ts"
                },
                {
                  "localName": "resetCancelOneFixRateContract",
                  "importedName": "resetCancelOneFixRateContract",
                  "sourceValue": "actions/fixRate",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fixRate.ts"
                },
                {
                  "localName": "resetFixRateCancelFee",
                  "importedName": "resetFixRateCancelFee",
                  "sourceValue": "actions/fixRate",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fixRate.ts"
                },
                {
                  "localName": "cancelOneFixRateContractModal",
                  "importedName": "cancelOneFixRateContractModal",
                  "sourceValue": "actions/fixRate",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fixRate.ts"
                },
                {
                  "localName": "setCancelItem",
                  "importedName": "setCancelItem",
                  "sourceValue": "actions/fixRate",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fixRate.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 139,
                  "column": 54,
                  "index": 2799
                },
                "end": {
                  "line": 358,
                  "column": 1,
                  "index": 11000
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["actions"],
          "objectPropertyMap": {
            "goBack": "goBack"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Order/OrderDetail/index.tsx",
      "localConnect": "connect",
      "localCompose": "compose",
      "groups": [
        {
          "actionsParamName": "restActions",
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "previewActions",
              "sourceValue": "actions/preview",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/preview.ts",
              "exportNames": [
                "preview",
                "previewLoading",
                "removePreview",
                "resetAllPreview"
              ]
            },
            {
              "isNamespace": true,
              "localName": "collectionActions",
              "sourceValue": "actions/collection",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/collection.ts",
              "exportNames": [
                "collectionListRequested",
                "collectionListSucceed",
                "collectionListFailed",
                "hideCollectionListError",
                "addCollectionRequested",
                "addCollectionSucceed",
                "addCollectionFailed",
                "resetAddCollection",
                "hideAddCollectionError",
                "reAddCollectionRequested",
                "oneCollectionRequested",
                "oneCollectionSucceed",
                "oneCollectionFailed",
                "hideOneCollectionError",
                "allServerProviderRequested",
                "allServerProviderSucceed",
                "allServerProviderFailed",
                "hideAllServerProviderError",
                "changeVaStatusRequested",
                "changeVaStatusSucceed",
                "changeVaStatusFailed",
                "toggleSleepModal",
                "depositLimitRequested",
                "depositLimitSucceed",
                "depositLimitFailed"
              ]
            },
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [],
          "unknownElements": [],
          "spreadElementNames": ["restActions", "previewActions", "collectionActions"],
          "objectPropertyMap": {
            "push": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Order/OrderDraft/index.tsx",
      "localConnect": "connect",
      "localCompose": "compose",
      "groups": [
        {
          "actionsParamName": "restActions",
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "previewActions",
              "sourceValue": "actions/preview",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/preview.ts",
              "exportNames": [
                "preview",
                "previewLoading",
                "removePreview",
                "resetAllPreview"
              ]
            },
            {
              "isNamespace": true,
              "localName": "collectionActions",
              "sourceValue": "actions/collection",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/collection.ts",
              "exportNames": [
                "collectionListRequested",
                "collectionListSucceed",
                "collectionListFailed",
                "hideCollectionListError",
                "addCollectionRequested",
                "addCollectionSucceed",
                "addCollectionFailed",
                "resetAddCollection",
                "hideAddCollectionError",
                "reAddCollectionRequested",
                "oneCollectionRequested",
                "oneCollectionSucceed",
                "oneCollectionFailed",
                "hideOneCollectionError",
                "allServerProviderRequested",
                "allServerProviderSucceed",
                "allServerProviderFailed",
                "hideAllServerProviderError",
                "changeVaStatusRequested",
                "changeVaStatusSucceed",
                "changeVaStatusFailed",
                "toggleSleepModal",
                "depositLimitRequested",
                "depositLimitSucceed",
                "depositLimitFailed"
              ]
            },
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [],
          "unknownElements": [],
          "spreadElementNames": ["restActions", "previewActions", "collectionActions"],
          "objectPropertyMap": {
            "push": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/WithdrawSetting/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": false,
              "localName": "goBack",
              "importedName": "goBack",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 93,
                  "column": 55,
                  "index": 2309
                },
                "end": {
                  "line": 134,
                  "column": 1,
                  "index": 3688
                }
              },
              "actionsMethods": [
                {
                  "name": "goBack"
                }
              ],
              "usedActionsDependencies": [
                {
                  "isNamespace": false,
                  "localName": "goBack",
                  "importedName": "goBack",
                  "sourceValue": "react-router-redux",
                  "dependencyPath": "react-router-redux"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 93,
                  "column": 55,
                  "index": 2309
                },
                "end": {
                  "line": 134,
                  "column": 1,
                  "index": 3688
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {
            "goBack": "goBack"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/WithdrawSetting/WithdrawChoose/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "withdrawActions",
              "sourceValue": "actions/withdraw",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts",
              "exportNames": [
                "withdrawListRequested",
                "withdrawListSucceed",
                "withdrawListFailed",
                "hideWithdrawListError",
                "resetWithdrawList",
                "changeTab",
                "switchWithdrawApplyModal",
                "setWithdrawApplyIsReserved",
                "withdrawApplyRequested",
                "withdrawApplySucceed",
                "withdrawApplyFailed",
                "hideWithdrawApplyError",
                "setStep",
                "resetWithdrawApply",
                "withdrawInitRequested",
                "withdrawInitSucceed",
                "withdrawInitFailed",
                "hideWithdrawInitError",
                "withdrawDebtRequested",
                "withdrawDebtSucceed",
                "withdrawDebtFailed",
                "hideWithdrawDebtError",
                "removeRelatedItemOrderId",
                "addRelatedItemOrderId",
                "inputChangeRelatedItemValue",
                "resetRelatedOrders",
                "changeRelatedOrderChecked",
                "resetRelatedOrderChecked",
                "swithWithdrawFXApplyModal",
                "setWithdrawFXApplyStep",
                "setWithdrawFXApplyIsReserved",
                "withdrawFXApplyRequested",
                "withdrawFXApplySucceed",
                "withdrawFXApplyFailed",
                "hideWithdrawFXApplyError",
                "resetWithdrawFXApply",
                "isWithdrawErrorPage",
                "getFXWithdrawFeeRequested",
                "getFXWithdrawFeeSucceed",
                "getFXWithdrawFeeFailed",
                "hideGetFXWithdrawFeeError",
                "resetGetFXWithdrawFee",
                "getFXCanRelatedOrderRequested",
                "getFXCanRelatedOrderSucceed",
                "getFXCanRelatedOrderFailed",
                "hideGetFXCanRelatedOrderError",
                "resetGetFXCanRelatedOrder",
                "pushFXCanRelatedOrderRequested",
                "pushFXCanRelatedOrderSucceed",
                "pushFXCanRelatedOrderFailed",
                "swithWithdrawFXReApplyModal",
                "setWithdrawFXReApplyStep",
                "withdrawFXReApplyRequested",
                "withdrawFXReApplySucceed",
                "withdrawFXReApplyFailed",
                "resetWithdrawFXReApply",
                "hideWithdrawFXReApplyError",
                "getWithdrawReApplyItemRequested",
                "getWithdrawReApplyItemSucceed",
                "getWithdrawReApplyItemFailed",
                "resetGetWithdrawReApplyItem",
                "withdrawCheckBothFrozen",
                "withdrawCheckBothFrozenSucceed",
                "withdrawCheckBothFrozenFailed",
                "getFxWithdrawHolderTypeRequested",
                "getFxWithdrawHolderTypeSucceed",
                "getFxWithdrawHolderTypeFailed",
                "withdrawDetailRequested",
                "withdrawDetailSucceed",
                "withdrawDetailFailed",
                "resetWithdrawDetail",
                "withdrawFeeRequested",
                "withdrawFeeSucceed",
                "withdrawFeeFailed",
                "queryAddMaterialInfoRequested",
                "queryAddMaterialInfoSucceed",
                "queryAddMaterialInfoFailed",
                "addMaterialCommitRequested",
                "addMaterialCommitSucceed",
                "addMaterialCommitFailed",
                "resetAddMaterialCommit",
                "cancelFxWithdrawRequested",
                "cancelFxWithdrawSucceed",
                "cancelFxWithdrawFailed",
                "resetCancelFxWithdraw",
                "setCancelFxWithdrawModal",
                "cancelWithdrawRequested",
                "cancelWithdrawSucceed",
                "cancelWithdrawFailed",
                "resetCancelWithdraw",
                "setCancelWithdrawModal",
                "cancelOnGoingTransferRequested",
                "cancelOnGoingTransferSucceed",
                "cancelOnGoingTransferFailed",
                "resetCancelOnGoingTransfer",
                "setCancelOnGoingTransferModal",
                "withdrawSupportCcys",
                "withdrawSupportCcysSucceed",
                "withdrawSupportCcysFailed",
                "transferFeeRequested",
                "transferFeeSucceed",
                "transferFeeFailed",
                "setTransferApplyStep",
                "transferApplyRequested",
                "transferApplySucceed",
                "transferApplyFailed",
                "hideTransferApplyError",
                "resetTransferApply",
                "setTransferStep",
                "queryTransferAddMaterialInfoRequested",
                "queryTransferAddMaterialInfoSucceed",
                "queryTransferAddMaterialInfoFailed",
                "transferAddMaterialCommitRequested",
                "transferAddMaterialCommitSucceed",
                "transferAddMaterialCommitFailed",
                "resetTransferAddMaterialCommit",
                "cancelTransferRequested",
                "cancelTransferSucceed",
                "cancelTransferFailed",
                "resetCancelTransfer",
                "setCancelModal",
                "addCardInfoRequested",
                "addCardInfoSucceed",
                "addCardInfoFailed",
                "querySupportBoostRequested",
                "querySupportBoostSucceed",
                "querySupportBoostFailed",
                "resetQuerySupportBoost",
                "queryCanFastWithdrawWorkRequested",
                "queryCanFastWithdrawWorkFailed",
                "queryCanFastWithdrawWorkSuccess",
                "queryACrossBorderRequested",
                "queryACrossBorderSuccess",
                "queryACrossBorderFailed",
                "getAbRequested",
                "getAbSucceed",
                "getAbFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "withdrawalsActions",
              "sourceValue": "actions/withdrawals",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts",
              "exportNames": [
                "accountListRequested",
                "accountListSucceed",
                "accountListFailed",
                "hideAccountListError",
                "deleteItemRequested",
                "deleteItemSucceed",
                "deleteItemFailed",
                "swithDeleteItemModal",
                "setDeleteItemId",
                "setDeleteItemType",
                "hideDeleteItemError",
                "historyDetailRequested",
                "historyDetailSucceed",
                "historyDetailFailed",
                "hideHistoryDetailError",
                "createAccountRequested",
                "createAccountSucceed",
                "createAccountFailed",
                "setCreateAccountStep",
                "resetCreateAccount",
                "hideCreateAccountError",
                "withdrawFXAddRequested",
                "withdrawFXAddSucceed",
                "withdrawFXAddFailed",
                "hideWithdrawFXAddError",
                "setWithdrawFXAddStep",
                "resetWithdrawFXAdd",
                "withdrawFXAddVerifyRequested",
                "withdrawFXAddVerifySucceed",
                "withdrawFXAddVerifyFailed",
                "queryBanks",
                "queryBanksSucceed",
                "queryBanksFailed",
                "queryProvinces",
                "queryProvincesSucceed",
                "queryProvincesFailed",
                "getLegalProfile",
                "getLegalProfileSucceed",
                "getLegalProfileFailed",
                "createTransferAccountRequested",
                "createTransferAccountSucceed",
                "createTransferAccountFailed",
                "hideCreateTransferAccountError",
                "setCreateTransferAccountStep",
                "resetCreateTransferAccount",
                "setBeneficiaryNameError",
                "getBeneficiayAccountNoRequested",
                "getBeneficiayAccountNoSucceed",
                "getBeneficiayAccountNoFailed",
                "resetBeneficiayAccountNo",
                "getAccountLimitRequested",
                "getAccountLimitSucceed",
                "getAccountLimitFailed",
                "bindAccountPhoneNoRequested",
                "bindAccountPhoneNoSucceed",
                "bindAccountPhoneNoFailed",
                "bindAccountPhoneNoVerifyFailed",
                "swithBindPhoneNoModal",
                "getBeneficiayPhoneNoRequested",
                "getBeneficiayPhoneNoSucceed",
                "getBeneficiayPhoneNoFailed",
                "resetBeneficiayPhoneNo",
                "getFXPrivateAgreementRequested",
                "getFXPrivateAgreementSucceed",
                "getFXPrivateAgreementFailed",
                "getFXPublicAgreementRequested",
                "getFXPublicAgreementSucceed",
                "getFXPublicAgreementFailed",
                "getTransferPublicAgreementRequested",
                "getTransferPublicAgreementSucceed",
                "getTransferPublicAgreementFailed",
                "getWithdrawNormalAgreementRequested",
                "getWithdrawNormalAgreementSucceed",
                "getWithdrawNormalAgreementFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "fundActions",
              "sourceValue": "actions/fund",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fund.ts",
              "exportNames": [
                "getFrozenListRequested",
                "getFrozenListSucceed",
                "getFrozenListFailed",
                "initFrozenList",
                "getWithDrawSpeedFlagRequested",
                "getWithDrawSpeedFlagSucceed",
                "getWithDrawSpeedFlagFailed",
                "getWithDrawDateRequested",
                "getWithDrawDateSucceed",
                "getWithDrawDateFailed",
                "getBankCardInfoRequested",
                "getBankCardInfoSucceed",
                "getBankCardInfoFailed",
                "resetBankCardInfo"
              ]
            },
            {
              "isNamespace": true,
              "localName": "submitActions",
              "sourceValue": "actions/submit",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/submit.ts",
              "exportNames": [
                "submitRequested",
                "submitSucceed",
                "submitFailed",
                "resetSubmit"
              ]
            },
            {
              "isNamespace": true,
              "localName": "metaActions",
              "sourceValue": "actions/meta",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
              "exportNames": [
                "fetchMetaRequested",
                "fetchMetaSucceed",
                "fetchMetaFailed",
                "resetFetchMeta",
                "hideFetchMetaError"
              ]
            },
            {
              "isNamespace": true,
              "localName": "modalActions",
              "sourceValue": "actions/modal",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/modal.ts",
              "exportNames": [
                "toggleModalStatus",
                "toggleModalWithCallback",
                "toggleGlobalPriorityModalStatus"
              ]
            },
            {
              "isNamespace": true,
              "localName": "protocolActions",
              "sourceValue": "actions/protocol",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/protocol.ts",
              "exportNames": [
                "checkAgreedRequested",
                "checkAgreedSucceed",
                "checkAgreedFailed",
                "sendAgreementRequested",
                "sendAgreementSucceed",
                "sendAgreementFailed",
                "getProtocolContentRequested",
                "getProtocolContentSucceed",
                "getProtocolContentFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "userActions",
              "sourceValue": "actions/user",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts",
              "exportNames": [
                "getUserFlowId",
                "getUserFlowIdAndCaptcha",
                "getUserFlowIdSucceed",
                "getUserFlowIdFailed",
                "initUserFlowId",
                "getUserCaptcha",
                "getUserCaptchaSucceed",
                "getUserCaptchaFailed",
                "initUserCaptcha",
                "verifyMfaRequested",
                "verifyMfaSucceed",
                "verifyMfaFailed",
                "initVerifyMfa",
                "setAuthId",
                "resetAuthId",
                "executeAuthIdCallBackRequested",
                "executeAuthIdCallBackSucceed",
                "executeAuthIdCallBackFailed",
                "sendMfaMessageRequested",
                "getMfaCaptchaRequested",
                "getMfaCaptchaSucceed",
                "getMfaCaptchaFailed",
                "initMfaCaptcha",
                "getWhiteListRequested",
                "getWhiteListSucceed",
                "getWhiteListFailed",
                "getWhiteListInit",
                "setMfaJson",
                "resetMfaJson",
                "queryIndustryRequested",
                "queryIndustrySucceed",
                "queryIndustryFailed",
                "queryRestrictionList",
                "queryRestrictionListSucceed",
                "queryRestrictionListFailed"
              ]
            },
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 215,
                  "column": 39,
                  "index": 7086
                },
                "end": {
                  "line": 866,
                  "column": 1,
                  "index": 27716
                }
              },
              "actionsMethods": [
                {
                  "name": "exchangeStaffListRequest"
                },
                {
                  "name": "getWhiteListRequested"
                },
                {
                  "name": "fetchMetaRequested",
                  "usage": "EMMetaUsages.LaterProtocolVersion"
                },
                {
                  "name": "withdrawCheckBothFrozen"
                },
                {
                  "name": "getFrozenListRequested"
                },
                {
                  "name": "getProtocolContentRequested",
                  "usageVariable": "CZ_WITHDRAW_FX"
                },
                {
                  "name": "getWithDrawSpeedFlagRequested"
                },
                {
                  "name": "getAbRequested"
                },
                {
                  "name": "queryACrossBorderRequested"
                },
                {
                  "name": "initFrozenList"
                },
                {
                  "name": "submitRequested",
                  "usage": "EMSubmitUsages.FXSignIn"
                },
                {
                  "name": "submitRequested",
                  "usage": "EMSubmitUsages.AutoRegister"
                },
                {
                  "name": "push"
                },
                {
                  "name": "getLegalProfile"
                },
                {
                  "name": "toggleModalStatus",
                  "usage": "EMModalUsages.HKCrossBorderLimit"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "getWhiteListRequested",
                  "importedName": "getWhiteListRequested",
                  "sourceValue": "actions/user",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts"
                },
                {
                  "localName": "fetchMetaRequested",
                  "importedName": "fetchMetaRequested",
                  "sourceValue": "actions/meta",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
                  "usage": "EMMetaUsages.LaterProtocolVersion"
                },
                {
                  "localName": "withdrawCheckBothFrozen",
                  "importedName": "withdrawCheckBothFrozen",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "localName": "getFrozenListRequested",
                  "importedName": "getFrozenListRequested",
                  "sourceValue": "actions/fund",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fund.ts"
                },
                {
                  "localName": "getProtocolContentRequested",
                  "importedName": "getProtocolContentRequested",
                  "sourceValue": "actions/protocol",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/protocol.ts",
                  "usageVariable": "CZ_WITHDRAW_FX"
                },
                {
                  "localName": "getWithDrawSpeedFlagRequested",
                  "importedName": "getWithDrawSpeedFlagRequested",
                  "sourceValue": "actions/fund",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fund.ts"
                },
                {
                  "localName": "getAbRequested",
                  "importedName": "getAbRequested",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "localName": "queryACrossBorderRequested",
                  "importedName": "queryACrossBorderRequested",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "localName": "initFrozenList",
                  "importedName": "initFrozenList",
                  "sourceValue": "actions/fund",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fund.ts"
                },
                {
                  "localName": "submitRequested",
                  "importedName": "submitRequested",
                  "sourceValue": "actions/submit",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/submit.ts",
                  "usage": "EMSubmitUsages.FXSignIn"
                },
                {
                  "localName": "submitRequested",
                  "importedName": "submitRequested",
                  "sourceValue": "actions/submit",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/submit.ts",
                  "usage": "EMSubmitUsages.AutoRegister"
                },
                {
                  "isNamespace": false,
                  "localName": "push",
                  "importedName": "push",
                  "sourceValue": "react-router-redux",
                  "dependencyPath": "react-router-redux"
                },
                {
                  "localName": "getLegalProfile",
                  "importedName": "getLegalProfile",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts"
                },
                {
                  "localName": "toggleModalStatus",
                  "importedName": "toggleModalStatus",
                  "sourceValue": "actions/modal",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/modal.ts",
                  "usage": "EMModalUsages.HKCrossBorderLimit"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 215,
                  "column": 39,
                  "index": 7086
                },
                "end": {
                  "line": 866,
                  "column": 1,
                  "index": 27716
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [
            "withdrawActions",
            "withdrawalsActions",
            "fundActions",
            "submitActions",
            "metaActions",
            "modalActions",
            "protocolActions",
            "userActions"
          ],
          "objectPropertyMap": {
            "push": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/WithdrawSetting/WithdrawFXApply/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "withdrawActions",
              "sourceValue": "actions/withdraw",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts",
              "exportNames": [
                "withdrawListRequested",
                "withdrawListSucceed",
                "withdrawListFailed",
                "hideWithdrawListError",
                "resetWithdrawList",
                "changeTab",
                "switchWithdrawApplyModal",
                "setWithdrawApplyIsReserved",
                "withdrawApplyRequested",
                "withdrawApplySucceed",
                "withdrawApplyFailed",
                "hideWithdrawApplyError",
                "setStep",
                "resetWithdrawApply",
                "withdrawInitRequested",
                "withdrawInitSucceed",
                "withdrawInitFailed",
                "hideWithdrawInitError",
                "withdrawDebtRequested",
                "withdrawDebtSucceed",
                "withdrawDebtFailed",
                "hideWithdrawDebtError",
                "removeRelatedItemOrderId",
                "addRelatedItemOrderId",
                "inputChangeRelatedItemValue",
                "resetRelatedOrders",
                "changeRelatedOrderChecked",
                "resetRelatedOrderChecked",
                "swithWithdrawFXApplyModal",
                "setWithdrawFXApplyStep",
                "setWithdrawFXApplyIsReserved",
                "withdrawFXApplyRequested",
                "withdrawFXApplySucceed",
                "withdrawFXApplyFailed",
                "hideWithdrawFXApplyError",
                "resetWithdrawFXApply",
                "isWithdrawErrorPage",
                "getFXWithdrawFeeRequested",
                "getFXWithdrawFeeSucceed",
                "getFXWithdrawFeeFailed",
                "hideGetFXWithdrawFeeError",
                "resetGetFXWithdrawFee",
                "getFXCanRelatedOrderRequested",
                "getFXCanRelatedOrderSucceed",
                "getFXCanRelatedOrderFailed",
                "hideGetFXCanRelatedOrderError",
                "resetGetFXCanRelatedOrder",
                "pushFXCanRelatedOrderRequested",
                "pushFXCanRelatedOrderSucceed",
                "pushFXCanRelatedOrderFailed",
                "swithWithdrawFXReApplyModal",
                "setWithdrawFXReApplyStep",
                "withdrawFXReApplyRequested",
                "withdrawFXReApplySucceed",
                "withdrawFXReApplyFailed",
                "resetWithdrawFXReApply",
                "hideWithdrawFXReApplyError",
                "getWithdrawReApplyItemRequested",
                "getWithdrawReApplyItemSucceed",
                "getWithdrawReApplyItemFailed",
                "resetGetWithdrawReApplyItem",
                "withdrawCheckBothFrozen",
                "withdrawCheckBothFrozenSucceed",
                "withdrawCheckBothFrozenFailed",
                "getFxWithdrawHolderTypeRequested",
                "getFxWithdrawHolderTypeSucceed",
                "getFxWithdrawHolderTypeFailed",
                "withdrawDetailRequested",
                "withdrawDetailSucceed",
                "withdrawDetailFailed",
                "resetWithdrawDetail",
                "withdrawFeeRequested",
                "withdrawFeeSucceed",
                "withdrawFeeFailed",
                "queryAddMaterialInfoRequested",
                "queryAddMaterialInfoSucceed",
                "queryAddMaterialInfoFailed",
                "addMaterialCommitRequested",
                "addMaterialCommitSucceed",
                "addMaterialCommitFailed",
                "resetAddMaterialCommit",
                "cancelFxWithdrawRequested",
                "cancelFxWithdrawSucceed",
                "cancelFxWithdrawFailed",
                "resetCancelFxWithdraw",
                "setCancelFxWithdrawModal",
                "cancelWithdrawRequested",
                "cancelWithdrawSucceed",
                "cancelWithdrawFailed",
                "resetCancelWithdraw",
                "setCancelWithdrawModal",
                "cancelOnGoingTransferRequested",
                "cancelOnGoingTransferSucceed",
                "cancelOnGoingTransferFailed",
                "resetCancelOnGoingTransfer",
                "setCancelOnGoingTransferModal",
                "withdrawSupportCcys",
                "withdrawSupportCcysSucceed",
                "withdrawSupportCcysFailed",
                "transferFeeRequested",
                "transferFeeSucceed",
                "transferFeeFailed",
                "setTransferApplyStep",
                "transferApplyRequested",
                "transferApplySucceed",
                "transferApplyFailed",
                "hideTransferApplyError",
                "resetTransferApply",
                "setTransferStep",
                "queryTransferAddMaterialInfoRequested",
                "queryTransferAddMaterialInfoSucceed",
                "queryTransferAddMaterialInfoFailed",
                "transferAddMaterialCommitRequested",
                "transferAddMaterialCommitSucceed",
                "transferAddMaterialCommitFailed",
                "resetTransferAddMaterialCommit",
                "cancelTransferRequested",
                "cancelTransferSucceed",
                "cancelTransferFailed",
                "resetCancelTransfer",
                "setCancelModal",
                "addCardInfoRequested",
                "addCardInfoSucceed",
                "addCardInfoFailed",
                "querySupportBoostRequested",
                "querySupportBoostSucceed",
                "querySupportBoostFailed",
                "resetQuerySupportBoost",
                "queryCanFastWithdrawWorkRequested",
                "queryCanFastWithdrawWorkFailed",
                "queryCanFastWithdrawWorkSuccess",
                "queryACrossBorderRequested",
                "queryACrossBorderSuccess",
                "queryACrossBorderFailed",
                "getAbRequested",
                "getAbSucceed",
                "getAbFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "fundActions",
              "sourceValue": "actions/fund",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fund.ts",
              "exportNames": [
                "getFrozenListRequested",
                "getFrozenListSucceed",
                "getFrozenListFailed",
                "initFrozenList",
                "getWithDrawSpeedFlagRequested",
                "getWithDrawSpeedFlagSucceed",
                "getWithDrawSpeedFlagFailed",
                "getWithDrawDateRequested",
                "getWithDrawDateSucceed",
                "getWithDrawDateFailed",
                "getBankCardInfoRequested",
                "getBankCardInfoSucceed",
                "getBankCardInfoFailed",
                "resetBankCardInfo"
              ]
            },
            {
              "isNamespace": true,
              "localName": "ticketActions",
              "sourceValue": "actions/ticket",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/ticket.ts",
              "exportNames": [
                "ticketListRequested",
                "ticketListSucceed",
                "ticketListFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "metaActions",
              "sourceValue": "actions/meta",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
              "exportNames": [
                "fetchMetaRequested",
                "fetchMetaSucceed",
                "fetchMetaFailed",
                "resetFetchMeta",
                "hideFetchMetaError"
              ]
            },
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 70,
                  "column": 55,
                  "index": 2025
                },
                "end": {
                  "line": 125,
                  "column": 1,
                  "index": 3709
                }
              },
              "actionsMethods": [
                {
                  "name": "getFrozenListRequested",
                  "usage": "CROSS_BORDER"
                },
                {
                  "name": "ticketListRequested"
                },
                {
                  "name": "getFxWithdrawHolderTypeRequested"
                },
                {
                  "name": "getWithDrawSpeedFlagRequested"
                },
                {
                  "name": "fetchMetaRequested",
                  "usage": "EMMetaUsages.DeductionAmount"
                },
                {
                  "name": "initFrozenList"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "getFrozenListRequested",
                  "importedName": "getFrozenListRequested",
                  "sourceValue": "actions/fund",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fund.ts",
                  "usage": "CROSS_BORDER"
                },
                {
                  "localName": "ticketListRequested",
                  "importedName": "ticketListRequested",
                  "sourceValue": "actions/ticket",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/ticket.ts"
                },
                {
                  "localName": "getFxWithdrawHolderTypeRequested",
                  "importedName": "getFxWithdrawHolderTypeRequested",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "localName": "getWithDrawSpeedFlagRequested",
                  "importedName": "getWithDrawSpeedFlagRequested",
                  "sourceValue": "actions/fund",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fund.ts"
                },
                {
                  "localName": "fetchMetaRequested",
                  "importedName": "fetchMetaRequested",
                  "sourceValue": "actions/meta",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
                  "usage": "EMMetaUsages.DeductionAmount"
                },
                {
                  "localName": "initFrozenList",
                  "importedName": "initFrozenList",
                  "sourceValue": "actions/fund",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fund.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 70,
                  "column": 55,
                  "index": 2025
                },
                "end": {
                  "line": 125,
                  "column": 1,
                  "index": 3709
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [
            "withdrawActions",
            "fundActions",
            "ticketActions",
            "metaActions"
          ],
          "objectPropertyMap": {
            "push": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/WithdrawSetting/WithdrawFXReApply/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "withdrawActions",
              "sourceValue": "actions/withdraw",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts",
              "exportNames": [
                "withdrawListRequested",
                "withdrawListSucceed",
                "withdrawListFailed",
                "hideWithdrawListError",
                "resetWithdrawList",
                "changeTab",
                "switchWithdrawApplyModal",
                "setWithdrawApplyIsReserved",
                "withdrawApplyRequested",
                "withdrawApplySucceed",
                "withdrawApplyFailed",
                "hideWithdrawApplyError",
                "setStep",
                "resetWithdrawApply",
                "withdrawInitRequested",
                "withdrawInitSucceed",
                "withdrawInitFailed",
                "hideWithdrawInitError",
                "withdrawDebtRequested",
                "withdrawDebtSucceed",
                "withdrawDebtFailed",
                "hideWithdrawDebtError",
                "removeRelatedItemOrderId",
                "addRelatedItemOrderId",
                "inputChangeRelatedItemValue",
                "resetRelatedOrders",
                "changeRelatedOrderChecked",
                "resetRelatedOrderChecked",
                "swithWithdrawFXApplyModal",
                "setWithdrawFXApplyStep",
                "setWithdrawFXApplyIsReserved",
                "withdrawFXApplyRequested",
                "withdrawFXApplySucceed",
                "withdrawFXApplyFailed",
                "hideWithdrawFXApplyError",
                "resetWithdrawFXApply",
                "isWithdrawErrorPage",
                "getFXWithdrawFeeRequested",
                "getFXWithdrawFeeSucceed",
                "getFXWithdrawFeeFailed",
                "hideGetFXWithdrawFeeError",
                "resetGetFXWithdrawFee",
                "getFXCanRelatedOrderRequested",
                "getFXCanRelatedOrderSucceed",
                "getFXCanRelatedOrderFailed",
                "hideGetFXCanRelatedOrderError",
                "resetGetFXCanRelatedOrder",
                "pushFXCanRelatedOrderRequested",
                "pushFXCanRelatedOrderSucceed",
                "pushFXCanRelatedOrderFailed",
                "swithWithdrawFXReApplyModal",
                "setWithdrawFXReApplyStep",
                "withdrawFXReApplyRequested",
                "withdrawFXReApplySucceed",
                "withdrawFXReApplyFailed",
                "resetWithdrawFXReApply",
                "hideWithdrawFXReApplyError",
                "getWithdrawReApplyItemRequested",
                "getWithdrawReApplyItemSucceed",
                "getWithdrawReApplyItemFailed",
                "resetGetWithdrawReApplyItem",
                "withdrawCheckBothFrozen",
                "withdrawCheckBothFrozenSucceed",
                "withdrawCheckBothFrozenFailed",
                "getFxWithdrawHolderTypeRequested",
                "getFxWithdrawHolderTypeSucceed",
                "getFxWithdrawHolderTypeFailed",
                "withdrawDetailRequested",
                "withdrawDetailSucceed",
                "withdrawDetailFailed",
                "resetWithdrawDetail",
                "withdrawFeeRequested",
                "withdrawFeeSucceed",
                "withdrawFeeFailed",
                "queryAddMaterialInfoRequested",
                "queryAddMaterialInfoSucceed",
                "queryAddMaterialInfoFailed",
                "addMaterialCommitRequested",
                "addMaterialCommitSucceed",
                "addMaterialCommitFailed",
                "resetAddMaterialCommit",
                "cancelFxWithdrawRequested",
                "cancelFxWithdrawSucceed",
                "cancelFxWithdrawFailed",
                "resetCancelFxWithdraw",
                "setCancelFxWithdrawModal",
                "cancelWithdrawRequested",
                "cancelWithdrawSucceed",
                "cancelWithdrawFailed",
                "resetCancelWithdraw",
                "setCancelWithdrawModal",
                "cancelOnGoingTransferRequested",
                "cancelOnGoingTransferSucceed",
                "cancelOnGoingTransferFailed",
                "resetCancelOnGoingTransfer",
                "setCancelOnGoingTransferModal",
                "withdrawSupportCcys",
                "withdrawSupportCcysSucceed",
                "withdrawSupportCcysFailed",
                "transferFeeRequested",
                "transferFeeSucceed",
                "transferFeeFailed",
                "setTransferApplyStep",
                "transferApplyRequested",
                "transferApplySucceed",
                "transferApplyFailed",
                "hideTransferApplyError",
                "resetTransferApply",
                "setTransferStep",
                "queryTransferAddMaterialInfoRequested",
                "queryTransferAddMaterialInfoSucceed",
                "queryTransferAddMaterialInfoFailed",
                "transferAddMaterialCommitRequested",
                "transferAddMaterialCommitSucceed",
                "transferAddMaterialCommitFailed",
                "resetTransferAddMaterialCommit",
                "cancelTransferRequested",
                "cancelTransferSucceed",
                "cancelTransferFailed",
                "resetCancelTransfer",
                "setCancelModal",
                "addCardInfoRequested",
                "addCardInfoSucceed",
                "addCardInfoFailed",
                "querySupportBoostRequested",
                "querySupportBoostSucceed",
                "querySupportBoostFailed",
                "resetQuerySupportBoost",
                "queryCanFastWithdrawWorkRequested",
                "queryCanFastWithdrawWorkFailed",
                "queryCanFastWithdrawWorkSuccess",
                "queryACrossBorderRequested",
                "queryACrossBorderSuccess",
                "queryACrossBorderFailed",
                "getAbRequested",
                "getAbSucceed",
                "getAbFailed"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 36,
                  "column": 57,
                  "index": 946
                },
                "end": {
                  "line": 75,
                  "column": 1,
                  "index": 2269
                }
              },
              "actionsMethods": [
                {
                  "name": "getWithdrawReApplyItemRequested"
                },
                {
                  "name": "resetWithdrawFXReApply"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "getWithdrawReApplyItemRequested",
                  "importedName": "getWithdrawReApplyItemRequested",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "localName": "resetWithdrawFXReApply",
                  "importedName": "resetWithdrawFXReApply",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 36,
                  "column": 57,
                  "index": 946
                },
                "end": {
                  "line": 75,
                  "column": 1,
                  "index": 2269
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["withdrawActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/WithdrawSetting/WithdrawFXAddMaterial/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "withdrawActions",
              "sourceValue": "actions/withdraw",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts",
              "exportNames": [
                "withdrawListRequested",
                "withdrawListSucceed",
                "withdrawListFailed",
                "hideWithdrawListError",
                "resetWithdrawList",
                "changeTab",
                "switchWithdrawApplyModal",
                "setWithdrawApplyIsReserved",
                "withdrawApplyRequested",
                "withdrawApplySucceed",
                "withdrawApplyFailed",
                "hideWithdrawApplyError",
                "setStep",
                "resetWithdrawApply",
                "withdrawInitRequested",
                "withdrawInitSucceed",
                "withdrawInitFailed",
                "hideWithdrawInitError",
                "withdrawDebtRequested",
                "withdrawDebtSucceed",
                "withdrawDebtFailed",
                "hideWithdrawDebtError",
                "removeRelatedItemOrderId",
                "addRelatedItemOrderId",
                "inputChangeRelatedItemValue",
                "resetRelatedOrders",
                "changeRelatedOrderChecked",
                "resetRelatedOrderChecked",
                "swithWithdrawFXApplyModal",
                "setWithdrawFXApplyStep",
                "setWithdrawFXApplyIsReserved",
                "withdrawFXApplyRequested",
                "withdrawFXApplySucceed",
                "withdrawFXApplyFailed",
                "hideWithdrawFXApplyError",
                "resetWithdrawFXApply",
                "isWithdrawErrorPage",
                "getFXWithdrawFeeRequested",
                "getFXWithdrawFeeSucceed",
                "getFXWithdrawFeeFailed",
                "hideGetFXWithdrawFeeError",
                "resetGetFXWithdrawFee",
                "getFXCanRelatedOrderRequested",
                "getFXCanRelatedOrderSucceed",
                "getFXCanRelatedOrderFailed",
                "hideGetFXCanRelatedOrderError",
                "resetGetFXCanRelatedOrder",
                "pushFXCanRelatedOrderRequested",
                "pushFXCanRelatedOrderSucceed",
                "pushFXCanRelatedOrderFailed",
                "swithWithdrawFXReApplyModal",
                "setWithdrawFXReApplyStep",
                "withdrawFXReApplyRequested",
                "withdrawFXReApplySucceed",
                "withdrawFXReApplyFailed",
                "resetWithdrawFXReApply",
                "hideWithdrawFXReApplyError",
                "getWithdrawReApplyItemRequested",
                "getWithdrawReApplyItemSucceed",
                "getWithdrawReApplyItemFailed",
                "resetGetWithdrawReApplyItem",
                "withdrawCheckBothFrozen",
                "withdrawCheckBothFrozenSucceed",
                "withdrawCheckBothFrozenFailed",
                "getFxWithdrawHolderTypeRequested",
                "getFxWithdrawHolderTypeSucceed",
                "getFxWithdrawHolderTypeFailed",
                "withdrawDetailRequested",
                "withdrawDetailSucceed",
                "withdrawDetailFailed",
                "resetWithdrawDetail",
                "withdrawFeeRequested",
                "withdrawFeeSucceed",
                "withdrawFeeFailed",
                "queryAddMaterialInfoRequested",
                "queryAddMaterialInfoSucceed",
                "queryAddMaterialInfoFailed",
                "addMaterialCommitRequested",
                "addMaterialCommitSucceed",
                "addMaterialCommitFailed",
                "resetAddMaterialCommit",
                "cancelFxWithdrawRequested",
                "cancelFxWithdrawSucceed",
                "cancelFxWithdrawFailed",
                "resetCancelFxWithdraw",
                "setCancelFxWithdrawModal",
                "cancelWithdrawRequested",
                "cancelWithdrawSucceed",
                "cancelWithdrawFailed",
                "resetCancelWithdraw",
                "setCancelWithdrawModal",
                "cancelOnGoingTransferRequested",
                "cancelOnGoingTransferSucceed",
                "cancelOnGoingTransferFailed",
                "resetCancelOnGoingTransfer",
                "setCancelOnGoingTransferModal",
                "withdrawSupportCcys",
                "withdrawSupportCcysSucceed",
                "withdrawSupportCcysFailed",
                "transferFeeRequested",
                "transferFeeSucceed",
                "transferFeeFailed",
                "setTransferApplyStep",
                "transferApplyRequested",
                "transferApplySucceed",
                "transferApplyFailed",
                "hideTransferApplyError",
                "resetTransferApply",
                "setTransferStep",
                "queryTransferAddMaterialInfoRequested",
                "queryTransferAddMaterialInfoSucceed",
                "queryTransferAddMaterialInfoFailed",
                "transferAddMaterialCommitRequested",
                "transferAddMaterialCommitSucceed",
                "transferAddMaterialCommitFailed",
                "resetTransferAddMaterialCommit",
                "cancelTransferRequested",
                "cancelTransferSucceed",
                "cancelTransferFailed",
                "resetCancelTransfer",
                "setCancelModal",
                "addCardInfoRequested",
                "addCardInfoSucceed",
                "addCardInfoFailed",
                "querySupportBoostRequested",
                "querySupportBoostSucceed",
                "querySupportBoostFailed",
                "resetQuerySupportBoost",
                "queryCanFastWithdrawWorkRequested",
                "queryCanFastWithdrawWorkFailed",
                "queryCanFastWithdrawWorkSuccess",
                "queryACrossBorderRequested",
                "queryACrossBorderSuccess",
                "queryACrossBorderFailed",
                "getAbRequested",
                "getAbSucceed",
                "getAbFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "metaActions",
              "sourceValue": "actions/meta",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
              "exportNames": [
                "fetchMetaRequested",
                "fetchMetaSucceed",
                "fetchMetaFailed",
                "resetFetchMeta",
                "hideFetchMetaError"
              ]
            },
            {
              "isNamespace": true,
              "localName": "modalActions",
              "sourceValue": "actions/modal",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/modal.ts",
              "exportNames": [
                "toggleModalStatus",
                "toggleModalWithCallback",
                "toggleGlobalPriorityModalStatus"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 72,
                  "column": 71,
                  "index": 2458
                },
                "end": {
                  "line": 375,
                  "column": 1,
                  "index": 13209
                }
              },
              "actionsMethods": [
                {
                  "name": "queryAddMaterialInfoRequested"
                },
                {
                  "name": "resetAddMaterialCommit"
                },
                {
                  "name": "resetCancelFxWithdraw"
                },
                {
                  "name": "fetchMetaRequested",
                  "usage": "EMMetaUsages.CancelLimitDay"
                },
                {
                  "name": "addMaterialCommitRequested"
                },
                {
                  "name": "setCancelFxWithdrawModal"
                },
                {
                  "name": "cancelFxWithdrawRequested"
                },
                {
                  "name": "toggleModalStatus",
                  "usage": "EMModalUsages.AddMaterialPromptModal"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "queryAddMaterialInfoRequested",
                  "importedName": "queryAddMaterialInfoRequested",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "localName": "resetAddMaterialCommit",
                  "importedName": "resetAddMaterialCommit",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "localName": "resetCancelFxWithdraw",
                  "importedName": "resetCancelFxWithdraw",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "localName": "fetchMetaRequested",
                  "importedName": "fetchMetaRequested",
                  "sourceValue": "actions/meta",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
                  "usage": "EMMetaUsages.CancelLimitDay"
                },
                {
                  "localName": "addMaterialCommitRequested",
                  "importedName": "addMaterialCommitRequested",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "localName": "setCancelFxWithdrawModal",
                  "importedName": "setCancelFxWithdrawModal",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "localName": "cancelFxWithdrawRequested",
                  "importedName": "cancelFxWithdrawRequested",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "localName": "toggleModalStatus",
                  "importedName": "toggleModalStatus",
                  "sourceValue": "actions/modal",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/modal.ts",
                  "usage": "EMModalUsages.AddMaterialPromptModal"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 72,
                  "column": 71,
                  "index": 2458
                },
                "end": {
                  "line": 375,
                  "column": 1,
                  "index": 13209
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["withdrawActions", "metaActions", "modalActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/WithdrawSetting/WithdrawTransferAddMaterial/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "fileActions",
              "sourceValue": "actions/file",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/file.ts",
              "exportNames": [
                "uploadFileRequested",
                "uploadFileSucceed",
                "uploadFileFailed",
                "hideUploadFileError",
                "deleteFile",
                "deleteSyncFile",
                "resetFile",
                "resetCreateTransferAccountFile",
                "resetAllFile",
                "fileDownload",
                "getThumbnailRequested",
                "getThumbnailSucceed",
                "getThumbnailFailed",
                "initGetThumbnail",
                "setAnnexeRenameModal",
                "updateAnnexeFileName"
              ]
            },
            {
              "isNamespace": true,
              "localName": "withdrawActions",
              "sourceValue": "actions/withdraw",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts",
              "exportNames": [
                "withdrawListRequested",
                "withdrawListSucceed",
                "withdrawListFailed",
                "hideWithdrawListError",
                "resetWithdrawList",
                "changeTab",
                "switchWithdrawApplyModal",
                "setWithdrawApplyIsReserved",
                "withdrawApplyRequested",
                "withdrawApplySucceed",
                "withdrawApplyFailed",
                "hideWithdrawApplyError",
                "setStep",
                "resetWithdrawApply",
                "withdrawInitRequested",
                "withdrawInitSucceed",
                "withdrawInitFailed",
                "hideWithdrawInitError",
                "withdrawDebtRequested",
                "withdrawDebtSucceed",
                "withdrawDebtFailed",
                "hideWithdrawDebtError",
                "removeRelatedItemOrderId",
                "addRelatedItemOrderId",
                "inputChangeRelatedItemValue",
                "resetRelatedOrders",
                "changeRelatedOrderChecked",
                "resetRelatedOrderChecked",
                "swithWithdrawFXApplyModal",
                "setWithdrawFXApplyStep",
                "setWithdrawFXApplyIsReserved",
                "withdrawFXApplyRequested",
                "withdrawFXApplySucceed",
                "withdrawFXApplyFailed",
                "hideWithdrawFXApplyError",
                "resetWithdrawFXApply",
                "isWithdrawErrorPage",
                "getFXWithdrawFeeRequested",
                "getFXWithdrawFeeSucceed",
                "getFXWithdrawFeeFailed",
                "hideGetFXWithdrawFeeError",
                "resetGetFXWithdrawFee",
                "getFXCanRelatedOrderRequested",
                "getFXCanRelatedOrderSucceed",
                "getFXCanRelatedOrderFailed",
                "hideGetFXCanRelatedOrderError",
                "resetGetFXCanRelatedOrder",
                "pushFXCanRelatedOrderRequested",
                "pushFXCanRelatedOrderSucceed",
                "pushFXCanRelatedOrderFailed",
                "swithWithdrawFXReApplyModal",
                "setWithdrawFXReApplyStep",
                "withdrawFXReApplyRequested",
                "withdrawFXReApplySucceed",
                "withdrawFXReApplyFailed",
                "resetWithdrawFXReApply",
                "hideWithdrawFXReApplyError",
                "getWithdrawReApplyItemRequested",
                "getWithdrawReApplyItemSucceed",
                "getWithdrawReApplyItemFailed",
                "resetGetWithdrawReApplyItem",
                "withdrawCheckBothFrozen",
                "withdrawCheckBothFrozenSucceed",
                "withdrawCheckBothFrozenFailed",
                "getFxWithdrawHolderTypeRequested",
                "getFxWithdrawHolderTypeSucceed",
                "getFxWithdrawHolderTypeFailed",
                "withdrawDetailRequested",
                "withdrawDetailSucceed",
                "withdrawDetailFailed",
                "resetWithdrawDetail",
                "withdrawFeeRequested",
                "withdrawFeeSucceed",
                "withdrawFeeFailed",
                "queryAddMaterialInfoRequested",
                "queryAddMaterialInfoSucceed",
                "queryAddMaterialInfoFailed",
                "addMaterialCommitRequested",
                "addMaterialCommitSucceed",
                "addMaterialCommitFailed",
                "resetAddMaterialCommit",
                "cancelFxWithdrawRequested",
                "cancelFxWithdrawSucceed",
                "cancelFxWithdrawFailed",
                "resetCancelFxWithdraw",
                "setCancelFxWithdrawModal",
                "cancelWithdrawRequested",
                "cancelWithdrawSucceed",
                "cancelWithdrawFailed",
                "resetCancelWithdraw",
                "setCancelWithdrawModal",
                "cancelOnGoingTransferRequested",
                "cancelOnGoingTransferSucceed",
                "cancelOnGoingTransferFailed",
                "resetCancelOnGoingTransfer",
                "setCancelOnGoingTransferModal",
                "withdrawSupportCcys",
                "withdrawSupportCcysSucceed",
                "withdrawSupportCcysFailed",
                "transferFeeRequested",
                "transferFeeSucceed",
                "transferFeeFailed",
                "setTransferApplyStep",
                "transferApplyRequested",
                "transferApplySucceed",
                "transferApplyFailed",
                "hideTransferApplyError",
                "resetTransferApply",
                "setTransferStep",
                "queryTransferAddMaterialInfoRequested",
                "queryTransferAddMaterialInfoSucceed",
                "queryTransferAddMaterialInfoFailed",
                "transferAddMaterialCommitRequested",
                "transferAddMaterialCommitSucceed",
                "transferAddMaterialCommitFailed",
                "resetTransferAddMaterialCommit",
                "cancelTransferRequested",
                "cancelTransferSucceed",
                "cancelTransferFailed",
                "resetCancelTransfer",
                "setCancelModal",
                "addCardInfoRequested",
                "addCardInfoSucceed",
                "addCardInfoFailed",
                "querySupportBoostRequested",
                "querySupportBoostSucceed",
                "querySupportBoostFailed",
                "resetQuerySupportBoost",
                "queryCanFastWithdrawWorkRequested",
                "queryCanFastWithdrawWorkFailed",
                "queryCanFastWithdrawWorkSuccess",
                "queryACrossBorderRequested",
                "queryACrossBorderSuccess",
                "queryACrossBorderFailed",
                "getAbRequested",
                "getAbSucceed",
                "getAbFailed"
              ]
            },
            {
              "isNamespace": false,
              "localName": "reset",
              "importedName": "reset",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 37,
                  "column": 67,
                  "index": 900
                },
                "end": {
                  "line": 80,
                  "column": 1,
                  "index": 2424
                }
              },
              "actionsMethods": [
                {
                  "name": "queryTransferAddMaterialInfoRequested"
                },
                {
                  "name": "reset"
                },
                {
                  "name": "resetTransferAddMaterialCommit"
                },
                {
                  "name": "resetCancelTransfer"
                },
                {
                  "name": "resetFile",
                  "usage": "usages.TRANSFER_ADD_MATERIAL"
                },
                {
                  "name": "resetFile",
                  "usage": "usages.TRANSFER_ADD_CONTRACT_MATERIAL"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "queryTransferAddMaterialInfoRequested",
                  "importedName": "queryTransferAddMaterialInfoRequested",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "isNamespace": false,
                  "localName": "reset",
                  "importedName": "reset",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                },
                {
                  "localName": "resetTransferAddMaterialCommit",
                  "importedName": "resetTransferAddMaterialCommit",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "localName": "resetCancelTransfer",
                  "importedName": "resetCancelTransfer",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "localName": "resetFile",
                  "importedName": "resetFile",
                  "sourceValue": "actions/file",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/file.ts",
                  "usage": "usages.TRANSFER_ADD_MATERIAL"
                },
                {
                  "localName": "resetFile",
                  "importedName": "resetFile",
                  "sourceValue": "actions/file",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/file.ts",
                  "usage": "usages.TRANSFER_ADD_CONTRACT_MATERIAL"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 37,
                  "column": 67,
                  "index": 900
                },
                "end": {
                  "line": 80,
                  "column": 1,
                  "index": 2424
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["fileActions", "withdrawActions"],
          "objectPropertyMap": {
            "reset": "reset"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/WithdrawSetting/WithdrawNormalApply/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "withdrawActions",
              "sourceValue": "actions/withdraw",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts",
              "exportNames": [
                "withdrawListRequested",
                "withdrawListSucceed",
                "withdrawListFailed",
                "hideWithdrawListError",
                "resetWithdrawList",
                "changeTab",
                "switchWithdrawApplyModal",
                "setWithdrawApplyIsReserved",
                "withdrawApplyRequested",
                "withdrawApplySucceed",
                "withdrawApplyFailed",
                "hideWithdrawApplyError",
                "setStep",
                "resetWithdrawApply",
                "withdrawInitRequested",
                "withdrawInitSucceed",
                "withdrawInitFailed",
                "hideWithdrawInitError",
                "withdrawDebtRequested",
                "withdrawDebtSucceed",
                "withdrawDebtFailed",
                "hideWithdrawDebtError",
                "removeRelatedItemOrderId",
                "addRelatedItemOrderId",
                "inputChangeRelatedItemValue",
                "resetRelatedOrders",
                "changeRelatedOrderChecked",
                "resetRelatedOrderChecked",
                "swithWithdrawFXApplyModal",
                "setWithdrawFXApplyStep",
                "setWithdrawFXApplyIsReserved",
                "withdrawFXApplyRequested",
                "withdrawFXApplySucceed",
                "withdrawFXApplyFailed",
                "hideWithdrawFXApplyError",
                "resetWithdrawFXApply",
                "isWithdrawErrorPage",
                "getFXWithdrawFeeRequested",
                "getFXWithdrawFeeSucceed",
                "getFXWithdrawFeeFailed",
                "hideGetFXWithdrawFeeError",
                "resetGetFXWithdrawFee",
                "getFXCanRelatedOrderRequested",
                "getFXCanRelatedOrderSucceed",
                "getFXCanRelatedOrderFailed",
                "hideGetFXCanRelatedOrderError",
                "resetGetFXCanRelatedOrder",
                "pushFXCanRelatedOrderRequested",
                "pushFXCanRelatedOrderSucceed",
                "pushFXCanRelatedOrderFailed",
                "swithWithdrawFXReApplyModal",
                "setWithdrawFXReApplyStep",
                "withdrawFXReApplyRequested",
                "withdrawFXReApplySucceed",
                "withdrawFXReApplyFailed",
                "resetWithdrawFXReApply",
                "hideWithdrawFXReApplyError",
                "getWithdrawReApplyItemRequested",
                "getWithdrawReApplyItemSucceed",
                "getWithdrawReApplyItemFailed",
                "resetGetWithdrawReApplyItem",
                "withdrawCheckBothFrozen",
                "withdrawCheckBothFrozenSucceed",
                "withdrawCheckBothFrozenFailed",
                "getFxWithdrawHolderTypeRequested",
                "getFxWithdrawHolderTypeSucceed",
                "getFxWithdrawHolderTypeFailed",
                "withdrawDetailRequested",
                "withdrawDetailSucceed",
                "withdrawDetailFailed",
                "resetWithdrawDetail",
                "withdrawFeeRequested",
                "withdrawFeeSucceed",
                "withdrawFeeFailed",
                "queryAddMaterialInfoRequested",
                "queryAddMaterialInfoSucceed",
                "queryAddMaterialInfoFailed",
                "addMaterialCommitRequested",
                "addMaterialCommitSucceed",
                "addMaterialCommitFailed",
                "resetAddMaterialCommit",
                "cancelFxWithdrawRequested",
                "cancelFxWithdrawSucceed",
                "cancelFxWithdrawFailed",
                "resetCancelFxWithdraw",
                "setCancelFxWithdrawModal",
                "cancelWithdrawRequested",
                "cancelWithdrawSucceed",
                "cancelWithdrawFailed",
                "resetCancelWithdraw",
                "setCancelWithdrawModal",
                "cancelOnGoingTransferRequested",
                "cancelOnGoingTransferSucceed",
                "cancelOnGoingTransferFailed",
                "resetCancelOnGoingTransfer",
                "setCancelOnGoingTransferModal",
                "withdrawSupportCcys",
                "withdrawSupportCcysSucceed",
                "withdrawSupportCcysFailed",
                "transferFeeRequested",
                "transferFeeSucceed",
                "transferFeeFailed",
                "setTransferApplyStep",
                "transferApplyRequested",
                "transferApplySucceed",
                "transferApplyFailed",
                "hideTransferApplyError",
                "resetTransferApply",
                "setTransferStep",
                "queryTransferAddMaterialInfoRequested",
                "queryTransferAddMaterialInfoSucceed",
                "queryTransferAddMaterialInfoFailed",
                "transferAddMaterialCommitRequested",
                "transferAddMaterialCommitSucceed",
                "transferAddMaterialCommitFailed",
                "resetTransferAddMaterialCommit",
                "cancelTransferRequested",
                "cancelTransferSucceed",
                "cancelTransferFailed",
                "resetCancelTransfer",
                "setCancelModal",
                "addCardInfoRequested",
                "addCardInfoSucceed",
                "addCardInfoFailed",
                "querySupportBoostRequested",
                "querySupportBoostSucceed",
                "querySupportBoostFailed",
                "resetQuerySupportBoost",
                "queryCanFastWithdrawWorkRequested",
                "queryCanFastWithdrawWorkFailed",
                "queryCanFastWithdrawWorkSuccess",
                "queryACrossBorderRequested",
                "queryACrossBorderSuccess",
                "queryACrossBorderFailed",
                "getAbRequested",
                "getAbSucceed",
                "getAbFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "fundActions",
              "sourceValue": "actions/fund",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fund.ts",
              "exportNames": [
                "getFrozenListRequested",
                "getFrozenListSucceed",
                "getFrozenListFailed",
                "initFrozenList",
                "getWithDrawSpeedFlagRequested",
                "getWithDrawSpeedFlagSucceed",
                "getWithDrawSpeedFlagFailed",
                "getWithDrawDateRequested",
                "getWithDrawDateSucceed",
                "getWithDrawDateFailed",
                "getBankCardInfoRequested",
                "getBankCardInfoSucceed",
                "getBankCardInfoFailed",
                "resetBankCardInfo"
              ]
            },
            {
              "isNamespace": true,
              "localName": "ticketActions",
              "sourceValue": "actions/ticket",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/ticket.ts",
              "exportNames": [
                "ticketListRequested",
                "ticketListSucceed",
                "ticketListFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "utilActions",
              "sourceValue": "actions/util",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/util.ts",
              "exportNames": [
                "pubKeyRequested",
                "pubKeySucceed",
                "pubKeyFailed",
                "toggleOrderAnnexUpload",
                "setIsMobile",
                "getFirmStatusRequested",
                "getFirmStatusSucceed",
                "getFirmStatusFailed",
                "setPreviewPageId",
                "setCountrys",
                "setProvinces",
                "setLoadAddress",
                "getLocationRequested",
                "getLocationSucceed",
                "getLocationFailed",
                "touchAndChangeAddressFields",
                "resetAddressFieldsThenSetCountry"
              ]
            },
            {
              "isNamespace": true,
              "localName": "userActions",
              "sourceValue": "actions/user",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts",
              "exportNames": [
                "getUserFlowId",
                "getUserFlowIdAndCaptcha",
                "getUserFlowIdSucceed",
                "getUserFlowIdFailed",
                "initUserFlowId",
                "getUserCaptcha",
                "getUserCaptchaSucceed",
                "getUserCaptchaFailed",
                "initUserCaptcha",
                "verifyMfaRequested",
                "verifyMfaSucceed",
                "verifyMfaFailed",
                "initVerifyMfa",
                "setAuthId",
                "resetAuthId",
                "executeAuthIdCallBackRequested",
                "executeAuthIdCallBackSucceed",
                "executeAuthIdCallBackFailed",
                "sendMfaMessageRequested",
                "getMfaCaptchaRequested",
                "getMfaCaptchaSucceed",
                "getMfaCaptchaFailed",
                "initMfaCaptcha",
                "getWhiteListRequested",
                "getWhiteListSucceed",
                "getWhiteListFailed",
                "getWhiteListInit",
                "setMfaJson",
                "resetMfaJson",
                "queryIndustryRequested",
                "queryIndustrySucceed",
                "queryIndustryFailed",
                "queryRestrictionList",
                "queryRestrictionListSucceed",
                "queryRestrictionListFailed"
              ]
            },
            {
              "isNamespace": false,
              "localName": "reset",
              "importedName": "reset",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            },
            {
              "isNamespace": false,
              "localName": "change",
              "importedName": "change",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 77,
                  "column": 59,
                  "index": 2535
                },
                "end": {
                  "line": 203,
                  "column": 1,
                  "index": 6359
                }
              },
              "actionsMethods": [
                {
                  "name": "reset"
                },
                {
                  "name": "getFrozenListRequested",
                  "usage": "NORMAL"
                },
                {
                  "name": "ticketListRequested"
                },
                {
                  "name": "getLocationRequested",
                  "usage": "country"
                },
                {
                  "name": "getWhiteListRequested"
                },
                {
                  "name": "resetQuerySupportBoost"
                },
                {
                  "name": "querySupportBoostRequested"
                },
                {
                  "name": "change"
                },
                {
                  "name": "resetWithdrawApply"
                },
                {
                  "name": "initFrozenList"
                }
              ],
              "usedActionsDependencies": [
                {
                  "isNamespace": false,
                  "localName": "reset",
                  "importedName": "reset",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                },
                {
                  "localName": "getFrozenListRequested",
                  "importedName": "getFrozenListRequested",
                  "sourceValue": "actions/fund",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fund.ts",
                  "usage": "NORMAL"
                },
                {
                  "localName": "ticketListRequested",
                  "importedName": "ticketListRequested",
                  "sourceValue": "actions/ticket",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/ticket.ts"
                },
                {
                  "localName": "getLocationRequested",
                  "importedName": "getLocationRequested",
                  "sourceValue": "actions/util",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/util.ts",
                  "usage": "country"
                },
                {
                  "localName": "getWhiteListRequested",
                  "importedName": "getWhiteListRequested",
                  "sourceValue": "actions/user",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts"
                },
                {
                  "localName": "resetQuerySupportBoost",
                  "importedName": "resetQuerySupportBoost",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "localName": "querySupportBoostRequested",
                  "importedName": "querySupportBoostRequested",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "isNamespace": false,
                  "localName": "change",
                  "importedName": "change",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                },
                {
                  "localName": "resetWithdrawApply",
                  "importedName": "resetWithdrawApply",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "localName": "initFrozenList",
                  "importedName": "initFrozenList",
                  "sourceValue": "actions/fund",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fund.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 77,
                  "column": 59,
                  "index": 2535
                },
                "end": {
                  "line": 203,
                  "column": 1,
                  "index": 6359
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [
            "withdrawActions",
            "fundActions",
            "ticketActions",
            "utilActions",
            "userActions"
          ],
          "objectPropertyMap": {
            "reset": "reset",
            "push": "push",
            "change": "change"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/WithdrawSetting/TransferApply/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "withdrawActions",
              "sourceValue": "actions/withdraw",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts",
              "exportNames": [
                "withdrawListRequested",
                "withdrawListSucceed",
                "withdrawListFailed",
                "hideWithdrawListError",
                "resetWithdrawList",
                "changeTab",
                "switchWithdrawApplyModal",
                "setWithdrawApplyIsReserved",
                "withdrawApplyRequested",
                "withdrawApplySucceed",
                "withdrawApplyFailed",
                "hideWithdrawApplyError",
                "setStep",
                "resetWithdrawApply",
                "withdrawInitRequested",
                "withdrawInitSucceed",
                "withdrawInitFailed",
                "hideWithdrawInitError",
                "withdrawDebtRequested",
                "withdrawDebtSucceed",
                "withdrawDebtFailed",
                "hideWithdrawDebtError",
                "removeRelatedItemOrderId",
                "addRelatedItemOrderId",
                "inputChangeRelatedItemValue",
                "resetRelatedOrders",
                "changeRelatedOrderChecked",
                "resetRelatedOrderChecked",
                "swithWithdrawFXApplyModal",
                "setWithdrawFXApplyStep",
                "setWithdrawFXApplyIsReserved",
                "withdrawFXApplyRequested",
                "withdrawFXApplySucceed",
                "withdrawFXApplyFailed",
                "hideWithdrawFXApplyError",
                "resetWithdrawFXApply",
                "isWithdrawErrorPage",
                "getFXWithdrawFeeRequested",
                "getFXWithdrawFeeSucceed",
                "getFXWithdrawFeeFailed",
                "hideGetFXWithdrawFeeError",
                "resetGetFXWithdrawFee",
                "getFXCanRelatedOrderRequested",
                "getFXCanRelatedOrderSucceed",
                "getFXCanRelatedOrderFailed",
                "hideGetFXCanRelatedOrderError",
                "resetGetFXCanRelatedOrder",
                "pushFXCanRelatedOrderRequested",
                "pushFXCanRelatedOrderSucceed",
                "pushFXCanRelatedOrderFailed",
                "swithWithdrawFXReApplyModal",
                "setWithdrawFXReApplyStep",
                "withdrawFXReApplyRequested",
                "withdrawFXReApplySucceed",
                "withdrawFXReApplyFailed",
                "resetWithdrawFXReApply",
                "hideWithdrawFXReApplyError",
                "getWithdrawReApplyItemRequested",
                "getWithdrawReApplyItemSucceed",
                "getWithdrawReApplyItemFailed",
                "resetGetWithdrawReApplyItem",
                "withdrawCheckBothFrozen",
                "withdrawCheckBothFrozenSucceed",
                "withdrawCheckBothFrozenFailed",
                "getFxWithdrawHolderTypeRequested",
                "getFxWithdrawHolderTypeSucceed",
                "getFxWithdrawHolderTypeFailed",
                "withdrawDetailRequested",
                "withdrawDetailSucceed",
                "withdrawDetailFailed",
                "resetWithdrawDetail",
                "withdrawFeeRequested",
                "withdrawFeeSucceed",
                "withdrawFeeFailed",
                "queryAddMaterialInfoRequested",
                "queryAddMaterialInfoSucceed",
                "queryAddMaterialInfoFailed",
                "addMaterialCommitRequested",
                "addMaterialCommitSucceed",
                "addMaterialCommitFailed",
                "resetAddMaterialCommit",
                "cancelFxWithdrawRequested",
                "cancelFxWithdrawSucceed",
                "cancelFxWithdrawFailed",
                "resetCancelFxWithdraw",
                "setCancelFxWithdrawModal",
                "cancelWithdrawRequested",
                "cancelWithdrawSucceed",
                "cancelWithdrawFailed",
                "resetCancelWithdraw",
                "setCancelWithdrawModal",
                "cancelOnGoingTransferRequested",
                "cancelOnGoingTransferSucceed",
                "cancelOnGoingTransferFailed",
                "resetCancelOnGoingTransfer",
                "setCancelOnGoingTransferModal",
                "withdrawSupportCcys",
                "withdrawSupportCcysSucceed",
                "withdrawSupportCcysFailed",
                "transferFeeRequested",
                "transferFeeSucceed",
                "transferFeeFailed",
                "setTransferApplyStep",
                "transferApplyRequested",
                "transferApplySucceed",
                "transferApplyFailed",
                "hideTransferApplyError",
                "resetTransferApply",
                "setTransferStep",
                "queryTransferAddMaterialInfoRequested",
                "queryTransferAddMaterialInfoSucceed",
                "queryTransferAddMaterialInfoFailed",
                "transferAddMaterialCommitRequested",
                "transferAddMaterialCommitSucceed",
                "transferAddMaterialCommitFailed",
                "resetTransferAddMaterialCommit",
                "cancelTransferRequested",
                "cancelTransferSucceed",
                "cancelTransferFailed",
                "resetCancelTransfer",
                "setCancelModal",
                "addCardInfoRequested",
                "addCardInfoSucceed",
                "addCardInfoFailed",
                "querySupportBoostRequested",
                "querySupportBoostSucceed",
                "querySupportBoostFailed",
                "resetQuerySupportBoost",
                "queryCanFastWithdrawWorkRequested",
                "queryCanFastWithdrawWorkFailed",
                "queryCanFastWithdrawWorkSuccess",
                "queryACrossBorderRequested",
                "queryACrossBorderSuccess",
                "queryACrossBorderFailed",
                "getAbRequested",
                "getAbSucceed",
                "getAbFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "fundActions",
              "sourceValue": "actions/fund",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fund.ts",
              "exportNames": [
                "getFrozenListRequested",
                "getFrozenListSucceed",
                "getFrozenListFailed",
                "initFrozenList",
                "getWithDrawSpeedFlagRequested",
                "getWithDrawSpeedFlagSucceed",
                "getWithDrawSpeedFlagFailed",
                "getWithDrawDateRequested",
                "getWithDrawDateSucceed",
                "getWithDrawDateFailed",
                "getBankCardInfoRequested",
                "getBankCardInfoSucceed",
                "getBankCardInfoFailed",
                "resetBankCardInfo"
              ]
            },
            {
              "isNamespace": true,
              "localName": "userActions",
              "sourceValue": "actions/user",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts",
              "exportNames": [
                "getUserFlowId",
                "getUserFlowIdAndCaptcha",
                "getUserFlowIdSucceed",
                "getUserFlowIdFailed",
                "initUserFlowId",
                "getUserCaptcha",
                "getUserCaptchaSucceed",
                "getUserCaptchaFailed",
                "initUserCaptcha",
                "verifyMfaRequested",
                "verifyMfaSucceed",
                "verifyMfaFailed",
                "initVerifyMfa",
                "setAuthId",
                "resetAuthId",
                "executeAuthIdCallBackRequested",
                "executeAuthIdCallBackSucceed",
                "executeAuthIdCallBackFailed",
                "sendMfaMessageRequested",
                "getMfaCaptchaRequested",
                "getMfaCaptchaSucceed",
                "getMfaCaptchaFailed",
                "initMfaCaptcha",
                "getWhiteListRequested",
                "getWhiteListSucceed",
                "getWhiteListFailed",
                "getWhiteListInit",
                "setMfaJson",
                "resetMfaJson",
                "queryIndustryRequested",
                "queryIndustrySucceed",
                "queryIndustryFailed",
                "queryRestrictionList",
                "queryRestrictionListSucceed",
                "queryRestrictionListFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "utilActions",
              "sourceValue": "actions/util",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/util.ts",
              "exportNames": [
                "pubKeyRequested",
                "pubKeySucceed",
                "pubKeyFailed",
                "toggleOrderAnnexUpload",
                "setIsMobile",
                "getFirmStatusRequested",
                "getFirmStatusSucceed",
                "getFirmStatusFailed",
                "setPreviewPageId",
                "setCountrys",
                "setProvinces",
                "setLoadAddress",
                "getLocationRequested",
                "getLocationSucceed",
                "getLocationFailed",
                "touchAndChangeAddressFields",
                "resetAddressFieldsThenSetCountry"
              ]
            },
            {
              "isNamespace": false,
              "localName": "reset",
              "importedName": "reset",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 74,
                  "column": 53,
                  "index": 2486
                },
                "end": {
                  "line": 187,
                  "column": 1,
                  "index": 5876
                }
              },
              "actionsMethods": [
                {
                  "name": "getLocationRequested",
                  "usage": "country"
                },
                {
                  "name": "getFrozenListRequested",
                  "usage": "TRANSFER"
                },
                {
                  "name": "getWhiteListRequested"
                },
                {
                  "name": "reset"
                },
                {
                  "name": "resetQuerySupportBoost"
                },
                {
                  "name": "querySupportBoostRequested"
                },
                {
                  "name": "resetTransferApply"
                },
                {
                  "name": "initFrozenList"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "getLocationRequested",
                  "importedName": "getLocationRequested",
                  "sourceValue": "actions/util",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/util.ts",
                  "usage": "country"
                },
                {
                  "localName": "getFrozenListRequested",
                  "importedName": "getFrozenListRequested",
                  "sourceValue": "actions/fund",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fund.ts",
                  "usage": "TRANSFER"
                },
                {
                  "localName": "getWhiteListRequested",
                  "importedName": "getWhiteListRequested",
                  "sourceValue": "actions/user",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts"
                },
                {
                  "isNamespace": false,
                  "localName": "reset",
                  "importedName": "reset",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                },
                {
                  "localName": "resetQuerySupportBoost",
                  "importedName": "resetQuerySupportBoost",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "localName": "querySupportBoostRequested",
                  "importedName": "querySupportBoostRequested",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "localName": "resetTransferApply",
                  "importedName": "resetTransferApply",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "localName": "initFrozenList",
                  "importedName": "initFrozenList",
                  "sourceValue": "actions/fund",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fund.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 74,
                  "column": 53,
                  "index": 2486
                },
                "end": {
                  "line": 187,
                  "column": 1,
                  "index": 5876
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [
            "withdrawActions",
            "fundActions",
            "userActions",
            "utilActions"
          ],
          "objectPropertyMap": {
            "reset": "reset",
            "push": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/WithdrawSetting/WithdrawRecord/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "actions",
              "sourceValue": "actions/withdraw",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts",
              "exportNames": [
                "withdrawListRequested",
                "withdrawListSucceed",
                "withdrawListFailed",
                "hideWithdrawListError",
                "resetWithdrawList",
                "changeTab",
                "switchWithdrawApplyModal",
                "setWithdrawApplyIsReserved",
                "withdrawApplyRequested",
                "withdrawApplySucceed",
                "withdrawApplyFailed",
                "hideWithdrawApplyError",
                "setStep",
                "resetWithdrawApply",
                "withdrawInitRequested",
                "withdrawInitSucceed",
                "withdrawInitFailed",
                "hideWithdrawInitError",
                "withdrawDebtRequested",
                "withdrawDebtSucceed",
                "withdrawDebtFailed",
                "hideWithdrawDebtError",
                "removeRelatedItemOrderId",
                "addRelatedItemOrderId",
                "inputChangeRelatedItemValue",
                "resetRelatedOrders",
                "changeRelatedOrderChecked",
                "resetRelatedOrderChecked",
                "swithWithdrawFXApplyModal",
                "setWithdrawFXApplyStep",
                "setWithdrawFXApplyIsReserved",
                "withdrawFXApplyRequested",
                "withdrawFXApplySucceed",
                "withdrawFXApplyFailed",
                "hideWithdrawFXApplyError",
                "resetWithdrawFXApply",
                "isWithdrawErrorPage",
                "getFXWithdrawFeeRequested",
                "getFXWithdrawFeeSucceed",
                "getFXWithdrawFeeFailed",
                "hideGetFXWithdrawFeeError",
                "resetGetFXWithdrawFee",
                "getFXCanRelatedOrderRequested",
                "getFXCanRelatedOrderSucceed",
                "getFXCanRelatedOrderFailed",
                "hideGetFXCanRelatedOrderError",
                "resetGetFXCanRelatedOrder",
                "pushFXCanRelatedOrderRequested",
                "pushFXCanRelatedOrderSucceed",
                "pushFXCanRelatedOrderFailed",
                "swithWithdrawFXReApplyModal",
                "setWithdrawFXReApplyStep",
                "withdrawFXReApplyRequested",
                "withdrawFXReApplySucceed",
                "withdrawFXReApplyFailed",
                "resetWithdrawFXReApply",
                "hideWithdrawFXReApplyError",
                "getWithdrawReApplyItemRequested",
                "getWithdrawReApplyItemSucceed",
                "getWithdrawReApplyItemFailed",
                "resetGetWithdrawReApplyItem",
                "withdrawCheckBothFrozen",
                "withdrawCheckBothFrozenSucceed",
                "withdrawCheckBothFrozenFailed",
                "getFxWithdrawHolderTypeRequested",
                "getFxWithdrawHolderTypeSucceed",
                "getFxWithdrawHolderTypeFailed",
                "withdrawDetailRequested",
                "withdrawDetailSucceed",
                "withdrawDetailFailed",
                "resetWithdrawDetail",
                "withdrawFeeRequested",
                "withdrawFeeSucceed",
                "withdrawFeeFailed",
                "queryAddMaterialInfoRequested",
                "queryAddMaterialInfoSucceed",
                "queryAddMaterialInfoFailed",
                "addMaterialCommitRequested",
                "addMaterialCommitSucceed",
                "addMaterialCommitFailed",
                "resetAddMaterialCommit",
                "cancelFxWithdrawRequested",
                "cancelFxWithdrawSucceed",
                "cancelFxWithdrawFailed",
                "resetCancelFxWithdraw",
                "setCancelFxWithdrawModal",
                "cancelWithdrawRequested",
                "cancelWithdrawSucceed",
                "cancelWithdrawFailed",
                "resetCancelWithdraw",
                "setCancelWithdrawModal",
                "cancelOnGoingTransferRequested",
                "cancelOnGoingTransferSucceed",
                "cancelOnGoingTransferFailed",
                "resetCancelOnGoingTransfer",
                "setCancelOnGoingTransferModal",
                "withdrawSupportCcys",
                "withdrawSupportCcysSucceed",
                "withdrawSupportCcysFailed",
                "transferFeeRequested",
                "transferFeeSucceed",
                "transferFeeFailed",
                "setTransferApplyStep",
                "transferApplyRequested",
                "transferApplySucceed",
                "transferApplyFailed",
                "hideTransferApplyError",
                "resetTransferApply",
                "setTransferStep",
                "queryTransferAddMaterialInfoRequested",
                "queryTransferAddMaterialInfoSucceed",
                "queryTransferAddMaterialInfoFailed",
                "transferAddMaterialCommitRequested",
                "transferAddMaterialCommitSucceed",
                "transferAddMaterialCommitFailed",
                "resetTransferAddMaterialCommit",
                "cancelTransferRequested",
                "cancelTransferSucceed",
                "cancelTransferFailed",
                "resetCancelTransfer",
                "setCancelModal",
                "addCardInfoRequested",
                "addCardInfoSucceed",
                "addCardInfoFailed",
                "querySupportBoostRequested",
                "querySupportBoostSucceed",
                "querySupportBoostFailed",
                "resetQuerySupportBoost",
                "queryCanFastWithdrawWorkRequested",
                "queryCanFastWithdrawWorkFailed",
                "queryCanFastWithdrawWorkSuccess",
                "queryACrossBorderRequested",
                "queryACrossBorderSuccess",
                "queryACrossBorderFailed",
                "getAbRequested",
                "getAbSucceed",
                "getAbFailed"
              ]
            },
            {
              "isNamespace": false,
              "localName": "reset",
              "importedName": "reset",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 36,
                  "column": 54,
                  "index": 966
                },
                "end": {
                  "line": 99,
                  "column": 1,
                  "index": 3754
                }
              },
              "actionsMethods": [
                {
                  "name": "changeTab"
                },
                {
                  "name": "withdrawListRequested"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "changeTab",
                  "importedName": "changeTab",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "localName": "withdrawListRequested",
                  "importedName": "withdrawListRequested",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 36,
                  "column": 54,
                  "index": 966
                },
                "end": {
                  "line": 99,
                  "column": 1,
                  "index": 3754
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["actions"],
          "objectPropertyMap": {
            "reset": "reset"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/WithdrawSetting/WithdrawDetail/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "actions",
              "sourceValue": "actions/withdraw",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts",
              "exportNames": [
                "withdrawListRequested",
                "withdrawListSucceed",
                "withdrawListFailed",
                "hideWithdrawListError",
                "resetWithdrawList",
                "changeTab",
                "switchWithdrawApplyModal",
                "setWithdrawApplyIsReserved",
                "withdrawApplyRequested",
                "withdrawApplySucceed",
                "withdrawApplyFailed",
                "hideWithdrawApplyError",
                "setStep",
                "resetWithdrawApply",
                "withdrawInitRequested",
                "withdrawInitSucceed",
                "withdrawInitFailed",
                "hideWithdrawInitError",
                "withdrawDebtRequested",
                "withdrawDebtSucceed",
                "withdrawDebtFailed",
                "hideWithdrawDebtError",
                "removeRelatedItemOrderId",
                "addRelatedItemOrderId",
                "inputChangeRelatedItemValue",
                "resetRelatedOrders",
                "changeRelatedOrderChecked",
                "resetRelatedOrderChecked",
                "swithWithdrawFXApplyModal",
                "setWithdrawFXApplyStep",
                "setWithdrawFXApplyIsReserved",
                "withdrawFXApplyRequested",
                "withdrawFXApplySucceed",
                "withdrawFXApplyFailed",
                "hideWithdrawFXApplyError",
                "resetWithdrawFXApply",
                "isWithdrawErrorPage",
                "getFXWithdrawFeeRequested",
                "getFXWithdrawFeeSucceed",
                "getFXWithdrawFeeFailed",
                "hideGetFXWithdrawFeeError",
                "resetGetFXWithdrawFee",
                "getFXCanRelatedOrderRequested",
                "getFXCanRelatedOrderSucceed",
                "getFXCanRelatedOrderFailed",
                "hideGetFXCanRelatedOrderError",
                "resetGetFXCanRelatedOrder",
                "pushFXCanRelatedOrderRequested",
                "pushFXCanRelatedOrderSucceed",
                "pushFXCanRelatedOrderFailed",
                "swithWithdrawFXReApplyModal",
                "setWithdrawFXReApplyStep",
                "withdrawFXReApplyRequested",
                "withdrawFXReApplySucceed",
                "withdrawFXReApplyFailed",
                "resetWithdrawFXReApply",
                "hideWithdrawFXReApplyError",
                "getWithdrawReApplyItemRequested",
                "getWithdrawReApplyItemSucceed",
                "getWithdrawReApplyItemFailed",
                "resetGetWithdrawReApplyItem",
                "withdrawCheckBothFrozen",
                "withdrawCheckBothFrozenSucceed",
                "withdrawCheckBothFrozenFailed",
                "getFxWithdrawHolderTypeRequested",
                "getFxWithdrawHolderTypeSucceed",
                "getFxWithdrawHolderTypeFailed",
                "withdrawDetailRequested",
                "withdrawDetailSucceed",
                "withdrawDetailFailed",
                "resetWithdrawDetail",
                "withdrawFeeRequested",
                "withdrawFeeSucceed",
                "withdrawFeeFailed",
                "queryAddMaterialInfoRequested",
                "queryAddMaterialInfoSucceed",
                "queryAddMaterialInfoFailed",
                "addMaterialCommitRequested",
                "addMaterialCommitSucceed",
                "addMaterialCommitFailed",
                "resetAddMaterialCommit",
                "cancelFxWithdrawRequested",
                "cancelFxWithdrawSucceed",
                "cancelFxWithdrawFailed",
                "resetCancelFxWithdraw",
                "setCancelFxWithdrawModal",
                "cancelWithdrawRequested",
                "cancelWithdrawSucceed",
                "cancelWithdrawFailed",
                "resetCancelWithdraw",
                "setCancelWithdrawModal",
                "cancelOnGoingTransferRequested",
                "cancelOnGoingTransferSucceed",
                "cancelOnGoingTransferFailed",
                "resetCancelOnGoingTransfer",
                "setCancelOnGoingTransferModal",
                "withdrawSupportCcys",
                "withdrawSupportCcysSucceed",
                "withdrawSupportCcysFailed",
                "transferFeeRequested",
                "transferFeeSucceed",
                "transferFeeFailed",
                "setTransferApplyStep",
                "transferApplyRequested",
                "transferApplySucceed",
                "transferApplyFailed",
                "hideTransferApplyError",
                "resetTransferApply",
                "setTransferStep",
                "queryTransferAddMaterialInfoRequested",
                "queryTransferAddMaterialInfoSucceed",
                "queryTransferAddMaterialInfoFailed",
                "transferAddMaterialCommitRequested",
                "transferAddMaterialCommitSucceed",
                "transferAddMaterialCommitFailed",
                "resetTransferAddMaterialCommit",
                "cancelTransferRequested",
                "cancelTransferSucceed",
                "cancelTransferFailed",
                "resetCancelTransfer",
                "setCancelModal",
                "addCardInfoRequested",
                "addCardInfoSucceed",
                "addCardInfoFailed",
                "querySupportBoostRequested",
                "querySupportBoostSucceed",
                "querySupportBoostFailed",
                "resetQuerySupportBoost",
                "queryCanFastWithdrawWorkRequested",
                "queryCanFastWithdrawWorkFailed",
                "queryCanFastWithdrawWorkSuccess",
                "queryACrossBorderRequested",
                "queryACrossBorderSuccess",
                "queryACrossBorderFailed",
                "getAbRequested",
                "getAbSucceed",
                "getAbFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "userActions",
              "sourceValue": "actions/user",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts",
              "exportNames": [
                "getUserFlowId",
                "getUserFlowIdAndCaptcha",
                "getUserFlowIdSucceed",
                "getUserFlowIdFailed",
                "initUserFlowId",
                "getUserCaptcha",
                "getUserCaptchaSucceed",
                "getUserCaptchaFailed",
                "initUserCaptcha",
                "verifyMfaRequested",
                "verifyMfaSucceed",
                "verifyMfaFailed",
                "initVerifyMfa",
                "setAuthId",
                "resetAuthId",
                "executeAuthIdCallBackRequested",
                "executeAuthIdCallBackSucceed",
                "executeAuthIdCallBackFailed",
                "sendMfaMessageRequested",
                "getMfaCaptchaRequested",
                "getMfaCaptchaSucceed",
                "getMfaCaptchaFailed",
                "initMfaCaptcha",
                "getWhiteListRequested",
                "getWhiteListSucceed",
                "getWhiteListFailed",
                "getWhiteListInit",
                "setMfaJson",
                "resetMfaJson",
                "queryIndustryRequested",
                "queryIndustrySucceed",
                "queryIndustryFailed",
                "queryRestrictionList",
                "queryRestrictionListSucceed",
                "queryRestrictionListFailed"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 245,
                  "column": 54,
                  "index": 7278
                },
                "end": {
                  "line": 1139,
                  "column": 1,
                  "index": 42203
                }
              },
              "actionsMethods": [
                {
                  "name": "withdrawDetailRequested"
                },
                {
                  "name": "getWhiteListRequested"
                },
                {
                  "name": "resetCancelWithdraw"
                },
                {
                  "name": "resetCancelOnGoingTransfer"
                },
                {
                  "name": "setCancelWithdrawModal"
                },
                {
                  "name": "setCancelOnGoingTransferModal"
                },
                {
                  "name": "cancelWithdrawRequested"
                },
                {
                  "name": "cancelOnGoingTransferRequested"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "withdrawDetailRequested",
                  "importedName": "withdrawDetailRequested",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "localName": "getWhiteListRequested",
                  "importedName": "getWhiteListRequested",
                  "sourceValue": "actions/user",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts"
                },
                {
                  "localName": "resetCancelWithdraw",
                  "importedName": "resetCancelWithdraw",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "localName": "resetCancelOnGoingTransfer",
                  "importedName": "resetCancelOnGoingTransfer",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "localName": "setCancelWithdrawModal",
                  "importedName": "setCancelWithdrawModal",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "localName": "setCancelOnGoingTransferModal",
                  "importedName": "setCancelOnGoingTransferModal",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "localName": "cancelWithdrawRequested",
                  "importedName": "cancelWithdrawRequested",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "localName": "cancelOnGoingTransferRequested",
                  "importedName": "cancelOnGoingTransferRequested",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 245,
                  "column": 54,
                  "index": 7278
                },
                "end": {
                  "line": 1139,
                  "column": 1,
                  "index": 42203
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["actions", "userActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Statement/StatementAll/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "statementActions",
              "sourceValue": "actions/statement",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/statement.ts",
              "exportNames": [
                "test",
                "queryData",
                "preQuery",
                "querySucceed",
                "queryFailed",
                "showError",
                "setShowError",
                "queryPerMonthRequested",
                "queryPerMonthSucceed",
                "queryPerMonthFailed",
                "setPerMonthShowError",
                "billListDownloadRequested",
                "billListDownloadSucceed",
                "billListDownloadFailed",
                "toggleBillListDownloadModal",
                "resetBillListDownload",
                "queryPaymentRequested",
                "queryPaymentSucceed",
                "queryPaymentFailed",
                "paymentDetailRequested",
                "paymentDetailSucceed",
                "paymentDetailFailed",
                "repaymentRequested",
                "repaymentSucceed",
                "repaymentFailed"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 614,
                  "column": 52,
                  "index": 21232
                },
                "end": {
                  "line": 744,
                  "column": 1,
                  "index": 24686
                }
              },
              "actionsMethods": [
                {
                  "name": "toggleBillListDownloadModal"
                },
                {
                  "name": "resetBillListDownload"
                },
                {
                  "name": "queryData"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "toggleBillListDownloadModal",
                  "importedName": "toggleBillListDownloadModal",
                  "sourceValue": "actions/statement",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/statement.ts"
                },
                {
                  "localName": "resetBillListDownload",
                  "importedName": "resetBillListDownload",
                  "sourceValue": "actions/statement",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/statement.ts"
                },
                {
                  "localName": "queryData",
                  "importedName": "queryData",
                  "sourceValue": "actions/statement",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/statement.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 614,
                  "column": 52,
                  "index": 21232
                },
                "end": {
                  "line": 744,
                  "column": 1,
                  "index": 24686
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["statementActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Statement/StatementPerMonth/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "statementActions",
              "sourceValue": "actions/statement",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/statement.ts",
              "exportNames": [
                "test",
                "queryData",
                "preQuery",
                "querySucceed",
                "queryFailed",
                "showError",
                "setShowError",
                "queryPerMonthRequested",
                "queryPerMonthSucceed",
                "queryPerMonthFailed",
                "setPerMonthShowError",
                "billListDownloadRequested",
                "billListDownloadSucceed",
                "billListDownloadFailed",
                "toggleBillListDownloadModal",
                "resetBillListDownload",
                "queryPaymentRequested",
                "queryPaymentSucceed",
                "queryPaymentFailed",
                "paymentDetailRequested",
                "paymentDetailSucceed",
                "paymentDetailFailed",
                "repaymentRequested",
                "repaymentSucceed",
                "repaymentFailed"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 138,
                  "column": 57,
                  "index": 3532
                },
                "end": {
                  "line": 216,
                  "column": 1,
                  "index": 5404
                }
              },
              "actionsMethods": [],
              "usedActionsDependencies": [],
              "nodeLoc": {
                "start": {
                  "line": 138,
                  "column": 57,
                  "index": 3532
                },
                "end": {
                  "line": 216,
                  "column": 1,
                  "index": 5404
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["statementActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Statement/StatementDetail/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "actions",
              "sourceValue": "actions/meta",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
              "exportNames": [
                "fetchMetaRequested",
                "fetchMetaSucceed",
                "fetchMetaFailed",
                "resetFetchMeta",
                "hideFetchMetaError"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 46,
                  "column": 57,
                  "index": 1316
                },
                "end": {
                  "line": 104,
                  "column": 1,
                  "index": 2777
                }
              },
              "actionsMethods": [
                {
                  "name": "fetchMetaRequested",
                  "usage": "EMMetaUsages.TransactionInfo"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "fetchMetaRequested",
                  "importedName": "fetchMetaRequested",
                  "sourceValue": "actions/meta",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
                  "usage": "EMMetaUsages.TransactionInfo"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 46,
                  "column": 57,
                  "index": 1316
                },
                "end": {
                  "line": 104,
                  "column": 1,
                  "index": 2777
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["actions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Statement/PaymentBill/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "meAction",
              "sourceValue": "actions/me",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/me.ts",
              "exportNames": [
                "getProfileRequested",
                "getProfileSucceed",
                "getProfileFailed",
                "setProfile",
                "accountRequested",
                "accountSucceed",
                "accountFailed",
                "hideAccountError",
                "userPowerRequested",
                "userPowerSucceed",
                "userPowerFailed",
                "getDepositTodoRequested",
                "getDepositTodoSucceed",
                "getDepositTodoFailed",
                "setXtMethod",
                "setTransferNotice",
                "reset",
                "platformRequested",
                "platformSucceed",
                "platformFailed"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 61,
                  "column": 61,
                  "index": 1796
                },
                "end": {
                  "line": 288,
                  "column": 1,
                  "index": 9652
                }
              },
              "actionsMethods": [
                {
                  "name": "refundExchangeAvailableRequested"
                },
                {
                  "name": "queryPaymentRequested"
                },
                {
                  "name": "repaymentRequested"
                },
                {
                  "name": "push"
                }
              ],
              "usedActionsDependencies": [],
              "nodeLoc": {
                "start": {
                  "line": 61,
                  "column": 61,
                  "index": 1796
                },
                "end": {
                  "line": 288,
                  "column": 1,
                  "index": 9652
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["meAction"],
          "objectPropertyMap": {}
        },
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "statementActions",
              "sourceValue": "actions/statement",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/statement.ts",
              "exportNames": [
                "test",
                "queryData",
                "preQuery",
                "querySucceed",
                "queryFailed",
                "showError",
                "setShowError",
                "queryPerMonthRequested",
                "queryPerMonthSucceed",
                "queryPerMonthFailed",
                "setPerMonthShowError",
                "billListDownloadRequested",
                "billListDownloadSucceed",
                "billListDownloadFailed",
                "toggleBillListDownloadModal",
                "resetBillListDownload",
                "queryPaymentRequested",
                "queryPaymentSucceed",
                "queryPaymentFailed",
                "paymentDetailRequested",
                "paymentDetailSucceed",
                "paymentDetailFailed",
                "repaymentRequested",
                "repaymentSucceed",
                "repaymentFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "refundActions",
              "sourceValue": "actions/refund",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/refund.ts",
              "exportNames": [
                "setRefundExchangeModal",
                "refundExchangeRequested",
                "refundExchangeSucceed",
                "refundExchangeFailed",
                "refundExchangeInit",
                "exchangeRateRequested",
                "exchangeRateSucceed",
                "exchangeRateFailed",
                "exchangeRateInit",
                "refundApplyRequested",
                "refundApplySucceed",
                "refundApplyFailed",
                "refundApplyInit",
                "setRefundStep",
                "setFxRequestId",
                "refundExchangeAvailableRequested",
                "refundExchangeAvailableSucceed",
                "refundExchangeAvailableFailed",
                "checkFieldRequested",
                "checkSwiftCodeRequested",
                "checkFieldSucceed",
                "checkFieldFailed",
                "refundReasonRequested",
                "refundReasonSucceed",
                "refundReasonFailed",
                "refundLocCreateRequested",
                "refundLocCreateSucceed",
                "refundLocCreateFailed",
                "beneficiaryMsgRequested",
                "beneficiaryMsgSucceed",
                "beneficiaryMsgFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "meAction",
              "sourceValue": "actions/me",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/me.ts",
              "exportNames": [
                "getProfileRequested",
                "getProfileSucceed",
                "getProfileFailed",
                "setProfile",
                "accountRequested",
                "accountSucceed",
                "accountFailed",
                "hideAccountError",
                "userPowerRequested",
                "userPowerSucceed",
                "userPowerFailed",
                "getDepositTodoRequested",
                "getDepositTodoSucceed",
                "getDepositTodoFailed",
                "setXtMethod",
                "setTransferNotice",
                "reset",
                "platformRequested",
                "platformSucceed",
                "platformFailed"
              ]
            },
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 61,
                  "column": 61,
                  "index": 1796
                },
                "end": {
                  "line": 288,
                  "column": 1,
                  "index": 9652
                }
              },
              "actionsMethods": [
                {
                  "name": "refundExchangeAvailableRequested"
                },
                {
                  "name": "queryPaymentRequested"
                },
                {
                  "name": "repaymentRequested"
                },
                {
                  "name": "push"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "refundExchangeAvailableRequested",
                  "importedName": "refundExchangeAvailableRequested",
                  "sourceValue": "actions/refund",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/refund.ts"
                },
                {
                  "localName": "queryPaymentRequested",
                  "importedName": "queryPaymentRequested",
                  "sourceValue": "actions/statement",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/statement.ts"
                },
                {
                  "localName": "repaymentRequested",
                  "importedName": "repaymentRequested",
                  "sourceValue": "actions/statement",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/statement.ts"
                },
                {
                  "isNamespace": false,
                  "localName": "push",
                  "importedName": "push",
                  "sourceValue": "react-router-redux",
                  "dependencyPath": "react-router-redux"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 61,
                  "column": 61,
                  "index": 1796
                },
                "end": {
                  "line": 288,
                  "column": 1,
                  "index": 9652
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["statementActions", "refundActions", "meAction"],
          "objectPropertyMap": {
            "push": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Statement/PaymentDetail/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "meAction",
              "sourceValue": "actions/me",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/me.ts",
              "exportNames": [
                "getProfileRequested",
                "getProfileSucceed",
                "getProfileFailed",
                "setProfile",
                "accountRequested",
                "accountSucceed",
                "accountFailed",
                "hideAccountError",
                "userPowerRequested",
                "userPowerSucceed",
                "userPowerFailed",
                "getDepositTodoRequested",
                "getDepositTodoSucceed",
                "getDepositTodoFailed",
                "setXtMethod",
                "setTransferNotice",
                "reset",
                "platformRequested",
                "platformSucceed",
                "platformFailed"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 68,
                  "column": 63,
                  "index": 1972
                },
                "end": {
                  "line": 236,
                  "column": 1,
                  "index": 7911
                }
              },
              "actionsMethods": [
                {
                  "name": "paymentDetailRequested"
                },
                {
                  "name": "specificSpotError"
                },
                {
                  "name": "refundExchangeAvailableRequested"
                },
                {
                  "name": "repaymentRequested"
                },
                {
                  "name": "push"
                }
              ],
              "usedActionsDependencies": [],
              "nodeLoc": {
                "start": {
                  "line": 68,
                  "column": 63,
                  "index": 1972
                },
                "end": {
                  "line": 236,
                  "column": 1,
                  "index": 7911
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["meAction"],
          "objectPropertyMap": {}
        },
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "statementActions",
              "sourceValue": "actions/statement",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/statement.ts",
              "exportNames": [
                "test",
                "queryData",
                "preQuery",
                "querySucceed",
                "queryFailed",
                "showError",
                "setShowError",
                "queryPerMonthRequested",
                "queryPerMonthSucceed",
                "queryPerMonthFailed",
                "setPerMonthShowError",
                "billListDownloadRequested",
                "billListDownloadSucceed",
                "billListDownloadFailed",
                "toggleBillListDownloadModal",
                "resetBillListDownload",
                "queryPaymentRequested",
                "queryPaymentSucceed",
                "queryPaymentFailed",
                "paymentDetailRequested",
                "paymentDetailSucceed",
                "paymentDetailFailed",
                "repaymentRequested",
                "repaymentSucceed",
                "repaymentFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "refundActions",
              "sourceValue": "actions/refund",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/refund.ts",
              "exportNames": [
                "setRefundExchangeModal",
                "refundExchangeRequested",
                "refundExchangeSucceed",
                "refundExchangeFailed",
                "refundExchangeInit",
                "exchangeRateRequested",
                "exchangeRateSucceed",
                "exchangeRateFailed",
                "exchangeRateInit",
                "refundApplyRequested",
                "refundApplySucceed",
                "refundApplyFailed",
                "refundApplyInit",
                "setRefundStep",
                "setFxRequestId",
                "refundExchangeAvailableRequested",
                "refundExchangeAvailableSucceed",
                "refundExchangeAvailableFailed",
                "checkFieldRequested",
                "checkSwiftCodeRequested",
                "checkFieldSucceed",
                "checkFieldFailed",
                "refundReasonRequested",
                "refundReasonSucceed",
                "refundReasonFailed",
                "refundLocCreateRequested",
                "refundLocCreateSucceed",
                "refundLocCreateFailed",
                "beneficiaryMsgRequested",
                "beneficiaryMsgSucceed",
                "beneficiaryMsgFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "errorActions",
              "sourceValue": "actions/error",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/error.ts",
              "exportNames": ["specificSpotError"]
            },
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 68,
                  "column": 63,
                  "index": 1972
                },
                "end": {
                  "line": 236,
                  "column": 1,
                  "index": 7911
                }
              },
              "actionsMethods": [
                {
                  "name": "paymentDetailRequested"
                },
                {
                  "name": "specificSpotError"
                },
                {
                  "name": "refundExchangeAvailableRequested"
                },
                {
                  "name": "repaymentRequested"
                },
                {
                  "name": "push"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "paymentDetailRequested",
                  "importedName": "paymentDetailRequested",
                  "sourceValue": "actions/statement",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/statement.ts"
                },
                {
                  "localName": "specificSpotError",
                  "importedName": "specificSpotError",
                  "sourceValue": "actions/error",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/error.ts"
                },
                {
                  "localName": "refundExchangeAvailableRequested",
                  "importedName": "refundExchangeAvailableRequested",
                  "sourceValue": "actions/refund",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/refund.ts"
                },
                {
                  "localName": "repaymentRequested",
                  "importedName": "repaymentRequested",
                  "sourceValue": "actions/statement",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/statement.ts"
                },
                {
                  "isNamespace": false,
                  "localName": "push",
                  "importedName": "push",
                  "sourceValue": "react-router-redux",
                  "dependencyPath": "react-router-redux"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 68,
                  "column": 63,
                  "index": 1972
                },
                "end": {
                  "line": 236,
                  "column": 1,
                  "index": 7911
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["statementActions", "refundActions", "errorActions"],
          "objectPropertyMap": {
            "push": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Ticket/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "actions",
              "sourceValue": "actions/ticket",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/ticket.ts",
              "exportNames": [
                "ticketListRequested",
                "ticketListSucceed",
                "ticketListFailed"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 35,
                  "column": 56,
                  "index": 1085
                },
                "end": {
                  "line": 212,
                  "column": 1,
                  "index": 7511
                }
              },
              "actionsMethods": [
                {
                  "name": "ticketListRequested"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "ticketListRequested",
                  "importedName": "ticketListRequested",
                  "sourceValue": "actions/ticket",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/ticket.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 35,
                  "column": 56,
                  "index": 1085
                },
                "end": {
                  "line": 212,
                  "column": 1,
                  "index": 7511
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["actions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Asset/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "actions",
              "sourceValue": "actions/me",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/me.ts",
              "exportNames": [
                "getProfileRequested",
                "getProfileSucceed",
                "getProfileFailed",
                "setProfile",
                "accountRequested",
                "accountSucceed",
                "accountFailed",
                "hideAccountError",
                "userPowerRequested",
                "userPowerSucceed",
                "userPowerFailed",
                "getDepositTodoRequested",
                "getDepositTodoSucceed",
                "getDepositTodoFailed",
                "setXtMethod",
                "setTransferNotice",
                "reset",
                "platformRequested",
                "platformSucceed",
                "platformFailed"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 45,
                  "column": 55,
                  "index": 1206
                },
                "end": {
                  "line": 119,
                  "column": 1,
                  "index": 3620
                }
              },
              "actionsMethods": [
                {
                  "name": "push"
                }
              ],
              "usedActionsDependencies": [],
              "nodeLoc": {
                "start": {
                  "line": 45,
                  "column": 55,
                  "index": 1206
                },
                "end": {
                  "line": 119,
                  "column": 1,
                  "index": 3620
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["actions"],
          "objectPropertyMap": {}
        },
        {
          "actionsDependencies": [
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 45,
                  "column": 55,
                  "index": 1206
                },
                "end": {
                  "line": 119,
                  "column": 1,
                  "index": 3620
                }
              },
              "actionsMethods": [
                {
                  "name": "push"
                }
              ],
              "usedActionsDependencies": [
                {
                  "isNamespace": false,
                  "localName": "push",
                  "importedName": "push",
                  "sourceValue": "react-router-redux",
                  "dependencyPath": "react-router-redux"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 45,
                  "column": 55,
                  "index": 1206
                },
                "end": {
                  "line": 119,
                  "column": 1,
                  "index": 3620
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {
            "push": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/TransferredAsset/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 70,
                  "column": 97,
                  "index": 1750
                },
                "end": {
                  "line": 109,
                  "column": 1,
                  "index": 3035
                }
              },
              "actionsMethods": [],
              "usedActionsDependencies": [],
              "nodeLoc": {
                "start": {
                  "line": 70,
                  "column": 97,
                  "index": 1750
                },
                "end": {
                  "line": 109,
                  "column": 1,
                  "index": 3035
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/AddedServices/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "actions",
              "sourceValue": "actions/earnExchange",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/earnExchange.ts",
              "exportNames": [
                "earnExchangeListRequested",
                "earnExchangeListSucceed",
                "earnExchangeListFailed",
                "hideEarnExchangeListError",
                "setQueryEarnExchangeListType",
                "viewRelatedOrderListRequested",
                "viewRelatedOrderListSucceed",
                "viewRelatedOrderListFailed",
                "hideViewRelatedOrderListError",
                "queryReceiveMoneyOrderListRequested",
                "queryReceiveMoneyOrderListSucceed",
                "queryReceiveMoneyOrderListFailed",
                "hideQueryReceiveMoneyOrderListError",
                "queryReceiveMoneyOrderDetailRequested",
                "queryReceiveMoneyOrderDetailSucceed",
                "queryReceiveMoneyOrderDetailFailed",
                "hideQueryReceiveMoneyOrderDetailError",
                "resetRelateDetail",
                "setHasUpdateOrder",
                "resetSetHasUpdateOrder",
                "switchRelatedOrderModal",
                "earnListDownloadRequested",
                "earnListDownloadSucceed",
                "earnListDownloadFailed",
                "toggleEarnListDownloadModal",
                "resetEarnListDownload",
                "cancelRelateRequested",
                "cancelRelateSucceed",
                "cancelRelateFailed",
                "resetCancelRelate",
                "setCancelRelateModal"
              ]
            },
            {
              "isNamespace": true,
              "localName": "withDrawActions",
              "sourceValue": "actions/withdraw",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts",
              "exportNames": [
                "withdrawListRequested",
                "withdrawListSucceed",
                "withdrawListFailed",
                "hideWithdrawListError",
                "resetWithdrawList",
                "changeTab",
                "switchWithdrawApplyModal",
                "setWithdrawApplyIsReserved",
                "withdrawApplyRequested",
                "withdrawApplySucceed",
                "withdrawApplyFailed",
                "hideWithdrawApplyError",
                "setStep",
                "resetWithdrawApply",
                "withdrawInitRequested",
                "withdrawInitSucceed",
                "withdrawInitFailed",
                "hideWithdrawInitError",
                "withdrawDebtRequested",
                "withdrawDebtSucceed",
                "withdrawDebtFailed",
                "hideWithdrawDebtError",
                "removeRelatedItemOrderId",
                "addRelatedItemOrderId",
                "inputChangeRelatedItemValue",
                "resetRelatedOrders",
                "changeRelatedOrderChecked",
                "resetRelatedOrderChecked",
                "swithWithdrawFXApplyModal",
                "setWithdrawFXApplyStep",
                "setWithdrawFXApplyIsReserved",
                "withdrawFXApplyRequested",
                "withdrawFXApplySucceed",
                "withdrawFXApplyFailed",
                "hideWithdrawFXApplyError",
                "resetWithdrawFXApply",
                "isWithdrawErrorPage",
                "getFXWithdrawFeeRequested",
                "getFXWithdrawFeeSucceed",
                "getFXWithdrawFeeFailed",
                "hideGetFXWithdrawFeeError",
                "resetGetFXWithdrawFee",
                "getFXCanRelatedOrderRequested",
                "getFXCanRelatedOrderSucceed",
                "getFXCanRelatedOrderFailed",
                "hideGetFXCanRelatedOrderError",
                "resetGetFXCanRelatedOrder",
                "pushFXCanRelatedOrderRequested",
                "pushFXCanRelatedOrderSucceed",
                "pushFXCanRelatedOrderFailed",
                "swithWithdrawFXReApplyModal",
                "setWithdrawFXReApplyStep",
                "withdrawFXReApplyRequested",
                "withdrawFXReApplySucceed",
                "withdrawFXReApplyFailed",
                "resetWithdrawFXReApply",
                "hideWithdrawFXReApplyError",
                "getWithdrawReApplyItemRequested",
                "getWithdrawReApplyItemSucceed",
                "getWithdrawReApplyItemFailed",
                "resetGetWithdrawReApplyItem",
                "withdrawCheckBothFrozen",
                "withdrawCheckBothFrozenSucceed",
                "withdrawCheckBothFrozenFailed",
                "getFxWithdrawHolderTypeRequested",
                "getFxWithdrawHolderTypeSucceed",
                "getFxWithdrawHolderTypeFailed",
                "withdrawDetailRequested",
                "withdrawDetailSucceed",
                "withdrawDetailFailed",
                "resetWithdrawDetail",
                "withdrawFeeRequested",
                "withdrawFeeSucceed",
                "withdrawFeeFailed",
                "queryAddMaterialInfoRequested",
                "queryAddMaterialInfoSucceed",
                "queryAddMaterialInfoFailed",
                "addMaterialCommitRequested",
                "addMaterialCommitSucceed",
                "addMaterialCommitFailed",
                "resetAddMaterialCommit",
                "cancelFxWithdrawRequested",
                "cancelFxWithdrawSucceed",
                "cancelFxWithdrawFailed",
                "resetCancelFxWithdraw",
                "setCancelFxWithdrawModal",
                "cancelWithdrawRequested",
                "cancelWithdrawSucceed",
                "cancelWithdrawFailed",
                "resetCancelWithdraw",
                "setCancelWithdrawModal",
                "cancelOnGoingTransferRequested",
                "cancelOnGoingTransferSucceed",
                "cancelOnGoingTransferFailed",
                "resetCancelOnGoingTransfer",
                "setCancelOnGoingTransferModal",
                "withdrawSupportCcys",
                "withdrawSupportCcysSucceed",
                "withdrawSupportCcysFailed",
                "transferFeeRequested",
                "transferFeeSucceed",
                "transferFeeFailed",
                "setTransferApplyStep",
                "transferApplyRequested",
                "transferApplySucceed",
                "transferApplyFailed",
                "hideTransferApplyError",
                "resetTransferApply",
                "setTransferStep",
                "queryTransferAddMaterialInfoRequested",
                "queryTransferAddMaterialInfoSucceed",
                "queryTransferAddMaterialInfoFailed",
                "transferAddMaterialCommitRequested",
                "transferAddMaterialCommitSucceed",
                "transferAddMaterialCommitFailed",
                "resetTransferAddMaterialCommit",
                "cancelTransferRequested",
                "cancelTransferSucceed",
                "cancelTransferFailed",
                "resetCancelTransfer",
                "setCancelModal",
                "addCardInfoRequested",
                "addCardInfoSucceed",
                "addCardInfoFailed",
                "querySupportBoostRequested",
                "querySupportBoostSucceed",
                "querySupportBoostFailed",
                "resetQuerySupportBoost",
                "queryCanFastWithdrawWorkRequested",
                "queryCanFastWithdrawWorkFailed",
                "queryCanFastWithdrawWorkSuccess",
                "queryACrossBorderRequested",
                "queryACrossBorderSuccess",
                "queryACrossBorderFailed",
                "getAbRequested",
                "getAbSucceed",
                "getAbFailed"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "Index",
              "loc": {
                "start": {
                  "line": 82,
                  "column": 62,
                  "index": 2096
                },
                "end": {
                  "line": 82,
                  "column": 67,
                  "index": 2101
                },
                "identifierName": "Index"
              },
              "actionsMethods": [
                {
                  "name": "viewRelatedOrderListRequested"
                },
                {
                  "name": "withdrawDetailRequested"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "viewRelatedOrderListRequested",
                  "importedName": "viewRelatedOrderListRequested",
                  "sourceValue": "actions/earnExchange",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/earnExchange.ts"
                },
                {
                  "localName": "withdrawDetailRequested",
                  "importedName": "withdrawDetailRequested",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 19,
                  "column": 6,
                  "index": 625
                },
                "end": {
                  "line": 19,
                  "column": 11,
                  "index": 630
                },
                "identifierName": "Index"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["actions", "withDrawActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/AddedServices/Apply/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "actions",
              "sourceValue": "actions/earnExchange",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/earnExchange.ts",
              "exportNames": [
                "earnExchangeListRequested",
                "earnExchangeListSucceed",
                "earnExchangeListFailed",
                "hideEarnExchangeListError",
                "setQueryEarnExchangeListType",
                "viewRelatedOrderListRequested",
                "viewRelatedOrderListSucceed",
                "viewRelatedOrderListFailed",
                "hideViewRelatedOrderListError",
                "queryReceiveMoneyOrderListRequested",
                "queryReceiveMoneyOrderListSucceed",
                "queryReceiveMoneyOrderListFailed",
                "hideQueryReceiveMoneyOrderListError",
                "queryReceiveMoneyOrderDetailRequested",
                "queryReceiveMoneyOrderDetailSucceed",
                "queryReceiveMoneyOrderDetailFailed",
                "hideQueryReceiveMoneyOrderDetailError",
                "resetRelateDetail",
                "setHasUpdateOrder",
                "resetSetHasUpdateOrder",
                "switchRelatedOrderModal",
                "earnListDownloadRequested",
                "earnListDownloadSucceed",
                "earnListDownloadFailed",
                "toggleEarnListDownloadModal",
                "resetEarnListDownload",
                "cancelRelateRequested",
                "cancelRelateSucceed",
                "cancelRelateFailed",
                "resetCancelRelate",
                "setCancelRelateModal"
              ]
            },
            {
              "isNamespace": true,
              "localName": "withDrawActions",
              "sourceValue": "actions/withdraw",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts",
              "exportNames": [
                "withdrawListRequested",
                "withdrawListSucceed",
                "withdrawListFailed",
                "hideWithdrawListError",
                "resetWithdrawList",
                "changeTab",
                "switchWithdrawApplyModal",
                "setWithdrawApplyIsReserved",
                "withdrawApplyRequested",
                "withdrawApplySucceed",
                "withdrawApplyFailed",
                "hideWithdrawApplyError",
                "setStep",
                "resetWithdrawApply",
                "withdrawInitRequested",
                "withdrawInitSucceed",
                "withdrawInitFailed",
                "hideWithdrawInitError",
                "withdrawDebtRequested",
                "withdrawDebtSucceed",
                "withdrawDebtFailed",
                "hideWithdrawDebtError",
                "removeRelatedItemOrderId",
                "addRelatedItemOrderId",
                "inputChangeRelatedItemValue",
                "resetRelatedOrders",
                "changeRelatedOrderChecked",
                "resetRelatedOrderChecked",
                "swithWithdrawFXApplyModal",
                "setWithdrawFXApplyStep",
                "setWithdrawFXApplyIsReserved",
                "withdrawFXApplyRequested",
                "withdrawFXApplySucceed",
                "withdrawFXApplyFailed",
                "hideWithdrawFXApplyError",
                "resetWithdrawFXApply",
                "isWithdrawErrorPage",
                "getFXWithdrawFeeRequested",
                "getFXWithdrawFeeSucceed",
                "getFXWithdrawFeeFailed",
                "hideGetFXWithdrawFeeError",
                "resetGetFXWithdrawFee",
                "getFXCanRelatedOrderRequested",
                "getFXCanRelatedOrderSucceed",
                "getFXCanRelatedOrderFailed",
                "hideGetFXCanRelatedOrderError",
                "resetGetFXCanRelatedOrder",
                "pushFXCanRelatedOrderRequested",
                "pushFXCanRelatedOrderSucceed",
                "pushFXCanRelatedOrderFailed",
                "swithWithdrawFXReApplyModal",
                "setWithdrawFXReApplyStep",
                "withdrawFXReApplyRequested",
                "withdrawFXReApplySucceed",
                "withdrawFXReApplyFailed",
                "resetWithdrawFXReApply",
                "hideWithdrawFXReApplyError",
                "getWithdrawReApplyItemRequested",
                "getWithdrawReApplyItemSucceed",
                "getWithdrawReApplyItemFailed",
                "resetGetWithdrawReApplyItem",
                "withdrawCheckBothFrozen",
                "withdrawCheckBothFrozenSucceed",
                "withdrawCheckBothFrozenFailed",
                "getFxWithdrawHolderTypeRequested",
                "getFxWithdrawHolderTypeSucceed",
                "getFxWithdrawHolderTypeFailed",
                "withdrawDetailRequested",
                "withdrawDetailSucceed",
                "withdrawDetailFailed",
                "resetWithdrawDetail",
                "withdrawFeeRequested",
                "withdrawFeeSucceed",
                "withdrawFeeFailed",
                "queryAddMaterialInfoRequested",
                "queryAddMaterialInfoSucceed",
                "queryAddMaterialInfoFailed",
                "addMaterialCommitRequested",
                "addMaterialCommitSucceed",
                "addMaterialCommitFailed",
                "resetAddMaterialCommit",
                "cancelFxWithdrawRequested",
                "cancelFxWithdrawSucceed",
                "cancelFxWithdrawFailed",
                "resetCancelFxWithdraw",
                "setCancelFxWithdrawModal",
                "cancelWithdrawRequested",
                "cancelWithdrawSucceed",
                "cancelWithdrawFailed",
                "resetCancelWithdraw",
                "setCancelWithdrawModal",
                "cancelOnGoingTransferRequested",
                "cancelOnGoingTransferSucceed",
                "cancelOnGoingTransferFailed",
                "resetCancelOnGoingTransfer",
                "setCancelOnGoingTransferModal",
                "withdrawSupportCcys",
                "withdrawSupportCcysSucceed",
                "withdrawSupportCcysFailed",
                "transferFeeRequested",
                "transferFeeSucceed",
                "transferFeeFailed",
                "setTransferApplyStep",
                "transferApplyRequested",
                "transferApplySucceed",
                "transferApplyFailed",
                "hideTransferApplyError",
                "resetTransferApply",
                "setTransferStep",
                "queryTransferAddMaterialInfoRequested",
                "queryTransferAddMaterialInfoSucceed",
                "queryTransferAddMaterialInfoFailed",
                "transferAddMaterialCommitRequested",
                "transferAddMaterialCommitSucceed",
                "transferAddMaterialCommitFailed",
                "resetTransferAddMaterialCommit",
                "cancelTransferRequested",
                "cancelTransferSucceed",
                "cancelTransferFailed",
                "resetCancelTransfer",
                "setCancelModal",
                "addCardInfoRequested",
                "addCardInfoSucceed",
                "addCardInfoFailed",
                "querySupportBoostRequested",
                "querySupportBoostSucceed",
                "querySupportBoostFailed",
                "resetQuerySupportBoost",
                "queryCanFastWithdrawWorkRequested",
                "queryCanFastWithdrawWorkFailed",
                "queryCanFastWithdrawWorkSuccess",
                "queryACrossBorderRequested",
                "queryACrossBorderSuccess",
                "queryACrossBorderFailed",
                "getAbRequested",
                "getAbSucceed",
                "getAbFailed"
              ]
            },
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "Index",
              "loc": {
                "start": {
                  "line": 198,
                  "column": 62,
                  "index": 5712
                },
                "end": {
                  "line": 198,
                  "column": 67,
                  "index": 5717
                },
                "identifierName": "Index"
              },
              "actionsMethods": [
                {
                  "name": "push"
                }
              ],
              "usedActionsDependencies": [
                {
                  "isNamespace": false,
                  "localName": "push",
                  "importedName": "push",
                  "sourceValue": "react-router-redux",
                  "dependencyPath": "react-router-redux"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 102,
                  "column": 6,
                  "index": 2672
                },
                "end": {
                  "line": 102,
                  "column": 11,
                  "index": 2677
                },
                "identifierName": "Index"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["actions", "withDrawActions"],
          "objectPropertyMap": {
            "push": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Action/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            },
            {
              "isNamespace": false,
              "localName": "destroy",
              "importedName": "destroy",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "Index",
              "loc": {
                "start": {
                  "line": 125,
                  "column": 62,
                  "index": 3316
                },
                "end": {
                  "line": 125,
                  "column": 67,
                  "index": 3321
                },
                "identifierName": "Index"
              },
              "actionsMethods": [
                {
                  "name": "destroy"
                }
              ],
              "usedActionsDependencies": [
                {
                  "isNamespace": false,
                  "localName": "destroy",
                  "importedName": "destroy",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 26,
                  "column": 6,
                  "index": 881
                },
                "end": {
                  "line": 26,
                  "column": 11,
                  "index": 886
                },
                "identifierName": "Index"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {
            "push": "push",
            "destroy": "destroy"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Settings/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": false,
              "localName": "goBack",
              "importedName": "goBack",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 17,
                  "column": 48,
                  "index": 423
                },
                "end": {
                  "line": 22,
                  "column": 1,
                  "index": 544
                }
              },
              "actionsMethods": [],
              "usedActionsDependencies": [],
              "nodeLoc": {
                "start": {
                  "line": 17,
                  "column": 48,
                  "index": 423
                },
                "end": {
                  "line": 22,
                  "column": 1,
                  "index": 544
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {
            "goBack": "goBack"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Settings/AccountComplete/index.tsx",
      "localConnect": "connect",
      "localCompose": "compose",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "metaActions",
              "sourceValue": "actions/meta",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
              "exportNames": [
                "fetchMetaRequested",
                "fetchMetaSucceed",
                "fetchMetaFailed",
                "resetFetchMeta",
                "hideFetchMetaError"
              ]
            },
            {
              "isNamespace": false,
              "localName": "change",
              "importedName": "change",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "initialize",
              "importedName": "initialize",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            }
          ],
          "actionsComponents": [],
          "warnings": [
            "[Warning] #316 composeArguments.length !== 1 (start line: 557, start column: 26, end line: 576",
            ", end column: 1)"
          ],
          "unknownElements": [],
          "spreadElementNames": ["metaActions"],
          "objectPropertyMap": {
            "change": "change",
            "initialize": "initialize"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Settings/PartnerPlan/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "actions",
              "sourceValue": "actions/partner",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/partner.ts",
              "exportNames": [
                "bindInviteCodeRequested",
                "bindInviteCodeSucceed",
                "bindInviteCodeFailed",
                "hideBindInviteCodeError",
                "initInviteCodeRequested",
                "initInviteCodeSucceed",
                "initInviteCodeFailed",
                "hideInitInviteCodeError",
                "togglePartnerEditable",
                "authorizeRequested",
                "authorizeSucceed",
                "authorizeFailed",
                "authorizeRefresh",
                "applyReportRequest",
                "applyReportSucceed",
                "applyReportFailed",
                "downloadReportRequest",
                "downloadReportSucceed",
                "downloadReportFailed",
                "getPartnerInfoRequested",
                "getPartnerInfoSucceed",
                "getPartnerInfoFailed",
                "loadReportMoreRequested",
                "changeTag",
                "loadReportMoreSucceed",
                "loadReportMoreFailed",
                "toggleShowAuditReason",
                "getOtherPartnerInfoRequested",
                "getOtherPartnerInfoSucceed",
                "getOtherPartnerInfoFailed",
                "loadOtherReportMoreRequested",
                "changeOtherReportTag",
                "loadOtherReportMoreSucceed",
                "loadOtherReportMoreFailed",
                "toggleOtherShowAuditReason",
                "updateOtherPartnerStatus",
                "updateOtherPartnerPermission",
                "submitPartnerRequested",
                "submitPartnerSucceed",
                "submitPartnerFailed",
                "updateBankCardValidationStatus",
                "submitPartnerSubAccountRequested",
                "submitPartnerSubAccountSucceed",
                "submitPartnerSubAccountFailed",
                "disablePartnerSubAccountRequested",
                "disablePartnerSubAccountSucceed",
                "disablePartnerSubAccountFailed",
                "permitPartnerSubAccountRequested",
                "permitPartnerSubAccountSucceed",
                "permitPartnerSubAccountFailed",
                "limitPartnerSubAccountRequested",
                "limitPartnerSubAccountSucceed",
                "limitPartnerSubAccountFailed",
                "partnerBindRequested",
                "partnerBindSucceed",
                "partnerBindFailed",
                "partnerBindInit"
              ]
            },
            {
              "isNamespace": true,
              "localName": "couponActions",
              "sourceValue": "actions/coupon",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/coupon.ts",
              "exportNames": [
                "couponQueryRequested",
                "couponQuerySucceed",
                "couponQueryFailed",
                "couponQueryError"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 65,
                  "column": 51,
                  "index": 2383
                },
                "end": {
                  "line": 242,
                  "column": 1,
                  "index": 8383
                }
              },
              "actionsMethods": [
                {
                  "name": "initInviteCodeRequested"
                },
                {
                  "name": "couponQueryRequested"
                },
                {
                  "name": "togglePartnerEditable"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "initInviteCodeRequested",
                  "importedName": "initInviteCodeRequested",
                  "sourceValue": "actions/partner",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/partner.ts"
                },
                {
                  "localName": "couponQueryRequested",
                  "importedName": "couponQueryRequested",
                  "sourceValue": "actions/coupon",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/coupon.ts"
                },
                {
                  "localName": "togglePartnerEditable",
                  "importedName": "togglePartnerEditable",
                  "sourceValue": "actions/partner",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/partner.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 65,
                  "column": 51,
                  "index": 2383
                },
                "end": {
                  "line": 242,
                  "column": 1,
                  "index": 8383
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["actions", "couponActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Settings/BasicSet/FirmProtocol/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "actions",
              "sourceValue": "actions/basicSet",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/basicSet.ts",
              "exportNames": [
                "createOrUpdateFirmInfoRequested",
                "createOrUpdateFirmInfoSucceed",
                "createOrUpdateFirmInfoFailed",
                "hideCreateOrUpdateFirmInfoError",
                "resetCreateOrUpdateFirmStepInfo",
                "setNextButtonLoading",
                "setFirmVerificationStep",
                "setFirmVerificationDifferCellsFlag",
                "clearFirmVerificationDifferCellsFlag",
                "toggleOtherArea",
                "updateTargetFirmItem",
                "saveUpdateData"
              ]
            },
            {
              "isNamespace": true,
              "localName": "firmActions",
              "sourceValue": "actions/firm",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/firm.ts",
              "exportNames": [
                "fetchFirmRequested",
                "fetchFirmSucceed",
                "fetchFirmFailed",
                "hideFetchFirmError",
                "resetFirmVerifyInfo",
                "firmRegistedIdExistRequested",
                "firmRegistedIdExistSucceed",
                "firmRegistedIdExistFailed",
                "hideFirmRegistedIdExistError",
                "resetFirmRegistedIdExist",
                "toggleFirmVerifyInitLoading",
                "toggleFirmVerifyTip",
                "checkEngNameExistRequested",
                "checkEngNameExistSucceed",
                "checkEngNameExistFailed",
                "hideCheckEngNameExistError",
                "resetCheckEngNameExist",
                "presetCountriesRequested",
                "presetCountriesSucceed",
                "presetCountriesFailed"
              ]
            },
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            },
            {
              "isNamespace": false,
              "localName": "destroy",
              "importedName": "destroy",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 49,
                  "column": 58,
                  "index": 1379
                },
                "end": {
                  "line": 180,
                  "column": 1,
                  "index": 5148
                }
              },
              "actionsMethods": [
                {
                  "name": "fetchFirmRequested"
                },
                {
                  "name": "push"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "fetchFirmRequested",
                  "importedName": "fetchFirmRequested",
                  "sourceValue": "actions/firm",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/firm.ts"
                },
                {
                  "isNamespace": false,
                  "localName": "push",
                  "importedName": "push",
                  "sourceValue": "react-router-redux",
                  "dependencyPath": "react-router-redux"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 49,
                  "column": 58,
                  "index": 1379
                },
                "end": {
                  "line": 180,
                  "column": 1,
                  "index": 5148
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["actions", "firmActions"],
          "objectPropertyMap": {
            "push": "push",
            "destroy": "destroy"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Settings/OperationRecords/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "actions",
              "sourceValue": "actions/meta",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
              "exportNames": [
                "fetchMetaRequested",
                "fetchMetaSucceed",
                "fetchMetaFailed",
                "resetFetchMeta",
                "hideFetchMetaError"
              ]
            },
            {
              "isNamespace": false,
              "localName": "reset",
              "importedName": "reset",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 46,
                  "column": 54,
                  "index": 1445
                },
                "end": {
                  "line": 121,
                  "column": 1,
                  "index": 3655
                }
              },
              "actionsMethods": [
                {
                  "name": "fetchMetaRequested",
                  "usage": "EMMetaUsages.OperationRecords"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "fetchMetaRequested",
                  "importedName": "fetchMetaRequested",
                  "sourceValue": "actions/meta",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
                  "usage": "EMMetaUsages.OperationRecords"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 46,
                  "column": 54,
                  "index": 1445
                },
                "end": {
                  "line": 121,
                  "column": 1,
                  "index": 3655
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["actions"],
          "objectPropertyMap": {
            "reset": "reset"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Collection/CollectionDetail/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "actions",
              "sourceValue": "actions/collection",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/collection.ts",
              "exportNames": [
                "collectionListRequested",
                "collectionListSucceed",
                "collectionListFailed",
                "hideCollectionListError",
                "addCollectionRequested",
                "addCollectionSucceed",
                "addCollectionFailed",
                "resetAddCollection",
                "hideAddCollectionError",
                "reAddCollectionRequested",
                "oneCollectionRequested",
                "oneCollectionSucceed",
                "oneCollectionFailed",
                "hideOneCollectionError",
                "allServerProviderRequested",
                "allServerProviderSucceed",
                "allServerProviderFailed",
                "hideAllServerProviderError",
                "changeVaStatusRequested",
                "changeVaStatusSucceed",
                "changeVaStatusFailed",
                "toggleSleepModal",
                "depositLimitRequested",
                "depositLimitSucceed",
                "depositLimitFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "modalActions",
              "sourceValue": "actions/modal",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/modal.ts",
              "exportNames": [
                "toggleModalStatus",
                "toggleModalWithCallback",
                "toggleGlobalPriorityModalStatus"
              ]
            },
            {
              "isNamespace": false,
              "localName": "change",
              "importedName": "change",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "touch",
              "importedName": "touch",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            }
          ],
          "actionsComponents": [],
          "warnings": [
            "[Warning] #230 lastArguments.length !== 1 (start line: 213, start column: 18, end line: 213",
            ", end column: 62)"
          ],
          "unknownElements": [],
          "spreadElementNames": ["actions", "modalActions"],
          "objectPropertyMap": {
            "change": "change",
            "touch": "touch"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Withdrawal/WithdrawalChoose/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "actions",
              "sourceValue": "actions/withdrawals",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts",
              "exportNames": [
                "accountListRequested",
                "accountListSucceed",
                "accountListFailed",
                "hideAccountListError",
                "deleteItemRequested",
                "deleteItemSucceed",
                "deleteItemFailed",
                "swithDeleteItemModal",
                "setDeleteItemId",
                "setDeleteItemType",
                "hideDeleteItemError",
                "historyDetailRequested",
                "historyDetailSucceed",
                "historyDetailFailed",
                "hideHistoryDetailError",
                "createAccountRequested",
                "createAccountSucceed",
                "createAccountFailed",
                "setCreateAccountStep",
                "resetCreateAccount",
                "hideCreateAccountError",
                "withdrawFXAddRequested",
                "withdrawFXAddSucceed",
                "withdrawFXAddFailed",
                "hideWithdrawFXAddError",
                "setWithdrawFXAddStep",
                "resetWithdrawFXAdd",
                "withdrawFXAddVerifyRequested",
                "withdrawFXAddVerifySucceed",
                "withdrawFXAddVerifyFailed",
                "queryBanks",
                "queryBanksSucceed",
                "queryBanksFailed",
                "queryProvinces",
                "queryProvincesSucceed",
                "queryProvincesFailed",
                "getLegalProfile",
                "getLegalProfileSucceed",
                "getLegalProfileFailed",
                "createTransferAccountRequested",
                "createTransferAccountSucceed",
                "createTransferAccountFailed",
                "hideCreateTransferAccountError",
                "setCreateTransferAccountStep",
                "resetCreateTransferAccount",
                "setBeneficiaryNameError",
                "getBeneficiayAccountNoRequested",
                "getBeneficiayAccountNoSucceed",
                "getBeneficiayAccountNoFailed",
                "resetBeneficiayAccountNo",
                "getAccountLimitRequested",
                "getAccountLimitSucceed",
                "getAccountLimitFailed",
                "bindAccountPhoneNoRequested",
                "bindAccountPhoneNoSucceed",
                "bindAccountPhoneNoFailed",
                "bindAccountPhoneNoVerifyFailed",
                "swithBindPhoneNoModal",
                "getBeneficiayPhoneNoRequested",
                "getBeneficiayPhoneNoSucceed",
                "getBeneficiayPhoneNoFailed",
                "resetBeneficiayPhoneNo",
                "getFXPrivateAgreementRequested",
                "getFXPrivateAgreementSucceed",
                "getFXPrivateAgreementFailed",
                "getFXPublicAgreementRequested",
                "getFXPublicAgreementSucceed",
                "getFXPublicAgreementFailed",
                "getTransferPublicAgreementRequested",
                "getTransferPublicAgreementSucceed",
                "getTransferPublicAgreementFailed",
                "getWithdrawNormalAgreementRequested",
                "getWithdrawNormalAgreementSucceed",
                "getWithdrawNormalAgreementFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "withdrawActions",
              "sourceValue": "actions/withdraw",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts",
              "exportNames": [
                "withdrawListRequested",
                "withdrawListSucceed",
                "withdrawListFailed",
                "hideWithdrawListError",
                "resetWithdrawList",
                "changeTab",
                "switchWithdrawApplyModal",
                "setWithdrawApplyIsReserved",
                "withdrawApplyRequested",
                "withdrawApplySucceed",
                "withdrawApplyFailed",
                "hideWithdrawApplyError",
                "setStep",
                "resetWithdrawApply",
                "withdrawInitRequested",
                "withdrawInitSucceed",
                "withdrawInitFailed",
                "hideWithdrawInitError",
                "withdrawDebtRequested",
                "withdrawDebtSucceed",
                "withdrawDebtFailed",
                "hideWithdrawDebtError",
                "removeRelatedItemOrderId",
                "addRelatedItemOrderId",
                "inputChangeRelatedItemValue",
                "resetRelatedOrders",
                "changeRelatedOrderChecked",
                "resetRelatedOrderChecked",
                "swithWithdrawFXApplyModal",
                "setWithdrawFXApplyStep",
                "setWithdrawFXApplyIsReserved",
                "withdrawFXApplyRequested",
                "withdrawFXApplySucceed",
                "withdrawFXApplyFailed",
                "hideWithdrawFXApplyError",
                "resetWithdrawFXApply",
                "isWithdrawErrorPage",
                "getFXWithdrawFeeRequested",
                "getFXWithdrawFeeSucceed",
                "getFXWithdrawFeeFailed",
                "hideGetFXWithdrawFeeError",
                "resetGetFXWithdrawFee",
                "getFXCanRelatedOrderRequested",
                "getFXCanRelatedOrderSucceed",
                "getFXCanRelatedOrderFailed",
                "hideGetFXCanRelatedOrderError",
                "resetGetFXCanRelatedOrder",
                "pushFXCanRelatedOrderRequested",
                "pushFXCanRelatedOrderSucceed",
                "pushFXCanRelatedOrderFailed",
                "swithWithdrawFXReApplyModal",
                "setWithdrawFXReApplyStep",
                "withdrawFXReApplyRequested",
                "withdrawFXReApplySucceed",
                "withdrawFXReApplyFailed",
                "resetWithdrawFXReApply",
                "hideWithdrawFXReApplyError",
                "getWithdrawReApplyItemRequested",
                "getWithdrawReApplyItemSucceed",
                "getWithdrawReApplyItemFailed",
                "resetGetWithdrawReApplyItem",
                "withdrawCheckBothFrozen",
                "withdrawCheckBothFrozenSucceed",
                "withdrawCheckBothFrozenFailed",
                "getFxWithdrawHolderTypeRequested",
                "getFxWithdrawHolderTypeSucceed",
                "getFxWithdrawHolderTypeFailed",
                "withdrawDetailRequested",
                "withdrawDetailSucceed",
                "withdrawDetailFailed",
                "resetWithdrawDetail",
                "withdrawFeeRequested",
                "withdrawFeeSucceed",
                "withdrawFeeFailed",
                "queryAddMaterialInfoRequested",
                "queryAddMaterialInfoSucceed",
                "queryAddMaterialInfoFailed",
                "addMaterialCommitRequested",
                "addMaterialCommitSucceed",
                "addMaterialCommitFailed",
                "resetAddMaterialCommit",
                "cancelFxWithdrawRequested",
                "cancelFxWithdrawSucceed",
                "cancelFxWithdrawFailed",
                "resetCancelFxWithdraw",
                "setCancelFxWithdrawModal",
                "cancelWithdrawRequested",
                "cancelWithdrawSucceed",
                "cancelWithdrawFailed",
                "resetCancelWithdraw",
                "setCancelWithdrawModal",
                "cancelOnGoingTransferRequested",
                "cancelOnGoingTransferSucceed",
                "cancelOnGoingTransferFailed",
                "resetCancelOnGoingTransfer",
                "setCancelOnGoingTransferModal",
                "withdrawSupportCcys",
                "withdrawSupportCcysSucceed",
                "withdrawSupportCcysFailed",
                "transferFeeRequested",
                "transferFeeSucceed",
                "transferFeeFailed",
                "setTransferApplyStep",
                "transferApplyRequested",
                "transferApplySucceed",
                "transferApplyFailed",
                "hideTransferApplyError",
                "resetTransferApply",
                "setTransferStep",
                "queryTransferAddMaterialInfoRequested",
                "queryTransferAddMaterialInfoSucceed",
                "queryTransferAddMaterialInfoFailed",
                "transferAddMaterialCommitRequested",
                "transferAddMaterialCommitSucceed",
                "transferAddMaterialCommitFailed",
                "resetTransferAddMaterialCommit",
                "cancelTransferRequested",
                "cancelTransferSucceed",
                "cancelTransferFailed",
                "resetCancelTransfer",
                "setCancelModal",
                "addCardInfoRequested",
                "addCardInfoSucceed",
                "addCardInfoFailed",
                "querySupportBoostRequested",
                "querySupportBoostSucceed",
                "querySupportBoostFailed",
                "resetQuerySupportBoost",
                "queryCanFastWithdrawWorkRequested",
                "queryCanFastWithdrawWorkFailed",
                "queryCanFastWithdrawWorkSuccess",
                "queryACrossBorderRequested",
                "queryACrossBorderSuccess",
                "queryACrossBorderFailed",
                "getAbRequested",
                "getAbSucceed",
                "getAbFailed"
              ]
            },
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 111,
                  "column": 56,
                  "index": 3652
                },
                "end": {
                  "line": 585,
                  "column": 1,
                  "index": 17781
                }
              },
              "actionsMethods": [
                {
                  "name": "accountListRequested"
                },
                {
                  "name": "queryACrossBorderRequested"
                },
                {
                  "name": "exchangeStaffListRequest"
                },
                {
                  "name": "push"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "accountListRequested",
                  "importedName": "accountListRequested",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts"
                },
                {
                  "localName": "queryACrossBorderRequested",
                  "importedName": "queryACrossBorderRequested",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "isNamespace": false,
                  "localName": "push",
                  "importedName": "push",
                  "sourceValue": "react-router-redux",
                  "dependencyPath": "react-router-redux"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 111,
                  "column": 56,
                  "index": 3652
                },
                "end": {
                  "line": 585,
                  "column": 1,
                  "index": 17781
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["actions", "withdrawActions"],
          "objectPropertyMap": {
            "push": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Withdrawal/WithdrawalFX/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "actions",
              "sourceValue": "actions/withdrawals",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts",
              "exportNames": [
                "accountListRequested",
                "accountListSucceed",
                "accountListFailed",
                "hideAccountListError",
                "deleteItemRequested",
                "deleteItemSucceed",
                "deleteItemFailed",
                "swithDeleteItemModal",
                "setDeleteItemId",
                "setDeleteItemType",
                "hideDeleteItemError",
                "historyDetailRequested",
                "historyDetailSucceed",
                "historyDetailFailed",
                "hideHistoryDetailError",
                "createAccountRequested",
                "createAccountSucceed",
                "createAccountFailed",
                "setCreateAccountStep",
                "resetCreateAccount",
                "hideCreateAccountError",
                "withdrawFXAddRequested",
                "withdrawFXAddSucceed",
                "withdrawFXAddFailed",
                "hideWithdrawFXAddError",
                "setWithdrawFXAddStep",
                "resetWithdrawFXAdd",
                "withdrawFXAddVerifyRequested",
                "withdrawFXAddVerifySucceed",
                "withdrawFXAddVerifyFailed",
                "queryBanks",
                "queryBanksSucceed",
                "queryBanksFailed",
                "queryProvinces",
                "queryProvincesSucceed",
                "queryProvincesFailed",
                "getLegalProfile",
                "getLegalProfileSucceed",
                "getLegalProfileFailed",
                "createTransferAccountRequested",
                "createTransferAccountSucceed",
                "createTransferAccountFailed",
                "hideCreateTransferAccountError",
                "setCreateTransferAccountStep",
                "resetCreateTransferAccount",
                "setBeneficiaryNameError",
                "getBeneficiayAccountNoRequested",
                "getBeneficiayAccountNoSucceed",
                "getBeneficiayAccountNoFailed",
                "resetBeneficiayAccountNo",
                "getAccountLimitRequested",
                "getAccountLimitSucceed",
                "getAccountLimitFailed",
                "bindAccountPhoneNoRequested",
                "bindAccountPhoneNoSucceed",
                "bindAccountPhoneNoFailed",
                "bindAccountPhoneNoVerifyFailed",
                "swithBindPhoneNoModal",
                "getBeneficiayPhoneNoRequested",
                "getBeneficiayPhoneNoSucceed",
                "getBeneficiayPhoneNoFailed",
                "resetBeneficiayPhoneNo",
                "getFXPrivateAgreementRequested",
                "getFXPrivateAgreementSucceed",
                "getFXPrivateAgreementFailed",
                "getFXPublicAgreementRequested",
                "getFXPublicAgreementSucceed",
                "getFXPublicAgreementFailed",
                "getTransferPublicAgreementRequested",
                "getTransferPublicAgreementSucceed",
                "getTransferPublicAgreementFailed",
                "getWithdrawNormalAgreementRequested",
                "getWithdrawNormalAgreementSucceed",
                "getWithdrawNormalAgreementFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "fileActions",
              "sourceValue": "actions/file",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/file.ts",
              "exportNames": [
                "uploadFileRequested",
                "uploadFileSucceed",
                "uploadFileFailed",
                "hideUploadFileError",
                "deleteFile",
                "deleteSyncFile",
                "resetFile",
                "resetCreateTransferAccountFile",
                "resetAllFile",
                "fileDownload",
                "getThumbnailRequested",
                "getThumbnailSucceed",
                "getThumbnailFailed",
                "initGetThumbnail",
                "setAnnexeRenameModal",
                "updateAnnexeFileName"
              ]
            },
            {
              "isNamespace": false,
              "localName": "reset",
              "importedName": "reset",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 57,
                  "column": 52,
                  "index": 1686
                },
                "end": {
                  "line": 71,
                  "column": 1,
                  "index": 2127
                }
              },
              "actionsMethods": [],
              "usedActionsDependencies": [],
              "nodeLoc": {
                "start": {
                  "line": 57,
                  "column": 52,
                  "index": 1686
                },
                "end": {
                  "line": 71,
                  "column": 1,
                  "index": 2127
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["actions", "fileActions"],
          "objectPropertyMap": {
            "reset": "reset"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Withdrawal/WithdrawalNormalAdd/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "actions",
              "sourceValue": "actions/withdrawals",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts",
              "exportNames": [
                "accountListRequested",
                "accountListSucceed",
                "accountListFailed",
                "hideAccountListError",
                "deleteItemRequested",
                "deleteItemSucceed",
                "deleteItemFailed",
                "swithDeleteItemModal",
                "setDeleteItemId",
                "setDeleteItemType",
                "hideDeleteItemError",
                "historyDetailRequested",
                "historyDetailSucceed",
                "historyDetailFailed",
                "hideHistoryDetailError",
                "createAccountRequested",
                "createAccountSucceed",
                "createAccountFailed",
                "setCreateAccountStep",
                "resetCreateAccount",
                "hideCreateAccountError",
                "withdrawFXAddRequested",
                "withdrawFXAddSucceed",
                "withdrawFXAddFailed",
                "hideWithdrawFXAddError",
                "setWithdrawFXAddStep",
                "resetWithdrawFXAdd",
                "withdrawFXAddVerifyRequested",
                "withdrawFXAddVerifySucceed",
                "withdrawFXAddVerifyFailed",
                "queryBanks",
                "queryBanksSucceed",
                "queryBanksFailed",
                "queryProvinces",
                "queryProvincesSucceed",
                "queryProvincesFailed",
                "getLegalProfile",
                "getLegalProfileSucceed",
                "getLegalProfileFailed",
                "createTransferAccountRequested",
                "createTransferAccountSucceed",
                "createTransferAccountFailed",
                "hideCreateTransferAccountError",
                "setCreateTransferAccountStep",
                "resetCreateTransferAccount",
                "setBeneficiaryNameError",
                "getBeneficiayAccountNoRequested",
                "getBeneficiayAccountNoSucceed",
                "getBeneficiayAccountNoFailed",
                "resetBeneficiayAccountNo",
                "getAccountLimitRequested",
                "getAccountLimitSucceed",
                "getAccountLimitFailed",
                "bindAccountPhoneNoRequested",
                "bindAccountPhoneNoSucceed",
                "bindAccountPhoneNoFailed",
                "bindAccountPhoneNoVerifyFailed",
                "swithBindPhoneNoModal",
                "getBeneficiayPhoneNoRequested",
                "getBeneficiayPhoneNoSucceed",
                "getBeneficiayPhoneNoFailed",
                "resetBeneficiayPhoneNo",
                "getFXPrivateAgreementRequested",
                "getFXPrivateAgreementSucceed",
                "getFXPrivateAgreementFailed",
                "getFXPublicAgreementRequested",
                "getFXPublicAgreementSucceed",
                "getFXPublicAgreementFailed",
                "getTransferPublicAgreementRequested",
                "getTransferPublicAgreementSucceed",
                "getTransferPublicAgreementFailed",
                "getWithdrawNormalAgreementRequested",
                "getWithdrawNormalAgreementSucceed",
                "getWithdrawNormalAgreementFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "fileActions",
              "sourceValue": "actions/file",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/file.ts",
              "exportNames": [
                "uploadFileRequested",
                "uploadFileSucceed",
                "uploadFileFailed",
                "hideUploadFileError",
                "deleteFile",
                "deleteSyncFile",
                "resetFile",
                "resetCreateTransferAccountFile",
                "resetAllFile",
                "fileDownload",
                "getThumbnailRequested",
                "getThumbnailSucceed",
                "getThumbnailFailed",
                "initGetThumbnail",
                "setAnnexeRenameModal",
                "updateAnnexeFileName"
              ]
            },
            {
              "isNamespace": true,
              "localName": "withdrawActions",
              "sourceValue": "actions/withdraw",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts",
              "exportNames": [
                "withdrawListRequested",
                "withdrawListSucceed",
                "withdrawListFailed",
                "hideWithdrawListError",
                "resetWithdrawList",
                "changeTab",
                "switchWithdrawApplyModal",
                "setWithdrawApplyIsReserved",
                "withdrawApplyRequested",
                "withdrawApplySucceed",
                "withdrawApplyFailed",
                "hideWithdrawApplyError",
                "setStep",
                "resetWithdrawApply",
                "withdrawInitRequested",
                "withdrawInitSucceed",
                "withdrawInitFailed",
                "hideWithdrawInitError",
                "withdrawDebtRequested",
                "withdrawDebtSucceed",
                "withdrawDebtFailed",
                "hideWithdrawDebtError",
                "removeRelatedItemOrderId",
                "addRelatedItemOrderId",
                "inputChangeRelatedItemValue",
                "resetRelatedOrders",
                "changeRelatedOrderChecked",
                "resetRelatedOrderChecked",
                "swithWithdrawFXApplyModal",
                "setWithdrawFXApplyStep",
                "setWithdrawFXApplyIsReserved",
                "withdrawFXApplyRequested",
                "withdrawFXApplySucceed",
                "withdrawFXApplyFailed",
                "hideWithdrawFXApplyError",
                "resetWithdrawFXApply",
                "isWithdrawErrorPage",
                "getFXWithdrawFeeRequested",
                "getFXWithdrawFeeSucceed",
                "getFXWithdrawFeeFailed",
                "hideGetFXWithdrawFeeError",
                "resetGetFXWithdrawFee",
                "getFXCanRelatedOrderRequested",
                "getFXCanRelatedOrderSucceed",
                "getFXCanRelatedOrderFailed",
                "hideGetFXCanRelatedOrderError",
                "resetGetFXCanRelatedOrder",
                "pushFXCanRelatedOrderRequested",
                "pushFXCanRelatedOrderSucceed",
                "pushFXCanRelatedOrderFailed",
                "swithWithdrawFXReApplyModal",
                "setWithdrawFXReApplyStep",
                "withdrawFXReApplyRequested",
                "withdrawFXReApplySucceed",
                "withdrawFXReApplyFailed",
                "resetWithdrawFXReApply",
                "hideWithdrawFXReApplyError",
                "getWithdrawReApplyItemRequested",
                "getWithdrawReApplyItemSucceed",
                "getWithdrawReApplyItemFailed",
                "resetGetWithdrawReApplyItem",
                "withdrawCheckBothFrozen",
                "withdrawCheckBothFrozenSucceed",
                "withdrawCheckBothFrozenFailed",
                "getFxWithdrawHolderTypeRequested",
                "getFxWithdrawHolderTypeSucceed",
                "getFxWithdrawHolderTypeFailed",
                "withdrawDetailRequested",
                "withdrawDetailSucceed",
                "withdrawDetailFailed",
                "resetWithdrawDetail",
                "withdrawFeeRequested",
                "withdrawFeeSucceed",
                "withdrawFeeFailed",
                "queryAddMaterialInfoRequested",
                "queryAddMaterialInfoSucceed",
                "queryAddMaterialInfoFailed",
                "addMaterialCommitRequested",
                "addMaterialCommitSucceed",
                "addMaterialCommitFailed",
                "resetAddMaterialCommit",
                "cancelFxWithdrawRequested",
                "cancelFxWithdrawSucceed",
                "cancelFxWithdrawFailed",
                "resetCancelFxWithdraw",
                "setCancelFxWithdrawModal",
                "cancelWithdrawRequested",
                "cancelWithdrawSucceed",
                "cancelWithdrawFailed",
                "resetCancelWithdraw",
                "setCancelWithdrawModal",
                "cancelOnGoingTransferRequested",
                "cancelOnGoingTransferSucceed",
                "cancelOnGoingTransferFailed",
                "resetCancelOnGoingTransfer",
                "setCancelOnGoingTransferModal",
                "withdrawSupportCcys",
                "withdrawSupportCcysSucceed",
                "withdrawSupportCcysFailed",
                "transferFeeRequested",
                "transferFeeSucceed",
                "transferFeeFailed",
                "setTransferApplyStep",
                "transferApplyRequested",
                "transferApplySucceed",
                "transferApplyFailed",
                "hideTransferApplyError",
                "resetTransferApply",
                "setTransferStep",
                "queryTransferAddMaterialInfoRequested",
                "queryTransferAddMaterialInfoSucceed",
                "queryTransferAddMaterialInfoFailed",
                "transferAddMaterialCommitRequested",
                "transferAddMaterialCommitSucceed",
                "transferAddMaterialCommitFailed",
                "resetTransferAddMaterialCommit",
                "cancelTransferRequested",
                "cancelTransferSucceed",
                "cancelTransferFailed",
                "resetCancelTransfer",
                "setCancelModal",
                "addCardInfoRequested",
                "addCardInfoSucceed",
                "addCardInfoFailed",
                "querySupportBoostRequested",
                "querySupportBoostSucceed",
                "querySupportBoostFailed",
                "resetQuerySupportBoost",
                "queryCanFastWithdrawWorkRequested",
                "queryCanFastWithdrawWorkFailed",
                "queryCanFastWithdrawWorkSuccess",
                "queryACrossBorderRequested",
                "queryACrossBorderSuccess",
                "queryACrossBorderFailed",
                "getAbRequested",
                "getAbSucceed",
                "getAbFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "metaActions",
              "sourceValue": "actions/meta",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
              "exportNames": [
                "fetchMetaRequested",
                "fetchMetaSucceed",
                "fetchMetaFailed",
                "resetFetchMeta",
                "hideFetchMetaError"
              ]
            },
            {
              "isNamespace": true,
              "localName": "submitActions",
              "sourceValue": "actions/submit",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/submit.ts",
              "exportNames": [
                "submitRequested",
                "submitSucceed",
                "submitFailed",
                "resetSubmit"
              ]
            },
            {
              "isNamespace": false,
              "localName": "initialize",
              "importedName": "initialize",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "destroy",
              "importedName": "destroy",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 105,
                  "column": 72,
                  "index": 3200
                },
                "end": {
                  "line": 258,
                  "column": 1,
                  "index": 8087
                }
              },
              "actionsMethods": [
                {
                  "name": "fetchMetaRequested",
                  "usage": "EMMetaUsages.BeneficaryAddressCountry"
                },
                {
                  "name": "historyDetailRequested"
                },
                {
                  "name": "initialize"
                },
                {
                  "name": "resetCreateAccount"
                },
                {
                  "name": "destroy"
                },
                {
                  "name": "resetFetchMeta",
                  "usage": "EMMetaUsages.BeneficaryAddressProvince"
                },
                {
                  "name": "resetFetchMeta",
                  "usage": "EMMetaUsages.BeneficaryAddressCity"
                },
                {
                  "name": "resetFetchMeta",
                  "usage": "EMMetaUsages.BeneficaryAddressTown"
                },
                {
                  "name": "resetSubmit",
                  "usage": "EMSubmitUsages.BenificiaryAddressCreate"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "fetchMetaRequested",
                  "importedName": "fetchMetaRequested",
                  "sourceValue": "actions/meta",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
                  "usage": "EMMetaUsages.BeneficaryAddressCountry"
                },
                {
                  "localName": "historyDetailRequested",
                  "importedName": "historyDetailRequested",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts"
                },
                {
                  "isNamespace": false,
                  "localName": "initialize",
                  "importedName": "initialize",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                },
                {
                  "localName": "resetCreateAccount",
                  "importedName": "resetCreateAccount",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts"
                },
                {
                  "isNamespace": false,
                  "localName": "destroy",
                  "importedName": "destroy",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                },
                {
                  "localName": "resetFetchMeta",
                  "importedName": "resetFetchMeta",
                  "sourceValue": "actions/meta",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
                  "usage": "EMMetaUsages.BeneficaryAddressProvince"
                },
                {
                  "localName": "resetFetchMeta",
                  "importedName": "resetFetchMeta",
                  "sourceValue": "actions/meta",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
                  "usage": "EMMetaUsages.BeneficaryAddressCity"
                },
                {
                  "localName": "resetFetchMeta",
                  "importedName": "resetFetchMeta",
                  "sourceValue": "actions/meta",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
                  "usage": "EMMetaUsages.BeneficaryAddressTown"
                },
                {
                  "localName": "resetSubmit",
                  "importedName": "resetSubmit",
                  "sourceValue": "actions/submit",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/submit.ts",
                  "usage": "EMSubmitUsages.BenificiaryAddressCreate"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 105,
                  "column": 72,
                  "index": 3200
                },
                "end": {
                  "line": 258,
                  "column": 1,
                  "index": 8087
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [
            "actions",
            "fileActions",
            "withdrawActions",
            "metaActions",
            "submitActions"
          ],
          "objectPropertyMap": {
            "initialize": "initialize",
            "destroy": "destroy"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Withdrawal/WithdrawalTransferAdd/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "actions",
              "sourceValue": "actions/withdrawals",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts",
              "exportNames": [
                "accountListRequested",
                "accountListSucceed",
                "accountListFailed",
                "hideAccountListError",
                "deleteItemRequested",
                "deleteItemSucceed",
                "deleteItemFailed",
                "swithDeleteItemModal",
                "setDeleteItemId",
                "setDeleteItemType",
                "hideDeleteItemError",
                "historyDetailRequested",
                "historyDetailSucceed",
                "historyDetailFailed",
                "hideHistoryDetailError",
                "createAccountRequested",
                "createAccountSucceed",
                "createAccountFailed",
                "setCreateAccountStep",
                "resetCreateAccount",
                "hideCreateAccountError",
                "withdrawFXAddRequested",
                "withdrawFXAddSucceed",
                "withdrawFXAddFailed",
                "hideWithdrawFXAddError",
                "setWithdrawFXAddStep",
                "resetWithdrawFXAdd",
                "withdrawFXAddVerifyRequested",
                "withdrawFXAddVerifySucceed",
                "withdrawFXAddVerifyFailed",
                "queryBanks",
                "queryBanksSucceed",
                "queryBanksFailed",
                "queryProvinces",
                "queryProvincesSucceed",
                "queryProvincesFailed",
                "getLegalProfile",
                "getLegalProfileSucceed",
                "getLegalProfileFailed",
                "createTransferAccountRequested",
                "createTransferAccountSucceed",
                "createTransferAccountFailed",
                "hideCreateTransferAccountError",
                "setCreateTransferAccountStep",
                "resetCreateTransferAccount",
                "setBeneficiaryNameError",
                "getBeneficiayAccountNoRequested",
                "getBeneficiayAccountNoSucceed",
                "getBeneficiayAccountNoFailed",
                "resetBeneficiayAccountNo",
                "getAccountLimitRequested",
                "getAccountLimitSucceed",
                "getAccountLimitFailed",
                "bindAccountPhoneNoRequested",
                "bindAccountPhoneNoSucceed",
                "bindAccountPhoneNoFailed",
                "bindAccountPhoneNoVerifyFailed",
                "swithBindPhoneNoModal",
                "getBeneficiayPhoneNoRequested",
                "getBeneficiayPhoneNoSucceed",
                "getBeneficiayPhoneNoFailed",
                "resetBeneficiayPhoneNo",
                "getFXPrivateAgreementRequested",
                "getFXPrivateAgreementSucceed",
                "getFXPrivateAgreementFailed",
                "getFXPublicAgreementRequested",
                "getFXPublicAgreementSucceed",
                "getFXPublicAgreementFailed",
                "getTransferPublicAgreementRequested",
                "getTransferPublicAgreementSucceed",
                "getTransferPublicAgreementFailed",
                "getWithdrawNormalAgreementRequested",
                "getWithdrawNormalAgreementSucceed",
                "getWithdrawNormalAgreementFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "fileActions",
              "sourceValue": "actions/file",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/file.ts",
              "exportNames": [
                "uploadFileRequested",
                "uploadFileSucceed",
                "uploadFileFailed",
                "hideUploadFileError",
                "deleteFile",
                "deleteSyncFile",
                "resetFile",
                "resetCreateTransferAccountFile",
                "resetAllFile",
                "fileDownload",
                "getThumbnailRequested",
                "getThumbnailSucceed",
                "getThumbnailFailed",
                "initGetThumbnail",
                "setAnnexeRenameModal",
                "updateAnnexeFileName"
              ]
            },
            {
              "isNamespace": true,
              "localName": "withdrawActions",
              "sourceValue": "actions/withdraw",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts",
              "exportNames": [
                "withdrawListRequested",
                "withdrawListSucceed",
                "withdrawListFailed",
                "hideWithdrawListError",
                "resetWithdrawList",
                "changeTab",
                "switchWithdrawApplyModal",
                "setWithdrawApplyIsReserved",
                "withdrawApplyRequested",
                "withdrawApplySucceed",
                "withdrawApplyFailed",
                "hideWithdrawApplyError",
                "setStep",
                "resetWithdrawApply",
                "withdrawInitRequested",
                "withdrawInitSucceed",
                "withdrawInitFailed",
                "hideWithdrawInitError",
                "withdrawDebtRequested",
                "withdrawDebtSucceed",
                "withdrawDebtFailed",
                "hideWithdrawDebtError",
                "removeRelatedItemOrderId",
                "addRelatedItemOrderId",
                "inputChangeRelatedItemValue",
                "resetRelatedOrders",
                "changeRelatedOrderChecked",
                "resetRelatedOrderChecked",
                "swithWithdrawFXApplyModal",
                "setWithdrawFXApplyStep",
                "setWithdrawFXApplyIsReserved",
                "withdrawFXApplyRequested",
                "withdrawFXApplySucceed",
                "withdrawFXApplyFailed",
                "hideWithdrawFXApplyError",
                "resetWithdrawFXApply",
                "isWithdrawErrorPage",
                "getFXWithdrawFeeRequested",
                "getFXWithdrawFeeSucceed",
                "getFXWithdrawFeeFailed",
                "hideGetFXWithdrawFeeError",
                "resetGetFXWithdrawFee",
                "getFXCanRelatedOrderRequested",
                "getFXCanRelatedOrderSucceed",
                "getFXCanRelatedOrderFailed",
                "hideGetFXCanRelatedOrderError",
                "resetGetFXCanRelatedOrder",
                "pushFXCanRelatedOrderRequested",
                "pushFXCanRelatedOrderSucceed",
                "pushFXCanRelatedOrderFailed",
                "swithWithdrawFXReApplyModal",
                "setWithdrawFXReApplyStep",
                "withdrawFXReApplyRequested",
                "withdrawFXReApplySucceed",
                "withdrawFXReApplyFailed",
                "resetWithdrawFXReApply",
                "hideWithdrawFXReApplyError",
                "getWithdrawReApplyItemRequested",
                "getWithdrawReApplyItemSucceed",
                "getWithdrawReApplyItemFailed",
                "resetGetWithdrawReApplyItem",
                "withdrawCheckBothFrozen",
                "withdrawCheckBothFrozenSucceed",
                "withdrawCheckBothFrozenFailed",
                "getFxWithdrawHolderTypeRequested",
                "getFxWithdrawHolderTypeSucceed",
                "getFxWithdrawHolderTypeFailed",
                "withdrawDetailRequested",
                "withdrawDetailSucceed",
                "withdrawDetailFailed",
                "resetWithdrawDetail",
                "withdrawFeeRequested",
                "withdrawFeeSucceed",
                "withdrawFeeFailed",
                "queryAddMaterialInfoRequested",
                "queryAddMaterialInfoSucceed",
                "queryAddMaterialInfoFailed",
                "addMaterialCommitRequested",
                "addMaterialCommitSucceed",
                "addMaterialCommitFailed",
                "resetAddMaterialCommit",
                "cancelFxWithdrawRequested",
                "cancelFxWithdrawSucceed",
                "cancelFxWithdrawFailed",
                "resetCancelFxWithdraw",
                "setCancelFxWithdrawModal",
                "cancelWithdrawRequested",
                "cancelWithdrawSucceed",
                "cancelWithdrawFailed",
                "resetCancelWithdraw",
                "setCancelWithdrawModal",
                "cancelOnGoingTransferRequested",
                "cancelOnGoingTransferSucceed",
                "cancelOnGoingTransferFailed",
                "resetCancelOnGoingTransfer",
                "setCancelOnGoingTransferModal",
                "withdrawSupportCcys",
                "withdrawSupportCcysSucceed",
                "withdrawSupportCcysFailed",
                "transferFeeRequested",
                "transferFeeSucceed",
                "transferFeeFailed",
                "setTransferApplyStep",
                "transferApplyRequested",
                "transferApplySucceed",
                "transferApplyFailed",
                "hideTransferApplyError",
                "resetTransferApply",
                "setTransferStep",
                "queryTransferAddMaterialInfoRequested",
                "queryTransferAddMaterialInfoSucceed",
                "queryTransferAddMaterialInfoFailed",
                "transferAddMaterialCommitRequested",
                "transferAddMaterialCommitSucceed",
                "transferAddMaterialCommitFailed",
                "resetTransferAddMaterialCommit",
                "cancelTransferRequested",
                "cancelTransferSucceed",
                "cancelTransferFailed",
                "resetCancelTransfer",
                "setCancelModal",
                "addCardInfoRequested",
                "addCardInfoSucceed",
                "addCardInfoFailed",
                "querySupportBoostRequested",
                "querySupportBoostSucceed",
                "querySupportBoostFailed",
                "resetQuerySupportBoost",
                "queryCanFastWithdrawWorkRequested",
                "queryCanFastWithdrawWorkFailed",
                "queryCanFastWithdrawWorkSuccess",
                "queryACrossBorderRequested",
                "queryACrossBorderSuccess",
                "queryACrossBorderFailed",
                "getAbRequested",
                "getAbSucceed",
                "getAbFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "userActions",
              "sourceValue": "actions/user",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts",
              "exportNames": [
                "getUserFlowId",
                "getUserFlowIdAndCaptcha",
                "getUserFlowIdSucceed",
                "getUserFlowIdFailed",
                "initUserFlowId",
                "getUserCaptcha",
                "getUserCaptchaSucceed",
                "getUserCaptchaFailed",
                "initUserCaptcha",
                "verifyMfaRequested",
                "verifyMfaSucceed",
                "verifyMfaFailed",
                "initVerifyMfa",
                "setAuthId",
                "resetAuthId",
                "executeAuthIdCallBackRequested",
                "executeAuthIdCallBackSucceed",
                "executeAuthIdCallBackFailed",
                "sendMfaMessageRequested",
                "getMfaCaptchaRequested",
                "getMfaCaptchaSucceed",
                "getMfaCaptchaFailed",
                "initMfaCaptcha",
                "getWhiteListRequested",
                "getWhiteListSucceed",
                "getWhiteListFailed",
                "getWhiteListInit",
                "setMfaJson",
                "resetMfaJson",
                "queryIndustryRequested",
                "queryIndustrySucceed",
                "queryIndustryFailed",
                "queryRestrictionList",
                "queryRestrictionListSucceed",
                "queryRestrictionListFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "submitActions",
              "sourceValue": "actions/submit",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/submit.ts",
              "exportNames": [
                "submitRequested",
                "submitSucceed",
                "submitFailed",
                "resetSubmit"
              ]
            },
            {
              "isNamespace": true,
              "localName": "metaActions",
              "sourceValue": "actions/meta",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
              "exportNames": [
                "fetchMetaRequested",
                "fetchMetaSucceed",
                "fetchMetaFailed",
                "resetFetchMeta",
                "hideFetchMetaError"
              ]
            },
            {
              "isNamespace": false,
              "localName": "destroy",
              "importedName": "destroy",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "initialize",
              "importedName": "initialize",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "change",
              "importedName": "change",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 220,
                  "column": 71,
                  "index": 6603
                },
                "end": {
                  "line": 399,
                  "column": 1,
                  "index": 12253
                }
              },
              "actionsMethods": [
                {
                  "name": "fetchMetaRequested",
                  "usage": "EMMetaUsages.BeneficaryAddressCountry"
                },
                {
                  "name": "change"
                },
                {
                  "name": "resetFile",
                  "usage": "usages.TRANSFER_RELATED"
                },
                {
                  "name": "historyDetailRequested"
                },
                {
                  "name": "initialize"
                },
                {
                  "name": "destroy"
                },
                {
                  "name": "resetCreateTransferAccountFile"
                },
                {
                  "name": "resetCreateTransferAccount"
                },
                {
                  "name": "initUserCaptcha",
                  "usage": "bind-trans-acct"
                },
                {
                  "name": "initUserCaptcha",
                  "usage": "update-trans-acct"
                },
                {
                  "name": "resetFetchMeta",
                  "usage": "EMMetaUsages.BeneficaryAddressProvince"
                },
                {
                  "name": "resetFetchMeta",
                  "usage": "EMMetaUsages.BeneficaryAddressCity"
                },
                {
                  "name": "resetFetchMeta",
                  "usage": "EMMetaUsages.BeneficaryAddressTown"
                },
                {
                  "name": "resetSubmit",
                  "usage": "EMSubmitUsages.BenificiaryAddressCreate"
                },
                {
                  "name": "setCreateTransferAccountStep"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "fetchMetaRequested",
                  "importedName": "fetchMetaRequested",
                  "sourceValue": "actions/meta",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
                  "usage": "EMMetaUsages.BeneficaryAddressCountry"
                },
                {
                  "isNamespace": false,
                  "localName": "change",
                  "importedName": "change",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                },
                {
                  "localName": "resetFile",
                  "importedName": "resetFile",
                  "sourceValue": "actions/file",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/file.ts",
                  "usage": "usages.TRANSFER_RELATED"
                },
                {
                  "localName": "historyDetailRequested",
                  "importedName": "historyDetailRequested",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts"
                },
                {
                  "isNamespace": false,
                  "localName": "initialize",
                  "importedName": "initialize",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                },
                {
                  "isNamespace": false,
                  "localName": "destroy",
                  "importedName": "destroy",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                },
                {
                  "localName": "resetCreateTransferAccountFile",
                  "importedName": "resetCreateTransferAccountFile",
                  "sourceValue": "actions/file",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/file.ts"
                },
                {
                  "localName": "resetCreateTransferAccount",
                  "importedName": "resetCreateTransferAccount",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts"
                },
                {
                  "localName": "initUserCaptcha",
                  "importedName": "initUserCaptcha",
                  "sourceValue": "actions/user",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts",
                  "usage": "bind-trans-acct"
                },
                {
                  "localName": "initUserCaptcha",
                  "importedName": "initUserCaptcha",
                  "sourceValue": "actions/user",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts",
                  "usage": "update-trans-acct"
                },
                {
                  "localName": "resetFetchMeta",
                  "importedName": "resetFetchMeta",
                  "sourceValue": "actions/meta",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
                  "usage": "EMMetaUsages.BeneficaryAddressProvince"
                },
                {
                  "localName": "resetFetchMeta",
                  "importedName": "resetFetchMeta",
                  "sourceValue": "actions/meta",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
                  "usage": "EMMetaUsages.BeneficaryAddressCity"
                },
                {
                  "localName": "resetFetchMeta",
                  "importedName": "resetFetchMeta",
                  "sourceValue": "actions/meta",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
                  "usage": "EMMetaUsages.BeneficaryAddressTown"
                },
                {
                  "localName": "resetSubmit",
                  "importedName": "resetSubmit",
                  "sourceValue": "actions/submit",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/submit.ts",
                  "usage": "EMSubmitUsages.BenificiaryAddressCreate"
                },
                {
                  "localName": "setCreateTransferAccountStep",
                  "importedName": "setCreateTransferAccountStep",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 220,
                  "column": 71,
                  "index": 6603
                },
                "end": {
                  "line": 399,
                  "column": 1,
                  "index": 12253
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [
            "actions",
            "fileActions",
            "withdrawActions",
            "userActions",
            "submitActions",
            "metaActions"
          ],
          "objectPropertyMap": {
            "destroy": "destroy",
            "initialize": "initialize",
            "change": "change"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Withdrawal/WithdrawalDetail/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "actions",
              "sourceValue": "actions/withdrawals",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts",
              "exportNames": [
                "accountListRequested",
                "accountListSucceed",
                "accountListFailed",
                "hideAccountListError",
                "deleteItemRequested",
                "deleteItemSucceed",
                "deleteItemFailed",
                "swithDeleteItemModal",
                "setDeleteItemId",
                "setDeleteItemType",
                "hideDeleteItemError",
                "historyDetailRequested",
                "historyDetailSucceed",
                "historyDetailFailed",
                "hideHistoryDetailError",
                "createAccountRequested",
                "createAccountSucceed",
                "createAccountFailed",
                "setCreateAccountStep",
                "resetCreateAccount",
                "hideCreateAccountError",
                "withdrawFXAddRequested",
                "withdrawFXAddSucceed",
                "withdrawFXAddFailed",
                "hideWithdrawFXAddError",
                "setWithdrawFXAddStep",
                "resetWithdrawFXAdd",
                "withdrawFXAddVerifyRequested",
                "withdrawFXAddVerifySucceed",
                "withdrawFXAddVerifyFailed",
                "queryBanks",
                "queryBanksSucceed",
                "queryBanksFailed",
                "queryProvinces",
                "queryProvincesSucceed",
                "queryProvincesFailed",
                "getLegalProfile",
                "getLegalProfileSucceed",
                "getLegalProfileFailed",
                "createTransferAccountRequested",
                "createTransferAccountSucceed",
                "createTransferAccountFailed",
                "hideCreateTransferAccountError",
                "setCreateTransferAccountStep",
                "resetCreateTransferAccount",
                "setBeneficiaryNameError",
                "getBeneficiayAccountNoRequested",
                "getBeneficiayAccountNoSucceed",
                "getBeneficiayAccountNoFailed",
                "resetBeneficiayAccountNo",
                "getAccountLimitRequested",
                "getAccountLimitSucceed",
                "getAccountLimitFailed",
                "bindAccountPhoneNoRequested",
                "bindAccountPhoneNoSucceed",
                "bindAccountPhoneNoFailed",
                "bindAccountPhoneNoVerifyFailed",
                "swithBindPhoneNoModal",
                "getBeneficiayPhoneNoRequested",
                "getBeneficiayPhoneNoSucceed",
                "getBeneficiayPhoneNoFailed",
                "resetBeneficiayPhoneNo",
                "getFXPrivateAgreementRequested",
                "getFXPrivateAgreementSucceed",
                "getFXPrivateAgreementFailed",
                "getFXPublicAgreementRequested",
                "getFXPublicAgreementSucceed",
                "getFXPublicAgreementFailed",
                "getTransferPublicAgreementRequested",
                "getTransferPublicAgreementSucceed",
                "getTransferPublicAgreementFailed",
                "getWithdrawNormalAgreementRequested",
                "getWithdrawNormalAgreementSucceed",
                "getWithdrawNormalAgreementFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "fileActions",
              "sourceValue": "actions/file",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/file.ts",
              "exportNames": [
                "uploadFileRequested",
                "uploadFileSucceed",
                "uploadFileFailed",
                "hideUploadFileError",
                "deleteFile",
                "deleteSyncFile",
                "resetFile",
                "resetCreateTransferAccountFile",
                "resetAllFile",
                "fileDownload",
                "getThumbnailRequested",
                "getThumbnailSucceed",
                "getThumbnailFailed",
                "initGetThumbnail",
                "setAnnexeRenameModal",
                "updateAnnexeFileName"
              ]
            },
            {
              "isNamespace": true,
              "localName": "previewActions",
              "sourceValue": "actions/preview",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/preview.ts",
              "exportNames": [
                "preview",
                "previewLoading",
                "removePreview",
                "resetAllPreview"
              ]
            },
            {
              "isNamespace": true,
              "localName": "utilActions",
              "sourceValue": "actions/util",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/util.ts",
              "exportNames": [
                "pubKeyRequested",
                "pubKeySucceed",
                "pubKeyFailed",
                "toggleOrderAnnexUpload",
                "setIsMobile",
                "getFirmStatusRequested",
                "getFirmStatusSucceed",
                "getFirmStatusFailed",
                "setPreviewPageId",
                "setCountrys",
                "setProvinces",
                "setLoadAddress",
                "getLocationRequested",
                "getLocationSucceed",
                "getLocationFailed",
                "touchAndChangeAddressFields",
                "resetAddressFieldsThenSetCountry"
              ]
            },
            {
              "isNamespace": true,
              "localName": "fundActions",
              "sourceValue": "actions/fund",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fund.ts",
              "exportNames": [
                "getFrozenListRequested",
                "getFrozenListSucceed",
                "getFrozenListFailed",
                "initFrozenList",
                "getWithDrawSpeedFlagRequested",
                "getWithDrawSpeedFlagSucceed",
                "getWithDrawSpeedFlagFailed",
                "getWithDrawDateRequested",
                "getWithDrawDateSucceed",
                "getWithDrawDateFailed",
                "getBankCardInfoRequested",
                "getBankCardInfoSucceed",
                "getBankCardInfoFailed",
                "resetBankCardInfo"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 251,
                  "column": 56,
                  "index": 6169
                },
                "end": {
                  "line": 1277,
                  "column": 1,
                  "index": 38462
                }
              },
              "actionsMethods": [
                {
                  "name": "resetAllPreview"
                },
                {
                  "name": "setPreviewPageId"
                },
                {
                  "name": "historyDetailRequested"
                },
                {
                  "name": "getBankCardInfoRequested"
                },
                {
                  "name": "getWithDrawSpeedFlagRequested"
                },
                {
                  "name": "resetBeneficiayAccountNo"
                },
                {
                  "name": "resetBeneficiayPhoneNo"
                },
                {
                  "name": "deleteItemRequested"
                },
                {
                  "name": "swithDeleteItemModal"
                },
                {
                  "name": "setDeleteItemId"
                },
                {
                  "name": "hideDeleteItemError"
                },
                {
                  "name": "getBeneficiayAccountNoRequested"
                },
                {
                  "name": "swithBindPhoneNoModal"
                },
                {
                  "name": "getBeneficiayPhoneNoRequested"
                },
                {
                  "name": "bindAccountPhoneNoRequested"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "resetAllPreview",
                  "importedName": "resetAllPreview",
                  "sourceValue": "actions/preview",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/preview.ts"
                },
                {
                  "localName": "setPreviewPageId",
                  "importedName": "setPreviewPageId",
                  "sourceValue": "actions/util",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/util.ts"
                },
                {
                  "localName": "historyDetailRequested",
                  "importedName": "historyDetailRequested",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts"
                },
                {
                  "localName": "getBankCardInfoRequested",
                  "importedName": "getBankCardInfoRequested",
                  "sourceValue": "actions/fund",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fund.ts"
                },
                {
                  "localName": "getWithDrawSpeedFlagRequested",
                  "importedName": "getWithDrawSpeedFlagRequested",
                  "sourceValue": "actions/fund",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fund.ts"
                },
                {
                  "localName": "resetBeneficiayAccountNo",
                  "importedName": "resetBeneficiayAccountNo",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts"
                },
                {
                  "localName": "resetBeneficiayPhoneNo",
                  "importedName": "resetBeneficiayPhoneNo",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts"
                },
                {
                  "localName": "deleteItemRequested",
                  "importedName": "deleteItemRequested",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts"
                },
                {
                  "localName": "swithDeleteItemModal",
                  "importedName": "swithDeleteItemModal",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts"
                },
                {
                  "localName": "setDeleteItemId",
                  "importedName": "setDeleteItemId",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts"
                },
                {
                  "localName": "hideDeleteItemError",
                  "importedName": "hideDeleteItemError",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts"
                },
                {
                  "localName": "getBeneficiayAccountNoRequested",
                  "importedName": "getBeneficiayAccountNoRequested",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts"
                },
                {
                  "localName": "swithBindPhoneNoModal",
                  "importedName": "swithBindPhoneNoModal",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts"
                },
                {
                  "localName": "getBeneficiayPhoneNoRequested",
                  "importedName": "getBeneficiayPhoneNoRequested",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts"
                },
                {
                  "localName": "bindAccountPhoneNoRequested",
                  "importedName": "bindAccountPhoneNoRequested",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 251,
                  "column": 56,
                  "index": 6169
                },
                "end": {
                  "line": 1277,
                  "column": 1,
                  "index": 38462
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [
            "actions",
            "fileActions",
            "previewActions",
            "utilActions",
            "fundActions"
          ],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/InternalMessage/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "messageActions",
              "sourceValue": "actions/message",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/message.ts",
              "exportNames": [
                "preQuery",
                "queryData",
                "querySucceed",
                "queryFailed",
                "queryUnread",
                "queryUnreadSucceed",
                "queryUnreadFailed",
                "markLocalAllReaded",
                "markServerAllReaded",
                "markAllReadedSucceed",
                "markAllReadedFailed",
                "markLocalSingleReaded",
                "markServerSingleReaded",
                "markServerSingleReadedSucceed",
                "markServerSingleReadedFailed"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 47,
                  "column": 59,
                  "index": 1182
                },
                "end": {
                  "line": 93,
                  "column": 1,
                  "index": 2303
                }
              },
              "actionsMethods": [],
              "usedActionsDependencies": [],
              "nodeLoc": {
                "start": {
                  "line": 47,
                  "column": 59,
                  "index": 1182
                },
                "end": {
                  "line": 93,
                  "column": 1,
                  "index": 2303
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["messageActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Swap/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": false,
              "localName": "goBack",
              "importedName": "goBack",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 51,
                  "column": 44,
                  "index": 1169
                },
                "end": {
                  "line": 71,
                  "column": 1,
                  "index": 1650
                }
              },
              "actionsMethods": [],
              "usedActionsDependencies": [],
              "nodeLoc": {
                "start": {
                  "line": 51,
                  "column": 44,
                  "index": 1169
                },
                "end": {
                  "line": 71,
                  "column": 1,
                  "index": 1650
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {
            "goBack": "goBack"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Swap/SwapRecords/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "actions",
              "sourceValue": "actions/fundSwap",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fundSwap.ts",
              "exportNames": [
                "setTradeStep",
                "getRateRequested",
                "getRateSucceed",
                "getRateFailed",
                "hideGetRateError",
                "rateReset",
                "tradeRequested",
                "tradeSucceed",
                "tradeFailed",
                "resetTrade",
                "hideTradeFailed",
                "tradeListRequested",
                "tradeListSucceed",
                "tradeListFailed",
                "hideTradeListFailed",
                "updateStatus",
                "setSeconds",
                "stopSeconds",
                "getBalance",
                "getBalanceSucceed",
                "getBalanceFailed",
                "resetBalance",
                "getFxDetail",
                "getFxDetailSucceed",
                "getFxDetailFailed",
                "spotfxMeta",
                "spotfxMetaSucceed",
                "spotfxMetaFailed",
                "resetSpotFxMeta",
                "changeExchangeWay",
                "entrustRequested",
                "entrustSucceed",
                "entrustFailed",
                "hideEntrustError",
                "resetEntrust",
                "entrustRateRequested",
                "entrustRateSucceed",
                "entrustRateFailed",
                "hideEntrustRateError",
                "resetEntrustRate",
                "billExportDownloadRequested",
                "billExportDownloadSucceed",
                "billExportDownloadFailed",
                "toggleBillExportDownloadModal",
                "resetBillExportDownload",
                "enterAccountRequested",
                "enterAccountSucceed",
                "enterAccountFailed",
                "cancelEntrustRequested",
                "cancelEntrustSucceed",
                "cancelEntrustFailed",
                "hideCancelEntrustError",
                "resetCancelEntrust",
                "toggleCancelEntrustPwdModal",
                "tradeMoreListRequested",
                "tradeMoreListSucceed",
                "tradeMoreListFailed",
                "clearMore",
                "queryExchangeArrivalRequested",
                "queryExchangeArrivalSucceed",
                "queryExchangeArrivalFailed",
                "initExchangeArrival",
                "spotBuyRateRequested",
                "spotBuyRateSucceed",
                "spotBuyRateFailed",
                "spotApplyRequested",
                "spotApplySucceed",
                "spotApplyFailed",
                "spotResultRequested",
                "spotResultSucceed",
                "spotResultFailed",
                "spotResultInit"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 43,
                  "column": 51,
                  "index": 1177
                },
                "end": {
                  "line": 139,
                  "column": 1,
                  "index": 3864
                }
              },
              "actionsMethods": [
                {
                  "name": "tradeListRequested"
                },
                {
                  "name": "toggleBillExportDownloadModal"
                },
                {
                  "name": "resetBillExportDownload"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "tradeListRequested",
                  "importedName": "tradeListRequested",
                  "sourceValue": "actions/fundSwap",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fundSwap.ts"
                },
                {
                  "localName": "toggleBillExportDownloadModal",
                  "importedName": "toggleBillExportDownloadModal",
                  "sourceValue": "actions/fundSwap",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fundSwap.ts"
                },
                {
                  "localName": "resetBillExportDownload",
                  "importedName": "resetBillExportDownload",
                  "sourceValue": "actions/fundSwap",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fundSwap.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 43,
                  "column": 51,
                  "index": 1177
                },
                "end": {
                  "line": 139,
                  "column": 1,
                  "index": 3864
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["actions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Swap/SwapExchange/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "actions",
              "sourceValue": "actions/fundSwap",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fundSwap.ts",
              "exportNames": [
                "setTradeStep",
                "getRateRequested",
                "getRateSucceed",
                "getRateFailed",
                "hideGetRateError",
                "rateReset",
                "tradeRequested",
                "tradeSucceed",
                "tradeFailed",
                "resetTrade",
                "hideTradeFailed",
                "tradeListRequested",
                "tradeListSucceed",
                "tradeListFailed",
                "hideTradeListFailed",
                "updateStatus",
                "setSeconds",
                "stopSeconds",
                "getBalance",
                "getBalanceSucceed",
                "getBalanceFailed",
                "resetBalance",
                "getFxDetail",
                "getFxDetailSucceed",
                "getFxDetailFailed",
                "spotfxMeta",
                "spotfxMetaSucceed",
                "spotfxMetaFailed",
                "resetSpotFxMeta",
                "changeExchangeWay",
                "entrustRequested",
                "entrustSucceed",
                "entrustFailed",
                "hideEntrustError",
                "resetEntrust",
                "entrustRateRequested",
                "entrustRateSucceed",
                "entrustRateFailed",
                "hideEntrustRateError",
                "resetEntrustRate",
                "billExportDownloadRequested",
                "billExportDownloadSucceed",
                "billExportDownloadFailed",
                "toggleBillExportDownloadModal",
                "resetBillExportDownload",
                "enterAccountRequested",
                "enterAccountSucceed",
                "enterAccountFailed",
                "cancelEntrustRequested",
                "cancelEntrustSucceed",
                "cancelEntrustFailed",
                "hideCancelEntrustError",
                "resetCancelEntrust",
                "toggleCancelEntrustPwdModal",
                "tradeMoreListRequested",
                "tradeMoreListSucceed",
                "tradeMoreListFailed",
                "clearMore",
                "queryExchangeArrivalRequested",
                "queryExchangeArrivalSucceed",
                "queryExchangeArrivalFailed",
                "initExchangeArrival",
                "spotBuyRateRequested",
                "spotBuyRateSucceed",
                "spotBuyRateFailed",
                "spotApplyRequested",
                "spotApplySucceed",
                "spotApplyFailed",
                "spotResultRequested",
                "spotResultSucceed",
                "spotResultFailed",
                "spotResultInit"
              ]
            },
            {
              "isNamespace": true,
              "localName": "meActions",
              "sourceValue": "actions/me",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/me.ts",
              "exportNames": [
                "getProfileRequested",
                "getProfileSucceed",
                "getProfileFailed",
                "setProfile",
                "accountRequested",
                "accountSucceed",
                "accountFailed",
                "hideAccountError",
                "userPowerRequested",
                "userPowerSucceed",
                "userPowerFailed",
                "getDepositTodoRequested",
                "getDepositTodoSucceed",
                "getDepositTodoFailed",
                "setXtMethod",
                "setTransferNotice",
                "reset",
                "platformRequested",
                "platformSucceed",
                "platformFailed"
              ]
            },
            {
              "isNamespace": false,
              "localName": "destroy",
              "importedName": "destroy",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 141,
                  "column": 52,
                  "index": 4472
                },
                "end": {
                  "line": 231,
                  "column": 1,
                  "index": 7736
                }
              },
              "actionsMethods": [
                {
                  "name": "push"
                },
                {
                  "name": "getBalance"
                },
                {
                  "name": "spotfxMeta",
                  "usage": "SWAP_META_LOCATION.TRADE"
                },
                {
                  "name": "destroy"
                },
                {
                  "name": "rateReset"
                },
                {
                  "name": "setTradeStep"
                },
                {
                  "name": "changeExchangeWay"
                },
                {
                  "name": "resetTrade"
                },
                {
                  "name": "resetEntrust"
                },
                {
                  "name": "resetEntrustRate"
                },
                {
                  "name": "resetBalance"
                },
                {
                  "name": "resetSpotFxMeta"
                }
              ],
              "usedActionsDependencies": [
                {
                  "isNamespace": false,
                  "localName": "push",
                  "importedName": "push",
                  "sourceValue": "react-router-redux",
                  "dependencyPath": "react-router-redux"
                },
                {
                  "localName": "getBalance",
                  "importedName": "getBalance",
                  "sourceValue": "actions/fundSwap",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fundSwap.ts"
                },
                {
                  "localName": "spotfxMeta",
                  "importedName": "spotfxMeta",
                  "sourceValue": "actions/fundSwap",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fundSwap.ts",
                  "usage": "SWAP_META_LOCATION.TRADE"
                },
                {
                  "isNamespace": false,
                  "localName": "destroy",
                  "importedName": "destroy",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                },
                {
                  "localName": "rateReset",
                  "importedName": "rateReset",
                  "sourceValue": "actions/fundSwap",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fundSwap.ts"
                },
                {
                  "localName": "setTradeStep",
                  "importedName": "setTradeStep",
                  "sourceValue": "actions/fundSwap",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fundSwap.ts"
                },
                {
                  "localName": "changeExchangeWay",
                  "importedName": "changeExchangeWay",
                  "sourceValue": "actions/fundSwap",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fundSwap.ts"
                },
                {
                  "localName": "resetTrade",
                  "importedName": "resetTrade",
                  "sourceValue": "actions/fundSwap",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fundSwap.ts"
                },
                {
                  "localName": "resetEntrust",
                  "importedName": "resetEntrust",
                  "sourceValue": "actions/fundSwap",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fundSwap.ts"
                },
                {
                  "localName": "resetEntrustRate",
                  "importedName": "resetEntrustRate",
                  "sourceValue": "actions/fundSwap",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fundSwap.ts"
                },
                {
                  "localName": "resetBalance",
                  "importedName": "resetBalance",
                  "sourceValue": "actions/fundSwap",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fundSwap.ts"
                },
                {
                  "localName": "resetSpotFxMeta",
                  "importedName": "resetSpotFxMeta",
                  "sourceValue": "actions/fundSwap",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fundSwap.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 141,
                  "column": 52,
                  "index": 4472
                },
                "end": {
                  "line": 231,
                  "column": 1,
                  "index": 7736
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["actions", "meActions"],
          "objectPropertyMap": {
            "destroy": "destroy",
            "push": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Swap/SwapDetail/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "actions",
              "sourceValue": "actions/fundSwap",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fundSwap.ts",
              "exportNames": [
                "setTradeStep",
                "getRateRequested",
                "getRateSucceed",
                "getRateFailed",
                "hideGetRateError",
                "rateReset",
                "tradeRequested",
                "tradeSucceed",
                "tradeFailed",
                "resetTrade",
                "hideTradeFailed",
                "tradeListRequested",
                "tradeListSucceed",
                "tradeListFailed",
                "hideTradeListFailed",
                "updateStatus",
                "setSeconds",
                "stopSeconds",
                "getBalance",
                "getBalanceSucceed",
                "getBalanceFailed",
                "resetBalance",
                "getFxDetail",
                "getFxDetailSucceed",
                "getFxDetailFailed",
                "spotfxMeta",
                "spotfxMetaSucceed",
                "spotfxMetaFailed",
                "resetSpotFxMeta",
                "changeExchangeWay",
                "entrustRequested",
                "entrustSucceed",
                "entrustFailed",
                "hideEntrustError",
                "resetEntrust",
                "entrustRateRequested",
                "entrustRateSucceed",
                "entrustRateFailed",
                "hideEntrustRateError",
                "resetEntrustRate",
                "billExportDownloadRequested",
                "billExportDownloadSucceed",
                "billExportDownloadFailed",
                "toggleBillExportDownloadModal",
                "resetBillExportDownload",
                "enterAccountRequested",
                "enterAccountSucceed",
                "enterAccountFailed",
                "cancelEntrustRequested",
                "cancelEntrustSucceed",
                "cancelEntrustFailed",
                "hideCancelEntrustError",
                "resetCancelEntrust",
                "toggleCancelEntrustPwdModal",
                "tradeMoreListRequested",
                "tradeMoreListSucceed",
                "tradeMoreListFailed",
                "clearMore",
                "queryExchangeArrivalRequested",
                "queryExchangeArrivalSucceed",
                "queryExchangeArrivalFailed",
                "initExchangeArrival",
                "spotBuyRateRequested",
                "spotBuyRateSucceed",
                "spotBuyRateFailed",
                "spotApplyRequested",
                "spotApplySucceed",
                "spotApplyFailed",
                "spotResultRequested",
                "spotResultSucceed",
                "spotResultFailed",
                "spotResultInit"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 104,
                  "column": 50,
                  "index": 2411
                },
                "end": {
                  "line": 375,
                  "column": 1,
                  "index": 12886
                }
              },
              "actionsMethods": [
                {
                  "name": "getFxDetail"
                },
                {
                  "name": "toggleCancelEntrustPwdModal"
                },
                {
                  "name": "cancelEntrustRequested"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "getFxDetail",
                  "importedName": "getFxDetail",
                  "sourceValue": "actions/fundSwap",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fundSwap.ts"
                },
                {
                  "localName": "toggleCancelEntrustPwdModal",
                  "importedName": "toggleCancelEntrustPwdModal",
                  "sourceValue": "actions/fundSwap",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fundSwap.ts"
                },
                {
                  "localName": "cancelEntrustRequested",
                  "importedName": "cancelEntrustRequested",
                  "sourceValue": "actions/fundSwap",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fundSwap.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 104,
                  "column": 50,
                  "index": 2411
                },
                "end": {
                  "line": 375,
                  "column": 1,
                  "index": 12886
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["actions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XTPartner/XTPartnerInviter/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 20,
                  "column": 55,
                  "index": 484
                },
                "end": {
                  "line": 45,
                  "column": 1,
                  "index": 1172
                }
              },
              "actionsMethods": [],
              "usedActionsDependencies": [],
              "nodeLoc": {
                "start": {
                  "line": 20,
                  "column": 55,
                  "index": 484
                },
                "end": {
                  "line": 45,
                  "column": 1,
                  "index": 1172
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XTPartner/XTPartnerInviter/XTPartnerInviterSign/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "xtPartnerActions",
              "sourceValue": "actions/xtPartner",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xtPartner.ts",
              "exportNames": [
                "contractApplyRequested",
                "contractApplySucceed",
                "contractApplyFailed",
                "initContractApply",
                "searchXTPartnerRequested",
                "searchXTPartnerSucceed",
                "searchXTPartnerFailed",
                "initSearchXTPartner",
                "queryPartnerRequested",
                "queryPartnerSucceed",
                "queryPartnerFailed",
                "rescindContractRequested",
                "rescindContractSucceed",
                "rescindContractFailed",
                "initRescindContract",
                "querySigningRequested",
                "querySigningSucceed",
                "querySigningFailed",
                "agreeContractRequested",
                "agreeContractSucceed",
                "agreeContractFailed",
                "initAgreeContract",
                "rejectContractRequested",
                "rejectContractSucceed",
                "rejectContractFailed",
                "initRejectContract",
                "cancelContractRequested",
                "cancelContractSucceed",
                "cancelContractFailed",
                "initCancelContract",
                "setContractId",
                "upgradeXTPartnerRequested",
                "upgradeXTPartnerSucceed",
                "upgradeXTPartnerFailed",
                "initUpgradeXTPartner"
              ]
            },
            {
              "isNamespace": false,
              "localName": "destroy",
              "importedName": "destroy",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 55,
                  "column": 75,
                  "index": 1653
                },
                "end": {
                  "line": 174,
                  "column": 1,
                  "index": 5067
                }
              },
              "actionsMethods": [
                {
                  "name": "destroy"
                },
                {
                  "name": "initSearchXTPartner"
                },
                {
                  "name": "initContractApply"
                },
                {
                  "name": "searchXTPartnerRequested"
                }
              ],
              "usedActionsDependencies": [
                {
                  "isNamespace": false,
                  "localName": "destroy",
                  "importedName": "destroy",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                },
                {
                  "localName": "initSearchXTPartner",
                  "importedName": "initSearchXTPartner",
                  "sourceValue": "actions/xtPartner",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xtPartner.ts"
                },
                {
                  "localName": "initContractApply",
                  "importedName": "initContractApply",
                  "sourceValue": "actions/xtPartner",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xtPartner.ts"
                },
                {
                  "localName": "searchXTPartnerRequested",
                  "importedName": "searchXTPartnerRequested",
                  "sourceValue": "actions/xtPartner",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xtPartner.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 55,
                  "column": 75,
                  "index": 1653
                },
                "end": {
                  "line": 174,
                  "column": 1,
                  "index": 5067
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["xtPartnerActions"],
          "objectPropertyMap": {
            "destroy": "destroy"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XTPartner/XTPartnerInviter/XTPartnerInviterList/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "xtPartnerActions",
              "sourceValue": "actions/xtPartner",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xtPartner.ts",
              "exportNames": [
                "contractApplyRequested",
                "contractApplySucceed",
                "contractApplyFailed",
                "initContractApply",
                "searchXTPartnerRequested",
                "searchXTPartnerSucceed",
                "searchXTPartnerFailed",
                "initSearchXTPartner",
                "queryPartnerRequested",
                "queryPartnerSucceed",
                "queryPartnerFailed",
                "rescindContractRequested",
                "rescindContractSucceed",
                "rescindContractFailed",
                "initRescindContract",
                "querySigningRequested",
                "querySigningSucceed",
                "querySigningFailed",
                "agreeContractRequested",
                "agreeContractSucceed",
                "agreeContractFailed",
                "initAgreeContract",
                "rejectContractRequested",
                "rejectContractSucceed",
                "rejectContractFailed",
                "initRejectContract",
                "cancelContractRequested",
                "cancelContractSucceed",
                "cancelContractFailed",
                "initCancelContract",
                "setContractId",
                "upgradeXTPartnerRequested",
                "upgradeXTPartnerSucceed",
                "upgradeXTPartnerFailed",
                "initUpgradeXTPartner"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 33,
                  "column": 60,
                  "index": 1030
                },
                "end": {
                  "line": 143,
                  "column": 1,
                  "index": 4921
                }
              },
              "actionsMethods": [
                {
                  "name": "queryPartnerRequested"
                },
                {
                  "name": "setContractId",
                  "usage": "EMContractIdUsage.Rescind"
                },
                {
                  "name": "initRescindContract"
                },
                {
                  "name": "rescindContractRequested"
                },
                {
                  "name": "contractApplyRequested"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "queryPartnerRequested",
                  "importedName": "queryPartnerRequested",
                  "sourceValue": "actions/xtPartner",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xtPartner.ts"
                },
                {
                  "localName": "setContractId",
                  "importedName": "setContractId",
                  "sourceValue": "actions/xtPartner",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xtPartner.ts",
                  "usage": "EMContractIdUsage.Rescind"
                },
                {
                  "localName": "initRescindContract",
                  "importedName": "initRescindContract",
                  "sourceValue": "actions/xtPartner",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xtPartner.ts"
                },
                {
                  "localName": "rescindContractRequested",
                  "importedName": "rescindContractRequested",
                  "sourceValue": "actions/xtPartner",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xtPartner.ts"
                },
                {
                  "localName": "contractApplyRequested",
                  "importedName": "contractApplyRequested",
                  "sourceValue": "actions/xtPartner",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xtPartner.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 33,
                  "column": 60,
                  "index": 1030
                },
                "end": {
                  "line": 143,
                  "column": 1,
                  "index": 4921
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["xtPartnerActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XTPartner/XTPartnerTransfer/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "xtPartnerActions",
              "sourceValue": "actions/xtPartner",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xtPartner.ts",
              "exportNames": [
                "contractApplyRequested",
                "contractApplySucceed",
                "contractApplyFailed",
                "initContractApply",
                "searchXTPartnerRequested",
                "searchXTPartnerSucceed",
                "searchXTPartnerFailed",
                "initSearchXTPartner",
                "queryPartnerRequested",
                "queryPartnerSucceed",
                "queryPartnerFailed",
                "rescindContractRequested",
                "rescindContractSucceed",
                "rescindContractFailed",
                "initRescindContract",
                "querySigningRequested",
                "querySigningSucceed",
                "querySigningFailed",
                "agreeContractRequested",
                "agreeContractSucceed",
                "agreeContractFailed",
                "initAgreeContract",
                "rejectContractRequested",
                "rejectContractSucceed",
                "rejectContractFailed",
                "initRejectContract",
                "cancelContractRequested",
                "cancelContractSucceed",
                "cancelContractFailed",
                "initCancelContract",
                "setContractId",
                "upgradeXTPartnerRequested",
                "upgradeXTPartnerSucceed",
                "upgradeXTPartnerFailed",
                "initUpgradeXTPartner"
              ]
            },
            {
              "isNamespace": true,
              "localName": "xpTransferActions",
              "sourceValue": "actions/xpTransfer",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xpTransfer.ts",
              "exportNames": [
                "pendingSpotsRequested",
                "pendingSpotsSucceed",
                "pendingSpotsFailed",
                "supportCurrencyRequested",
                "supportCurrencySucceed",
                "supportCurrencyFailed",
                "pricingListRequested",
                "pricingListSucceed",
                "pricingListFailed",
                "innerTransferApplyRequested",
                "innerTransferApplySucceed",
                "innerTransferApplyFailed",
                "initInnerTransferApply",
                "setXPTransferApplyStep",
                "innerTransferDetailRequested",
                "innerTransferDetailSucceed",
                "innerTransferDetailFailed",
                "innerTransferListRequested",
                "innerTransferListSucceed",
                "innerTransferListFailed",
                "exportTransferRequested",
                "exportTransferSucceed",
                "exportTransferFailed",
                "setTransferModal",
                "updateApplyCheckList",
                "initApplyCheckList"
              ]
            },
            {
              "isNamespace": false,
              "localName": "goBack",
              "importedName": "goBack",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 32,
                  "column": 57,
                  "index": 838
                },
                "end": {
                  "line": 54,
                  "column": 1,
                  "index": 1740
                }
              },
              "actionsMethods": [
                {
                  "name": "supportCurrencyRequested"
                },
                {
                  "name": "queryPartnerRequested"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "supportCurrencyRequested",
                  "importedName": "supportCurrencyRequested",
                  "sourceValue": "actions/xpTransfer",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xpTransfer.ts"
                },
                {
                  "localName": "queryPartnerRequested",
                  "importedName": "queryPartnerRequested",
                  "sourceValue": "actions/xtPartner",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xtPartner.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 32,
                  "column": 57,
                  "index": 838
                },
                "end": {
                  "line": 54,
                  "column": 1,
                  "index": 1740
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["xtPartnerActions", "xpTransferActions"],
          "objectPropertyMap": {
            "goBack": "goBack"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XTPartner/XTPartnerTransfer/XTPartnerTransferApply/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "withdrawActions",
              "sourceValue": "actions/withdraw",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts",
              "exportNames": [
                "withdrawListRequested",
                "withdrawListSucceed",
                "withdrawListFailed",
                "hideWithdrawListError",
                "resetWithdrawList",
                "changeTab",
                "switchWithdrawApplyModal",
                "setWithdrawApplyIsReserved",
                "withdrawApplyRequested",
                "withdrawApplySucceed",
                "withdrawApplyFailed",
                "hideWithdrawApplyError",
                "setStep",
                "resetWithdrawApply",
                "withdrawInitRequested",
                "withdrawInitSucceed",
                "withdrawInitFailed",
                "hideWithdrawInitError",
                "withdrawDebtRequested",
                "withdrawDebtSucceed",
                "withdrawDebtFailed",
                "hideWithdrawDebtError",
                "removeRelatedItemOrderId",
                "addRelatedItemOrderId",
                "inputChangeRelatedItemValue",
                "resetRelatedOrders",
                "changeRelatedOrderChecked",
                "resetRelatedOrderChecked",
                "swithWithdrawFXApplyModal",
                "setWithdrawFXApplyStep",
                "setWithdrawFXApplyIsReserved",
                "withdrawFXApplyRequested",
                "withdrawFXApplySucceed",
                "withdrawFXApplyFailed",
                "hideWithdrawFXApplyError",
                "resetWithdrawFXApply",
                "isWithdrawErrorPage",
                "getFXWithdrawFeeRequested",
                "getFXWithdrawFeeSucceed",
                "getFXWithdrawFeeFailed",
                "hideGetFXWithdrawFeeError",
                "resetGetFXWithdrawFee",
                "getFXCanRelatedOrderRequested",
                "getFXCanRelatedOrderSucceed",
                "getFXCanRelatedOrderFailed",
                "hideGetFXCanRelatedOrderError",
                "resetGetFXCanRelatedOrder",
                "pushFXCanRelatedOrderRequested",
                "pushFXCanRelatedOrderSucceed",
                "pushFXCanRelatedOrderFailed",
                "swithWithdrawFXReApplyModal",
                "setWithdrawFXReApplyStep",
                "withdrawFXReApplyRequested",
                "withdrawFXReApplySucceed",
                "withdrawFXReApplyFailed",
                "resetWithdrawFXReApply",
                "hideWithdrawFXReApplyError",
                "getWithdrawReApplyItemRequested",
                "getWithdrawReApplyItemSucceed",
                "getWithdrawReApplyItemFailed",
                "resetGetWithdrawReApplyItem",
                "withdrawCheckBothFrozen",
                "withdrawCheckBothFrozenSucceed",
                "withdrawCheckBothFrozenFailed",
                "getFxWithdrawHolderTypeRequested",
                "getFxWithdrawHolderTypeSucceed",
                "getFxWithdrawHolderTypeFailed",
                "withdrawDetailRequested",
                "withdrawDetailSucceed",
                "withdrawDetailFailed",
                "resetWithdrawDetail",
                "withdrawFeeRequested",
                "withdrawFeeSucceed",
                "withdrawFeeFailed",
                "queryAddMaterialInfoRequested",
                "queryAddMaterialInfoSucceed",
                "queryAddMaterialInfoFailed",
                "addMaterialCommitRequested",
                "addMaterialCommitSucceed",
                "addMaterialCommitFailed",
                "resetAddMaterialCommit",
                "cancelFxWithdrawRequested",
                "cancelFxWithdrawSucceed",
                "cancelFxWithdrawFailed",
                "resetCancelFxWithdraw",
                "setCancelFxWithdrawModal",
                "cancelWithdrawRequested",
                "cancelWithdrawSucceed",
                "cancelWithdrawFailed",
                "resetCancelWithdraw",
                "setCancelWithdrawModal",
                "cancelOnGoingTransferRequested",
                "cancelOnGoingTransferSucceed",
                "cancelOnGoingTransferFailed",
                "resetCancelOnGoingTransfer",
                "setCancelOnGoingTransferModal",
                "withdrawSupportCcys",
                "withdrawSupportCcysSucceed",
                "withdrawSupportCcysFailed",
                "transferFeeRequested",
                "transferFeeSucceed",
                "transferFeeFailed",
                "setTransferApplyStep",
                "transferApplyRequested",
                "transferApplySucceed",
                "transferApplyFailed",
                "hideTransferApplyError",
                "resetTransferApply",
                "setTransferStep",
                "queryTransferAddMaterialInfoRequested",
                "queryTransferAddMaterialInfoSucceed",
                "queryTransferAddMaterialInfoFailed",
                "transferAddMaterialCommitRequested",
                "transferAddMaterialCommitSucceed",
                "transferAddMaterialCommitFailed",
                "resetTransferAddMaterialCommit",
                "cancelTransferRequested",
                "cancelTransferSucceed",
                "cancelTransferFailed",
                "resetCancelTransfer",
                "setCancelModal",
                "addCardInfoRequested",
                "addCardInfoSucceed",
                "addCardInfoFailed",
                "querySupportBoostRequested",
                "querySupportBoostSucceed",
                "querySupportBoostFailed",
                "resetQuerySupportBoost",
                "queryCanFastWithdrawWorkRequested",
                "queryCanFastWithdrawWorkFailed",
                "queryCanFastWithdrawWorkSuccess",
                "queryACrossBorderRequested",
                "queryACrossBorderSuccess",
                "queryACrossBorderFailed",
                "getAbRequested",
                "getAbSucceed",
                "getAbFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "meActions",
              "sourceValue": "actions/me",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/me.ts",
              "exportNames": [
                "getProfileRequested",
                "getProfileSucceed",
                "getProfileFailed",
                "setProfile",
                "accountRequested",
                "accountSucceed",
                "accountFailed",
                "hideAccountError",
                "userPowerRequested",
                "userPowerSucceed",
                "userPowerFailed",
                "getDepositTodoRequested",
                "getDepositTodoSucceed",
                "getDepositTodoFailed",
                "setXtMethod",
                "setTransferNotice",
                "reset",
                "platformRequested",
                "platformSucceed",
                "platformFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "userActions",
              "sourceValue": "actions/user",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts",
              "exportNames": [
                "getUserFlowId",
                "getUserFlowIdAndCaptcha",
                "getUserFlowIdSucceed",
                "getUserFlowIdFailed",
                "initUserFlowId",
                "getUserCaptcha",
                "getUserCaptchaSucceed",
                "getUserCaptchaFailed",
                "initUserCaptcha",
                "verifyMfaRequested",
                "verifyMfaSucceed",
                "verifyMfaFailed",
                "initVerifyMfa",
                "setAuthId",
                "resetAuthId",
                "executeAuthIdCallBackRequested",
                "executeAuthIdCallBackSucceed",
                "executeAuthIdCallBackFailed",
                "sendMfaMessageRequested",
                "getMfaCaptchaRequested",
                "getMfaCaptchaSucceed",
                "getMfaCaptchaFailed",
                "initMfaCaptcha",
                "getWhiteListRequested",
                "getWhiteListSucceed",
                "getWhiteListFailed",
                "getWhiteListInit",
                "setMfaJson",
                "resetMfaJson",
                "queryIndustryRequested",
                "queryIndustrySucceed",
                "queryIndustryFailed",
                "queryRestrictionList",
                "queryRestrictionListSucceed",
                "queryRestrictionListFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "xptransferActions",
              "sourceValue": "actions/xpTransfer",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xpTransfer.ts",
              "exportNames": [
                "pendingSpotsRequested",
                "pendingSpotsSucceed",
                "pendingSpotsFailed",
                "supportCurrencyRequested",
                "supportCurrencySucceed",
                "supportCurrencyFailed",
                "pricingListRequested",
                "pricingListSucceed",
                "pricingListFailed",
                "innerTransferApplyRequested",
                "innerTransferApplySucceed",
                "innerTransferApplyFailed",
                "initInnerTransferApply",
                "setXPTransferApplyStep",
                "innerTransferDetailRequested",
                "innerTransferDetailSucceed",
                "innerTransferDetailFailed",
                "innerTransferListRequested",
                "innerTransferListSucceed",
                "innerTransferListFailed",
                "exportTransferRequested",
                "exportTransferSucceed",
                "exportTransferFailed",
                "setTransferModal",
                "updateApplyCheckList",
                "initApplyCheckList"
              ]
            },
            {
              "isNamespace": true,
              "localName": "xtPartnerActions",
              "sourceValue": "actions/xtPartner",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xtPartner.ts",
              "exportNames": [
                "contractApplyRequested",
                "contractApplySucceed",
                "contractApplyFailed",
                "initContractApply",
                "searchXTPartnerRequested",
                "searchXTPartnerSucceed",
                "searchXTPartnerFailed",
                "initSearchXTPartner",
                "queryPartnerRequested",
                "queryPartnerSucceed",
                "queryPartnerFailed",
                "rescindContractRequested",
                "rescindContractSucceed",
                "rescindContractFailed",
                "initRescindContract",
                "querySigningRequested",
                "querySigningSucceed",
                "querySigningFailed",
                "agreeContractRequested",
                "agreeContractSucceed",
                "agreeContractFailed",
                "initAgreeContract",
                "rejectContractRequested",
                "rejectContractSucceed",
                "rejectContractFailed",
                "initRejectContract",
                "cancelContractRequested",
                "cancelContractSucceed",
                "cancelContractFailed",
                "initCancelContract",
                "setContractId",
                "upgradeXTPartnerRequested",
                "upgradeXTPartnerSucceed",
                "upgradeXTPartnerFailed",
                "initUpgradeXTPartner"
              ]
            },
            {
              "isNamespace": true,
              "localName": "fundActions",
              "sourceValue": "actions/fund",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fund.ts",
              "exportNames": [
                "getFrozenListRequested",
                "getFrozenListSucceed",
                "getFrozenListFailed",
                "initFrozenList",
                "getWithDrawSpeedFlagRequested",
                "getWithDrawSpeedFlagSucceed",
                "getWithDrawSpeedFlagFailed",
                "getWithDrawDateRequested",
                "getWithDrawDateSucceed",
                "getWithDrawDateFailed",
                "getBankCardInfoRequested",
                "getBankCardInfoSucceed",
                "getBankCardInfoFailed",
                "resetBankCardInfo"
              ]
            },
            {
              "isNamespace": false,
              "localName": "change",
              "importedName": "change",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "destroy",
              "importedName": "destroy",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 76,
                  "column": 62,
                  "index": 2510
                },
                "end": {
                  "line": 233,
                  "column": 1,
                  "index": 7161
                }
              },
              "actionsMethods": [
                {
                  "name": "change"
                },
                {
                  "name": "getFrozenListRequested",
                  "usage": "INNER_TRANSFER"
                },
                {
                  "name": "destroy"
                },
                {
                  "name": "setXPTransferApplyStep"
                },
                {
                  "name": "initApplyCheckList"
                },
                {
                  "name": "initInnerTransferApply"
                },
                {
                  "name": "innerTransferApplyRequested",
                  "usage": "EMGetUserFlowIdUsages.xInnerPayment"
                }
              ],
              "usedActionsDependencies": [
                {
                  "isNamespace": false,
                  "localName": "change",
                  "importedName": "change",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                },
                {
                  "localName": "getFrozenListRequested",
                  "importedName": "getFrozenListRequested",
                  "sourceValue": "actions/fund",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fund.ts",
                  "usage": "INNER_TRANSFER"
                },
                {
                  "isNamespace": false,
                  "localName": "destroy",
                  "importedName": "destroy",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                },
                {
                  "localName": "setXPTransferApplyStep",
                  "importedName": "setXPTransferApplyStep",
                  "sourceValue": "actions/xpTransfer",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xpTransfer.ts"
                },
                {
                  "localName": "initApplyCheckList",
                  "importedName": "initApplyCheckList",
                  "sourceValue": "actions/xpTransfer",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xpTransfer.ts"
                },
                {
                  "localName": "initInnerTransferApply",
                  "importedName": "initInnerTransferApply",
                  "sourceValue": "actions/xpTransfer",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xpTransfer.ts"
                },
                {
                  "localName": "innerTransferApplyRequested",
                  "importedName": "innerTransferApplyRequested",
                  "sourceValue": "actions/xpTransfer",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xpTransfer.ts",
                  "usage": "EMGetUserFlowIdUsages.xInnerPayment"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 76,
                  "column": 62,
                  "index": 2510
                },
                "end": {
                  "line": 233,
                  "column": 1,
                  "index": 7161
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [
            "withdrawActions",
            "meActions",
            "userActions",
            "xptransferActions",
            "xtPartnerActions",
            "fundActions"
          ],
          "objectPropertyMap": {
            "change": "change",
            "destroy": "destroy",
            "push": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XTPartner/XTPartnerTransfer/XTPartnerTransferList/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "xpTransferActions",
              "sourceValue": "actions/xpTransfer",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xpTransfer.ts",
              "exportNames": [
                "pendingSpotsRequested",
                "pendingSpotsSucceed",
                "pendingSpotsFailed",
                "supportCurrencyRequested",
                "supportCurrencySucceed",
                "supportCurrencyFailed",
                "pricingListRequested",
                "pricingListSucceed",
                "pricingListFailed",
                "innerTransferApplyRequested",
                "innerTransferApplySucceed",
                "innerTransferApplyFailed",
                "initInnerTransferApply",
                "setXPTransferApplyStep",
                "innerTransferDetailRequested",
                "innerTransferDetailSucceed",
                "innerTransferDetailFailed",
                "innerTransferListRequested",
                "innerTransferListSucceed",
                "innerTransferListFailed",
                "exportTransferRequested",
                "exportTransferSucceed",
                "exportTransferFailed",
                "setTransferModal",
                "updateApplyCheckList",
                "initApplyCheckList"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 42,
                  "column": 63,
                  "index": 1593
                },
                "end": {
                  "line": 210,
                  "column": 1,
                  "index": 7233
                }
              },
              "actionsMethods": [
                {
                  "name": "innerTransferListRequested"
                },
                {
                  "name": "setTransferModal",
                  "usage": "export"
                },
                {
                  "name": "exportTransferRequested"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "innerTransferListRequested",
                  "importedName": "innerTransferListRequested",
                  "sourceValue": "actions/xpTransfer",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xpTransfer.ts"
                },
                {
                  "localName": "setTransferModal",
                  "importedName": "setTransferModal",
                  "sourceValue": "actions/xpTransfer",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xpTransfer.ts",
                  "usage": "export"
                },
                {
                  "localName": "exportTransferRequested",
                  "importedName": "exportTransferRequested",
                  "sourceValue": "actions/xpTransfer",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xpTransfer.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 42,
                  "column": 63,
                  "index": 1593
                },
                "end": {
                  "line": 210,
                  "column": 1,
                  "index": 7233
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["xpTransferActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XTPartner/XTPartnerTransfer/XTPartnerTransferDetail/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "xpTransferActions",
              "sourceValue": "actions/xpTransfer",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xpTransfer.ts",
              "exportNames": [
                "pendingSpotsRequested",
                "pendingSpotsSucceed",
                "pendingSpotsFailed",
                "supportCurrencyRequested",
                "supportCurrencySucceed",
                "supportCurrencyFailed",
                "pricingListRequested",
                "pricingListSucceed",
                "pricingListFailed",
                "innerTransferApplyRequested",
                "innerTransferApplySucceed",
                "innerTransferApplyFailed",
                "initInnerTransferApply",
                "setXPTransferApplyStep",
                "innerTransferDetailRequested",
                "innerTransferDetailSucceed",
                "innerTransferDetailFailed",
                "innerTransferListRequested",
                "innerTransferListSucceed",
                "innerTransferListFailed",
                "exportTransferRequested",
                "exportTransferSucceed",
                "exportTransferFailed",
                "setTransferModal",
                "updateApplyCheckList",
                "initApplyCheckList"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 30,
                  "column": 63,
                  "index": 823
                },
                "end": {
                  "line": 116,
                  "column": 1,
                  "index": 3010
                }
              },
              "actionsMethods": [
                {
                  "name": "innerTransferDetailRequested"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "innerTransferDetailRequested",
                  "importedName": "innerTransferDetailRequested",
                  "sourceValue": "actions/xpTransfer",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xpTransfer.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 30,
                  "column": 63,
                  "index": 823
                },
                "end": {
                  "line": 116,
                  "column": 1,
                  "index": 3010
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["xpTransferActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XTPartner/XTPartnerInvitee/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": false,
              "localName": "goBack",
              "importedName": "goBack",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 23,
                  "column": 56,
                  "index": 615
                },
                "end": {
                  "line": 35,
                  "column": 1,
                  "index": 923
                }
              },
              "actionsMethods": [],
              "usedActionsDependencies": [],
              "nodeLoc": {
                "start": {
                  "line": 23,
                  "column": 56,
                  "index": 615
                },
                "end": {
                  "line": 35,
                  "column": 1,
                  "index": 923
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {
            "goBack": "goBack"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XTPartner/XTPartnerInvitee/XTPartnerInviteeList/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "xtPartnerActions",
              "sourceValue": "actions/xtPartner",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xtPartner.ts",
              "exportNames": [
                "contractApplyRequested",
                "contractApplySucceed",
                "contractApplyFailed",
                "initContractApply",
                "searchXTPartnerRequested",
                "searchXTPartnerSucceed",
                "searchXTPartnerFailed",
                "initSearchXTPartner",
                "queryPartnerRequested",
                "queryPartnerSucceed",
                "queryPartnerFailed",
                "rescindContractRequested",
                "rescindContractSucceed",
                "rescindContractFailed",
                "initRescindContract",
                "querySigningRequested",
                "querySigningSucceed",
                "querySigningFailed",
                "agreeContractRequested",
                "agreeContractSucceed",
                "agreeContractFailed",
                "initAgreeContract",
                "rejectContractRequested",
                "rejectContractSucceed",
                "rejectContractFailed",
                "initRejectContract",
                "cancelContractRequested",
                "cancelContractSucceed",
                "cancelContractFailed",
                "initCancelContract",
                "setContractId",
                "upgradeXTPartnerRequested",
                "upgradeXTPartnerSucceed",
                "upgradeXTPartnerFailed",
                "initUpgradeXTPartner"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 42,
                  "column": 60,
                  "index": 1516
                },
                "end": {
                  "line": 256,
                  "column": 1,
                  "index": 8724
                }
              },
              "actionsMethods": [
                {
                  "name": "querySigningRequested"
                },
                {
                  "name": "setContractId",
                  "usageVariable": "usage"
                },
                {
                  "name": "setContractId",
                  "usage": "EMContractIdUsage.Agree"
                },
                {
                  "name": "initAgreeContract"
                },
                {
                  "name": "agreeContractRequested"
                },
                {
                  "name": "setContractId",
                  "usage": "EMContractIdUsage.Reject"
                },
                {
                  "name": "initRejectContract"
                },
                {
                  "name": "rejectContractRequested"
                },
                {
                  "name": "setContractId",
                  "usage": "EMContractIdUsage.Cancel"
                },
                {
                  "name": "initCancelContract"
                },
                {
                  "name": "cancelContractRequested"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "querySigningRequested",
                  "importedName": "querySigningRequested",
                  "sourceValue": "actions/xtPartner",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xtPartner.ts"
                },
                {
                  "localName": "setContractId",
                  "importedName": "setContractId",
                  "sourceValue": "actions/xtPartner",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xtPartner.ts",
                  "usageVariable": "usage"
                },
                {
                  "localName": "setContractId",
                  "importedName": "setContractId",
                  "sourceValue": "actions/xtPartner",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xtPartner.ts",
                  "usage": "EMContractIdUsage.Agree"
                },
                {
                  "localName": "initAgreeContract",
                  "importedName": "initAgreeContract",
                  "sourceValue": "actions/xtPartner",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xtPartner.ts"
                },
                {
                  "localName": "agreeContractRequested",
                  "importedName": "agreeContractRequested",
                  "sourceValue": "actions/xtPartner",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xtPartner.ts"
                },
                {
                  "localName": "setContractId",
                  "importedName": "setContractId",
                  "sourceValue": "actions/xtPartner",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xtPartner.ts",
                  "usage": "EMContractIdUsage.Reject"
                },
                {
                  "localName": "initRejectContract",
                  "importedName": "initRejectContract",
                  "sourceValue": "actions/xtPartner",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xtPartner.ts"
                },
                {
                  "localName": "rejectContractRequested",
                  "importedName": "rejectContractRequested",
                  "sourceValue": "actions/xtPartner",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xtPartner.ts"
                },
                {
                  "localName": "setContractId",
                  "importedName": "setContractId",
                  "sourceValue": "actions/xtPartner",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xtPartner.ts",
                  "usage": "EMContractIdUsage.Cancel"
                },
                {
                  "localName": "initCancelContract",
                  "importedName": "initCancelContract",
                  "sourceValue": "actions/xtPartner",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xtPartner.ts"
                },
                {
                  "localName": "cancelContractRequested",
                  "importedName": "cancelContractRequested",
                  "sourceValue": "actions/xtPartner",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xtPartner.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 42,
                  "column": 60,
                  "index": 1516
                },
                "end": {
                  "line": 256,
                  "column": 1,
                  "index": 8724
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["xtPartnerActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XTPartner/XTPartnerReceive/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "xpTransferActions",
              "sourceValue": "actions/xpTransfer",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xpTransfer.ts",
              "exportNames": [
                "pendingSpotsRequested",
                "pendingSpotsSucceed",
                "pendingSpotsFailed",
                "supportCurrencyRequested",
                "supportCurrencySucceed",
                "supportCurrencyFailed",
                "pricingListRequested",
                "pricingListSucceed",
                "pricingListFailed",
                "innerTransferApplyRequested",
                "innerTransferApplySucceed",
                "innerTransferApplyFailed",
                "initInnerTransferApply",
                "setXPTransferApplyStep",
                "innerTransferDetailRequested",
                "innerTransferDetailSucceed",
                "innerTransferDetailFailed",
                "innerTransferListRequested",
                "innerTransferListSucceed",
                "innerTransferListFailed",
                "exportTransferRequested",
                "exportTransferSucceed",
                "exportTransferFailed",
                "setTransferModal",
                "updateApplyCheckList",
                "initApplyCheckList"
              ]
            },
            {
              "isNamespace": false,
              "localName": "goBack",
              "importedName": "goBack",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 31,
                  "column": 56,
                  "index": 759
                },
                "end": {
                  "line": 50,
                  "column": 1,
                  "index": 1487
                }
              },
              "actionsMethods": [
                {
                  "name": "supportCurrencyRequested"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "supportCurrencyRequested",
                  "importedName": "supportCurrencyRequested",
                  "sourceValue": "actions/xpTransfer",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xpTransfer.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 31,
                  "column": 56,
                  "index": 759
                },
                "end": {
                  "line": 50,
                  "column": 1,
                  "index": 1487
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["xpTransferActions"],
          "objectPropertyMap": {
            "goBack": "goBack"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XTPartner/XTPartnerReceive/XTPartnerReceiveList/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "xpReceiveActions",
              "sourceValue": "actions/xpReceive",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xpReceive.ts",
              "exportNames": [
                "queryReceiveRequested",
                "queryReceiveSucceed",
                "queryReceiveFailed",
                "setReceiveQueryData",
                "addRemarkRequested",
                "addRemarkSucceed",
                "addRemarkFailed",
                "initAddRemark",
                "exportRecordRequested",
                "exportRecordSucceed",
                "exportRecordFailed",
                "initExportRecord",
                "receiveDetailRequested",
                "receiveDetailSucceed",
                "receiveDetailFailed",
                "refundXTApplyRequested",
                "refundXTApplySucceed",
                "refundXTApplyFailed",
                "initRefundXTApply",
                "setXPRefundStep",
                "setReceiveModal"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 51,
                  "column": 60,
                  "index": 1606
                },
                "end": {
                  "line": 231,
                  "column": 1,
                  "index": 8024
                }
              },
              "actionsMethods": [
                {
                  "name": "queryReceiveRequested"
                },
                {
                  "name": "initAddRemark"
                },
                {
                  "name": "setReceiveModal",
                  "usage": "remark"
                },
                {
                  "name": "addRemarkRequested"
                },
                {
                  "name": "initExportRecord"
                },
                {
                  "name": "setReceiveModal",
                  "usage": "export"
                },
                {
                  "name": "exportRecordRequested"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "queryReceiveRequested",
                  "importedName": "queryReceiveRequested",
                  "sourceValue": "actions/xpReceive",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xpReceive.ts"
                },
                {
                  "localName": "initAddRemark",
                  "importedName": "initAddRemark",
                  "sourceValue": "actions/xpReceive",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xpReceive.ts"
                },
                {
                  "localName": "setReceiveModal",
                  "importedName": "setReceiveModal",
                  "sourceValue": "actions/xpReceive",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xpReceive.ts",
                  "usage": "remark"
                },
                {
                  "localName": "addRemarkRequested",
                  "importedName": "addRemarkRequested",
                  "sourceValue": "actions/xpReceive",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xpReceive.ts"
                },
                {
                  "localName": "initExportRecord",
                  "importedName": "initExportRecord",
                  "sourceValue": "actions/xpReceive",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xpReceive.ts"
                },
                {
                  "localName": "setReceiveModal",
                  "importedName": "setReceiveModal",
                  "sourceValue": "actions/xpReceive",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xpReceive.ts",
                  "usage": "export"
                },
                {
                  "localName": "exportRecordRequested",
                  "importedName": "exportRecordRequested",
                  "sourceValue": "actions/xpReceive",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xpReceive.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 51,
                  "column": 60,
                  "index": 1606
                },
                "end": {
                  "line": 231,
                  "column": 1,
                  "index": 8024
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["xpReceiveActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XTPartner/XTPartnerReceive/XTPartnerReceiveDetail/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "xpReceiveActions",
              "sourceValue": "actions/xpReceive",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xpReceive.ts",
              "exportNames": [
                "queryReceiveRequested",
                "queryReceiveSucceed",
                "queryReceiveFailed",
                "setReceiveQueryData",
                "addRemarkRequested",
                "addRemarkSucceed",
                "addRemarkFailed",
                "initAddRemark",
                "exportRecordRequested",
                "exportRecordSucceed",
                "exportRecordFailed",
                "initExportRecord",
                "receiveDetailRequested",
                "receiveDetailSucceed",
                "receiveDetailFailed",
                "refundXTApplyRequested",
                "refundXTApplySucceed",
                "refundXTApplyFailed",
                "initRefundXTApply",
                "setXPRefundStep",
                "setReceiveModal"
              ]
            },
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 37,
                  "column": 62,
                  "index": 1162
                },
                "end": {
                  "line": 199,
                  "column": 1,
                  "index": 5652
                }
              },
              "actionsMethods": [
                {
                  "name": "receiveDetailRequested"
                },
                {
                  "name": "setReceiveModal",
                  "usage": "refund"
                },
                {
                  "name": "push"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "receiveDetailRequested",
                  "importedName": "receiveDetailRequested",
                  "sourceValue": "actions/xpReceive",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xpReceive.ts"
                },
                {
                  "localName": "setReceiveModal",
                  "importedName": "setReceiveModal",
                  "sourceValue": "actions/xpReceive",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xpReceive.ts",
                  "usage": "refund"
                },
                {
                  "isNamespace": false,
                  "localName": "push",
                  "importedName": "push",
                  "sourceValue": "react-router-redux",
                  "dependencyPath": "react-router-redux"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 37,
                  "column": 62,
                  "index": 1162
                },
                "end": {
                  "line": 199,
                  "column": 1,
                  "index": 5652
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["xpReceiveActions"],
          "objectPropertyMap": {
            "push": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XTPartner/XTPartnerRefund/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": false,
              "localName": "goBack",
              "importedName": "goBack",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 23,
                  "column": 55,
                  "index": 614
                },
                "end": {
                  "line": 35,
                  "column": 1,
                  "index": 922
                }
              },
              "actionsMethods": [],
              "usedActionsDependencies": [],
              "nodeLoc": {
                "start": {
                  "line": 23,
                  "column": 55,
                  "index": 614
                },
                "end": {
                  "line": 35,
                  "column": 1,
                  "index": 922
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {
            "goBack": "goBack"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XTPartner/XTPartnerRefund/XTPartnerRefundApply/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "xpReceiveActions",
              "sourceValue": "actions/xpReceive",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xpReceive.ts",
              "exportNames": [
                "queryReceiveRequested",
                "queryReceiveSucceed",
                "queryReceiveFailed",
                "setReceiveQueryData",
                "addRemarkRequested",
                "addRemarkSucceed",
                "addRemarkFailed",
                "initAddRemark",
                "exportRecordRequested",
                "exportRecordSucceed",
                "exportRecordFailed",
                "initExportRecord",
                "receiveDetailRequested",
                "receiveDetailSucceed",
                "receiveDetailFailed",
                "refundXTApplyRequested",
                "refundXTApplySucceed",
                "refundXTApplyFailed",
                "initRefundXTApply",
                "setXPRefundStep",
                "setReceiveModal"
              ]
            },
            {
              "isNamespace": true,
              "localName": "fundActions",
              "sourceValue": "actions/fund",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fund.ts",
              "exportNames": [
                "getFrozenListRequested",
                "getFrozenListSucceed",
                "getFrozenListFailed",
                "initFrozenList",
                "getWithDrawSpeedFlagRequested",
                "getWithDrawSpeedFlagSucceed",
                "getWithDrawSpeedFlagFailed",
                "getWithDrawDateRequested",
                "getWithDrawDateSucceed",
                "getWithDrawDateFailed",
                "getBankCardInfoRequested",
                "getBankCardInfoSucceed",
                "getBankCardInfoFailed",
                "resetBankCardInfo"
              ]
            },
            {
              "isNamespace": false,
              "localName": "destroy",
              "importedName": "destroy",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 52,
                  "column": 60,
                  "index": 1717
                },
                "end": {
                  "line": 181,
                  "column": 1,
                  "index": 5908
                }
              },
              "actionsMethods": [
                {
                  "name": "getFrozenListRequested",
                  "usage": "INNER_REFUND"
                },
                {
                  "name": "receiveDetailRequested"
                },
                {
                  "name": "setXPRefundStep"
                },
                {
                  "name": "destroy"
                },
                {
                  "name": "initRefundXTApply"
                },
                {
                  "name": "refundXTApplyRequested"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "getFrozenListRequested",
                  "importedName": "getFrozenListRequested",
                  "sourceValue": "actions/fund",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fund.ts",
                  "usage": "INNER_REFUND"
                },
                {
                  "localName": "receiveDetailRequested",
                  "importedName": "receiveDetailRequested",
                  "sourceValue": "actions/xpReceive",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xpReceive.ts"
                },
                {
                  "localName": "setXPRefundStep",
                  "importedName": "setXPRefundStep",
                  "sourceValue": "actions/xpReceive",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xpReceive.ts"
                },
                {
                  "isNamespace": false,
                  "localName": "destroy",
                  "importedName": "destroy",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                },
                {
                  "localName": "initRefundXTApply",
                  "importedName": "initRefundXTApply",
                  "sourceValue": "actions/xpReceive",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xpReceive.ts"
                },
                {
                  "localName": "refundXTApplyRequested",
                  "importedName": "refundXTApplyRequested",
                  "sourceValue": "actions/xpReceive",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xpReceive.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 52,
                  "column": 60,
                  "index": 1717
                },
                "end": {
                  "line": 181,
                  "column": 1,
                  "index": 5908
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["xpReceiveActions", "fundActions"],
          "objectPropertyMap": {
            "destroy": "destroy"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XTPartner/XTPartnerUpgrade/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "actions",
              "sourceValue": "actions/xtPartner",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xtPartner.ts",
              "exportNames": [
                "contractApplyRequested",
                "contractApplySucceed",
                "contractApplyFailed",
                "initContractApply",
                "searchXTPartnerRequested",
                "searchXTPartnerSucceed",
                "searchXTPartnerFailed",
                "initSearchXTPartner",
                "queryPartnerRequested",
                "queryPartnerSucceed",
                "queryPartnerFailed",
                "rescindContractRequested",
                "rescindContractSucceed",
                "rescindContractFailed",
                "initRescindContract",
                "querySigningRequested",
                "querySigningSucceed",
                "querySigningFailed",
                "agreeContractRequested",
                "agreeContractSucceed",
                "agreeContractFailed",
                "initAgreeContract",
                "rejectContractRequested",
                "rejectContractSucceed",
                "rejectContractFailed",
                "initRejectContract",
                "cancelContractRequested",
                "cancelContractSucceed",
                "cancelContractFailed",
                "initCancelContract",
                "setContractId",
                "upgradeXTPartnerRequested",
                "upgradeXTPartnerSucceed",
                "upgradeXTPartnerFailed",
                "initUpgradeXTPartner"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 34,
                  "column": 56,
                  "index": 1007
                },
                "end": {
                  "line": 140,
                  "column": 1,
                  "index": 4071
                }
              },
              "actionsMethods": [
                {
                  "name": "initUpgradeXTPartner"
                },
                {
                  "name": "upgradeXTPartnerRequested"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "initUpgradeXTPartner",
                  "importedName": "initUpgradeXTPartner",
                  "sourceValue": "actions/xtPartner",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xtPartner.ts"
                },
                {
                  "localName": "upgradeXTPartnerRequested",
                  "importedName": "upgradeXTPartnerRequested",
                  "sourceValue": "actions/xtPartner",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xtPartner.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 34,
                  "column": 56,
                  "index": 1007
                },
                "end": {
                  "line": 140,
                  "column": 1,
                  "index": 4071
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["actions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Benefit/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 28,
                  "column": 57,
                  "index": 841
                },
                "end": {
                  "line": 39,
                  "column": 1,
                  "index": 1134
                }
              },
              "actionsMethods": [],
              "usedActionsDependencies": [],
              "nodeLoc": {
                "start": {
                  "line": 28,
                  "column": 57,
                  "index": 841
                },
                "end": {
                  "line": 39,
                  "column": 1,
                  "index": 1134
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {
            "push": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Benefit/SuperMember/SuperMemberUsingNew/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": false,
              "localName": "modalActions",
              "importedName": "modalActions",
              "sourceValue": "actions",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/index.ts"
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "SuperMemberUsingNew",
              "loc": {
                "start": {
                  "line": 481,
                  "column": 2,
                  "index": 14003
                },
                "end": {
                  "line": 481,
                  "column": 21,
                  "index": 14022
                },
                "identifierName": "SuperMemberUsingNew"
              },
              "actionsMethods": [],
              "usedActionsDependencies": [],
              "nodeLoc": {
                "start": {
                  "line": 63,
                  "column": 6,
                  "index": 1891
                },
                "end": {
                  "line": 63,
                  "column": 25,
                  "index": 1910
                },
                "identifierName": "SuperMemberUsingNew"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["modalActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Benefit/CustomerPlan/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "metaActions",
              "sourceValue": "actions/meta",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
              "exportNames": [
                "fetchMetaRequested",
                "fetchMetaSucceed",
                "fetchMetaFailed",
                "resetFetchMeta",
                "hideFetchMetaError"
              ]
            },
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 49,
                  "column": 62,
                  "index": 1499
                },
                "end": {
                  "line": 122,
                  "column": 1,
                  "index": 3491
                }
              },
              "actionsMethods": [
                {
                  "name": "fetchMetaRequested",
                  "usage": "EMMetaUsages.QueryFailUnsignPaingPackage"
                },
                {
                  "name": "fetchMetaRequested",
                  "usage": "EMMetaUsages.CustomerPlanUsed"
                },
                {
                  "name": "fetchMetaRequested",
                  "usage": "EMMetaUsages.QueryBenefitPkgConfig"
                },
                {
                  "name": "push"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "fetchMetaRequested",
                  "importedName": "fetchMetaRequested",
                  "sourceValue": "actions/meta",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
                  "usage": "EMMetaUsages.QueryFailUnsignPaingPackage"
                },
                {
                  "localName": "fetchMetaRequested",
                  "importedName": "fetchMetaRequested",
                  "sourceValue": "actions/meta",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
                  "usage": "EMMetaUsages.CustomerPlanUsed"
                },
                {
                  "localName": "fetchMetaRequested",
                  "importedName": "fetchMetaRequested",
                  "sourceValue": "actions/meta",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
                  "usage": "EMMetaUsages.QueryBenefitPkgConfig"
                },
                {
                  "isNamespace": false,
                  "localName": "push",
                  "importedName": "push",
                  "sourceValue": "react-router-redux",
                  "dependencyPath": "react-router-redux"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 49,
                  "column": 62,
                  "index": 1499
                },
                "end": {
                  "line": 122,
                  "column": 1,
                  "index": 3491
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["metaActions"],
          "objectPropertyMap": {
            "push": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Benefit/CustomerPlan/CustomerPlanBuyPage/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "modalActions",
              "sourceValue": "actions/modal",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/modal.ts",
              "exportNames": [
                "toggleModalStatus",
                "toggleModalWithCallback",
                "toggleGlobalPriorityModalStatus"
              ]
            },
            {
              "isNamespace": true,
              "localName": "submitActions",
              "sourceValue": "actions/submit",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/submit.ts",
              "exportNames": [
                "submitRequested",
                "submitSucceed",
                "submitFailed",
                "resetSubmit"
              ]
            },
            {
              "isNamespace": true,
              "localName": "metaActions",
              "sourceValue": "actions/meta",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
              "exportNames": [
                "fetchMetaRequested",
                "fetchMetaSucceed",
                "fetchMetaFailed",
                "resetFetchMeta",
                "hideFetchMetaError"
              ]
            },
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 118,
                  "column": 69,
                  "index": 4487
                },
                "end": {
                  "line": 945,
                  "column": 1,
                  "index": 31896
                }
              },
              "actionsMethods": [
                {
                  "name": "fetchMetaRequested",
                  "usage": "EMMetaUsages.QueryBenefitPkgConfig"
                },
                {
                  "name": "toggleModalStatus",
                  "usage": "EMModalUsages.CustomerPlanPresignPwd"
                },
                {
                  "name": "push"
                },
                {
                  "name": "submitRequested",
                  "usage": "EMSubmitUsages.CustomerPlanBuy"
                },
                {
                  "name": "submitRequested",
                  "usage": "EMSubmitUsages.applyOther"
                },
                {
                  "name": "resetSubmit",
                  "usage": "EMSubmitUsages.CustomerPlanBuy"
                },
                {
                  "name": "toggleModalStatus",
                  "usage": "EMModalUsages.CustomerPlanApplyModal"
                },
                {
                  "name": "toggleModalStatus",
                  "usage": "EMModalUsages.CustomerPlanPresignFeedback"
                },
                {
                  "name": "toggleModalStatus",
                  "usage": "EMModalUsages.CustomerPlanPresignTimeout"
                },
                {
                  "name": "toggleModalStatus",
                  "usage": "EMModalUsages.CustomerPlanDeductionFailed"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "fetchMetaRequested",
                  "importedName": "fetchMetaRequested",
                  "sourceValue": "actions/meta",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
                  "usage": "EMMetaUsages.QueryBenefitPkgConfig"
                },
                {
                  "localName": "toggleModalStatus",
                  "importedName": "toggleModalStatus",
                  "sourceValue": "actions/modal",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/modal.ts",
                  "usage": "EMModalUsages.CustomerPlanPresignPwd"
                },
                {
                  "isNamespace": false,
                  "localName": "push",
                  "importedName": "push",
                  "sourceValue": "react-router-redux",
                  "dependencyPath": "react-router-redux"
                },
                {
                  "localName": "submitRequested",
                  "importedName": "submitRequested",
                  "sourceValue": "actions/submit",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/submit.ts",
                  "usage": "EMSubmitUsages.CustomerPlanBuy"
                },
                {
                  "localName": "submitRequested",
                  "importedName": "submitRequested",
                  "sourceValue": "actions/submit",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/submit.ts",
                  "usage": "EMSubmitUsages.applyOther"
                },
                {
                  "localName": "resetSubmit",
                  "importedName": "resetSubmit",
                  "sourceValue": "actions/submit",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/submit.ts",
                  "usage": "EMSubmitUsages.CustomerPlanBuy"
                },
                {
                  "localName": "toggleModalStatus",
                  "importedName": "toggleModalStatus",
                  "sourceValue": "actions/modal",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/modal.ts",
                  "usage": "EMModalUsages.CustomerPlanApplyModal"
                },
                {
                  "localName": "toggleModalStatus",
                  "importedName": "toggleModalStatus",
                  "sourceValue": "actions/modal",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/modal.ts",
                  "usage": "EMModalUsages.CustomerPlanPresignFeedback"
                },
                {
                  "localName": "toggleModalStatus",
                  "importedName": "toggleModalStatus",
                  "sourceValue": "actions/modal",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/modal.ts",
                  "usage": "EMModalUsages.CustomerPlanPresignTimeout"
                },
                {
                  "localName": "toggleModalStatus",
                  "importedName": "toggleModalStatus",
                  "sourceValue": "actions/modal",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/modal.ts",
                  "usage": "EMModalUsages.CustomerPlanDeductionFailed"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 118,
                  "column": 69,
                  "index": 4487
                },
                "end": {
                  "line": 945,
                  "column": 1,
                  "index": 31896
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["modalActions", "submitActions", "metaActions"],
          "objectPropertyMap": {
            "push": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Benefit/CustomerPlan/CustomerPlanDeduction/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "metaActions",
              "sourceValue": "actions/meta",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
              "exportNames": [
                "fetchMetaRequested",
                "fetchMetaSucceed",
                "fetchMetaFailed",
                "resetFetchMeta",
                "hideFetchMetaError"
              ]
            },
            {
              "isNamespace": true,
              "localName": "submitActions",
              "sourceValue": "actions/submit",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/submit.ts",
              "exportNames": [
                "submitRequested",
                "submitSucceed",
                "submitFailed",
                "resetSubmit"
              ]
            },
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 43,
                  "column": 71,
                  "index": 1435
                },
                "end": {
                  "line": 147,
                  "column": 1,
                  "index": 4649
                }
              },
              "actionsMethods": [
                {
                  "name": "fetchMetaRequested",
                  "usage": "EMMetaUsages.QueryFailUnsignPaingPackage"
                },
                {
                  "name": "fetchMetaRequested",
                  "usage": "EMMetaUsages.CustomerPlanUsedEffective"
                },
                {
                  "name": "fetchMetaRequested"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "fetchMetaRequested",
                  "importedName": "fetchMetaRequested",
                  "sourceValue": "actions/meta",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
                  "usage": "EMMetaUsages.QueryFailUnsignPaingPackage"
                },
                {
                  "localName": "fetchMetaRequested",
                  "importedName": "fetchMetaRequested",
                  "sourceValue": "actions/meta",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
                  "usage": "EMMetaUsages.CustomerPlanUsedEffective"
                },
                {
                  "localName": "fetchMetaRequested",
                  "importedName": "fetchMetaRequested",
                  "sourceValue": "actions/meta",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 43,
                  "column": 71,
                  "index": 1435
                },
                "end": {
                  "line": 147,
                  "column": 1,
                  "index": 4649
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["metaActions", "submitActions"],
          "objectPropertyMap": {
            "push": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Benefit/CustomerPlan/CustomerPlanDetails/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "metaActions",
              "sourceValue": "actions/meta",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
              "exportNames": [
                "fetchMetaRequested",
                "fetchMetaSucceed",
                "fetchMetaFailed",
                "resetFetchMeta",
                "hideFetchMetaError"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 55,
                  "column": 69,
                  "index": 1509
                },
                "end": {
                  "line": 277,
                  "column": 1,
                  "index": 7386
                }
              },
              "actionsMethods": [
                {
                  "name": "fetchMetaRequested",
                  "usage": "EMMetaUsages.CustomerPlanUseRecord"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "fetchMetaRequested",
                  "importedName": "fetchMetaRequested",
                  "sourceValue": "actions/meta",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
                  "usage": "EMMetaUsages.CustomerPlanUseRecord"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 55,
                  "column": 69,
                  "index": 1509
                },
                "end": {
                  "line": 277,
                  "column": 1,
                  "index": 7386
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["metaActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Benefit/CustomerPlan/CustomerPlanHistory/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "metaActions",
              "sourceValue": "actions/meta",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
              "exportNames": [
                "fetchMetaRequested",
                "fetchMetaSucceed",
                "fetchMetaFailed",
                "resetFetchMeta",
                "hideFetchMetaError"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 35,
                  "column": 71,
                  "index": 1108
                },
                "end": {
                  "line": 117,
                  "column": 1,
                  "index": 3275
                }
              },
              "actionsMethods": [
                {
                  "name": "fetchMetaRequested",
                  "usage": "EMMetaUsages.BenefitPackageRecordNew"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "fetchMetaRequested",
                  "importedName": "fetchMetaRequested",
                  "sourceValue": "actions/meta",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
                  "usage": "EMMetaUsages.BenefitPackageRecordNew"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 35,
                  "column": 71,
                  "index": 1108
                },
                "end": {
                  "line": 117,
                  "column": 1,
                  "index": 3275
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["metaActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Settings/GrantFxWithdraw/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [],
          "warnings": [
            "[Warning] #367 actionsComponents not found (start line: 189, start column: 0, end line: 200",
            ", end column: 1)"
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {
            "push": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Settings/GrantFxWithdraw/component/GrantFxWithdrawVerifiedFailed/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "GrantFxWithdrawVerifiedFailed",
              "loc": {
                "start": {
                  "line": 63,
                  "column": 7,
                  "index": 1728
                },
                "end": {
                  "line": 63,
                  "column": 36,
                  "index": 1757
                },
                "identifierName": "GrantFxWithdrawVerifiedFailed"
              },
              "actionsMethods": [
                {
                  "name": "push"
                }
              ],
              "usedActionsDependencies": [
                {
                  "isNamespace": false,
                  "localName": "push",
                  "importedName": "push",
                  "sourceValue": "react-router-redux",
                  "dependencyPath": "react-router-redux"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 15,
                  "column": 6,
                  "index": 553
                },
                "end": {
                  "line": 15,
                  "column": 35,
                  "index": 582
                },
                "identifierName": "GrantFxWithdrawVerifiedFailed"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {
            "push": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Settings/GrantFxWithdraw/OrderExchangeScene/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": false,
              "localName": "exchangeStaffListRequest",
              "importedName": "exchangeStaffListRequest",
              "sourceValue": "actions/exchange",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/exchange.ts"
            },
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [],
          "warnings": [
            "[Warning] #230 lastArguments.length !== 1 (start line: 88, start column: 18, end line: 88",
            ", end column: 62)"
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {
            "exchangeStaffListRequest": "exchangeStaffListRequest",
            "push": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Settings/GrantFxWithdraw/OrderSceneDetail/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "OrderSceneDetail",
              "loc": {
                "start": {
                  "line": 287,
                  "column": 2,
                  "index": 8186
                },
                "end": {
                  "line": 287,
                  "column": 18,
                  "index": 8202
                },
                "identifierName": "OrderSceneDetail"
              },
              "actionsMethods": [
                {
                  "name": "push"
                },
                {
                  "name": "exchangeStaffListRequest"
                }
              ],
              "usedActionsDependencies": [
                {
                  "isNamespace": false,
                  "localName": "push",
                  "importedName": "push",
                  "sourceValue": "react-router-redux",
                  "dependencyPath": "react-router-redux"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 58,
                  "column": 6,
                  "index": 1897
                },
                "end": {
                  "line": 58,
                  "column": 22,
                  "index": 1913
                },
                "identifierName": "OrderSceneDetail"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {
            "push": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Withdrawal/WithdrawalEasyAdd/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "withdrawalsActions",
              "sourceValue": "actions/withdrawals",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts",
              "exportNames": [
                "accountListRequested",
                "accountListSucceed",
                "accountListFailed",
                "hideAccountListError",
                "deleteItemRequested",
                "deleteItemSucceed",
                "deleteItemFailed",
                "swithDeleteItemModal",
                "setDeleteItemId",
                "setDeleteItemType",
                "hideDeleteItemError",
                "historyDetailRequested",
                "historyDetailSucceed",
                "historyDetailFailed",
                "hideHistoryDetailError",
                "createAccountRequested",
                "createAccountSucceed",
                "createAccountFailed",
                "setCreateAccountStep",
                "resetCreateAccount",
                "hideCreateAccountError",
                "withdrawFXAddRequested",
                "withdrawFXAddSucceed",
                "withdrawFXAddFailed",
                "hideWithdrawFXAddError",
                "setWithdrawFXAddStep",
                "resetWithdrawFXAdd",
                "withdrawFXAddVerifyRequested",
                "withdrawFXAddVerifySucceed",
                "withdrawFXAddVerifyFailed",
                "queryBanks",
                "queryBanksSucceed",
                "queryBanksFailed",
                "queryProvinces",
                "queryProvincesSucceed",
                "queryProvincesFailed",
                "getLegalProfile",
                "getLegalProfileSucceed",
                "getLegalProfileFailed",
                "createTransferAccountRequested",
                "createTransferAccountSucceed",
                "createTransferAccountFailed",
                "hideCreateTransferAccountError",
                "setCreateTransferAccountStep",
                "resetCreateTransferAccount",
                "setBeneficiaryNameError",
                "getBeneficiayAccountNoRequested",
                "getBeneficiayAccountNoSucceed",
                "getBeneficiayAccountNoFailed",
                "resetBeneficiayAccountNo",
                "getAccountLimitRequested",
                "getAccountLimitSucceed",
                "getAccountLimitFailed",
                "bindAccountPhoneNoRequested",
                "bindAccountPhoneNoSucceed",
                "bindAccountPhoneNoFailed",
                "bindAccountPhoneNoVerifyFailed",
                "swithBindPhoneNoModal",
                "getBeneficiayPhoneNoRequested",
                "getBeneficiayPhoneNoSucceed",
                "getBeneficiayPhoneNoFailed",
                "resetBeneficiayPhoneNo",
                "getFXPrivateAgreementRequested",
                "getFXPrivateAgreementSucceed",
                "getFXPrivateAgreementFailed",
                "getFXPublicAgreementRequested",
                "getFXPublicAgreementSucceed",
                "getFXPublicAgreementFailed",
                "getTransferPublicAgreementRequested",
                "getTransferPublicAgreementSucceed",
                "getTransferPublicAgreementFailed",
                "getWithdrawNormalAgreementRequested",
                "getWithdrawNormalAgreementSucceed",
                "getWithdrawNormalAgreementFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "securityActions",
              "sourceValue": "actions/security",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/security.ts",
              "exportNames": [
                "checkABVType",
                "openABVPanel",
                "closeABVPanel",
                "validateCaptchaRequested",
                "validateCaptchaSucceed",
                "validateCaptchaFailed",
                "initValidateCaptcha",
                "setABVVeriType",
                "logSliderVeriInfo",
                "updateXRateLimitRoute"
              ]
            },
            {
              "isNamespace": true,
              "localName": "userActions",
              "sourceValue": "actions/user",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts",
              "exportNames": [
                "getUserFlowId",
                "getUserFlowIdAndCaptcha",
                "getUserFlowIdSucceed",
                "getUserFlowIdFailed",
                "initUserFlowId",
                "getUserCaptcha",
                "getUserCaptchaSucceed",
                "getUserCaptchaFailed",
                "initUserCaptcha",
                "verifyMfaRequested",
                "verifyMfaSucceed",
                "verifyMfaFailed",
                "initVerifyMfa",
                "setAuthId",
                "resetAuthId",
                "executeAuthIdCallBackRequested",
                "executeAuthIdCallBackSucceed",
                "executeAuthIdCallBackFailed",
                "sendMfaMessageRequested",
                "getMfaCaptchaRequested",
                "getMfaCaptchaSucceed",
                "getMfaCaptchaFailed",
                "initMfaCaptcha",
                "getWhiteListRequested",
                "getWhiteListSucceed",
                "getWhiteListFailed",
                "getWhiteListInit",
                "setMfaJson",
                "resetMfaJson",
                "queryIndustryRequested",
                "queryIndustrySucceed",
                "queryIndustryFailed",
                "queryRestrictionList",
                "queryRestrictionListSucceed",
                "queryRestrictionListFailed"
              ]
            },
            {
              "isNamespace": false,
              "localName": "reset",
              "importedName": "reset",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "touch",
              "importedName": "touch",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "change",
              "importedName": "change",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "WithdrawalEasyAddFrom",
              "loc": {
                "start": {
                  "line": 135,
                  "column": 63,
                  "index": 3981
                },
                "end": {
                  "line": 135,
                  "column": 84,
                  "index": 4002
                },
                "identifierName": "WithdrawalEasyAddFrom"
              },
              "actionsMethods": [],
              "usedActionsDependencies": [],
              "nodeLoc": {
                "start": {
                  "line": 34,
                  "column": 6,
                  "index": 1401
                },
                "end": {
                  "line": 34,
                  "column": 23,
                  "index": 1418
                },
                "identifierName": "WithdrawalEasyAdd"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["withdrawalsActions", "securityActions", "userActions"],
          "objectPropertyMap": {
            "reset": "reset",
            "touch": "touch",
            "change": "change"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/WithdrawSetting/WithdrawEasyFXApply/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "withdrawActions",
              "sourceValue": "actions/withdraw",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts",
              "exportNames": [
                "withdrawListRequested",
                "withdrawListSucceed",
                "withdrawListFailed",
                "hideWithdrawListError",
                "resetWithdrawList",
                "changeTab",
                "switchWithdrawApplyModal",
                "setWithdrawApplyIsReserved",
                "withdrawApplyRequested",
                "withdrawApplySucceed",
                "withdrawApplyFailed",
                "hideWithdrawApplyError",
                "setStep",
                "resetWithdrawApply",
                "withdrawInitRequested",
                "withdrawInitSucceed",
                "withdrawInitFailed",
                "hideWithdrawInitError",
                "withdrawDebtRequested",
                "withdrawDebtSucceed",
                "withdrawDebtFailed",
                "hideWithdrawDebtError",
                "removeRelatedItemOrderId",
                "addRelatedItemOrderId",
                "inputChangeRelatedItemValue",
                "resetRelatedOrders",
                "changeRelatedOrderChecked",
                "resetRelatedOrderChecked",
                "swithWithdrawFXApplyModal",
                "setWithdrawFXApplyStep",
                "setWithdrawFXApplyIsReserved",
                "withdrawFXApplyRequested",
                "withdrawFXApplySucceed",
                "withdrawFXApplyFailed",
                "hideWithdrawFXApplyError",
                "resetWithdrawFXApply",
                "isWithdrawErrorPage",
                "getFXWithdrawFeeRequested",
                "getFXWithdrawFeeSucceed",
                "getFXWithdrawFeeFailed",
                "hideGetFXWithdrawFeeError",
                "resetGetFXWithdrawFee",
                "getFXCanRelatedOrderRequested",
                "getFXCanRelatedOrderSucceed",
                "getFXCanRelatedOrderFailed",
                "hideGetFXCanRelatedOrderError",
                "resetGetFXCanRelatedOrder",
                "pushFXCanRelatedOrderRequested",
                "pushFXCanRelatedOrderSucceed",
                "pushFXCanRelatedOrderFailed",
                "swithWithdrawFXReApplyModal",
                "setWithdrawFXReApplyStep",
                "withdrawFXReApplyRequested",
                "withdrawFXReApplySucceed",
                "withdrawFXReApplyFailed",
                "resetWithdrawFXReApply",
                "hideWithdrawFXReApplyError",
                "getWithdrawReApplyItemRequested",
                "getWithdrawReApplyItemSucceed",
                "getWithdrawReApplyItemFailed",
                "resetGetWithdrawReApplyItem",
                "withdrawCheckBothFrozen",
                "withdrawCheckBothFrozenSucceed",
                "withdrawCheckBothFrozenFailed",
                "getFxWithdrawHolderTypeRequested",
                "getFxWithdrawHolderTypeSucceed",
                "getFxWithdrawHolderTypeFailed",
                "withdrawDetailRequested",
                "withdrawDetailSucceed",
                "withdrawDetailFailed",
                "resetWithdrawDetail",
                "withdrawFeeRequested",
                "withdrawFeeSucceed",
                "withdrawFeeFailed",
                "queryAddMaterialInfoRequested",
                "queryAddMaterialInfoSucceed",
                "queryAddMaterialInfoFailed",
                "addMaterialCommitRequested",
                "addMaterialCommitSucceed",
                "addMaterialCommitFailed",
                "resetAddMaterialCommit",
                "cancelFxWithdrawRequested",
                "cancelFxWithdrawSucceed",
                "cancelFxWithdrawFailed",
                "resetCancelFxWithdraw",
                "setCancelFxWithdrawModal",
                "cancelWithdrawRequested",
                "cancelWithdrawSucceed",
                "cancelWithdrawFailed",
                "resetCancelWithdraw",
                "setCancelWithdrawModal",
                "cancelOnGoingTransferRequested",
                "cancelOnGoingTransferSucceed",
                "cancelOnGoingTransferFailed",
                "resetCancelOnGoingTransfer",
                "setCancelOnGoingTransferModal",
                "withdrawSupportCcys",
                "withdrawSupportCcysSucceed",
                "withdrawSupportCcysFailed",
                "transferFeeRequested",
                "transferFeeSucceed",
                "transferFeeFailed",
                "setTransferApplyStep",
                "transferApplyRequested",
                "transferApplySucceed",
                "transferApplyFailed",
                "hideTransferApplyError",
                "resetTransferApply",
                "setTransferStep",
                "queryTransferAddMaterialInfoRequested",
                "queryTransferAddMaterialInfoSucceed",
                "queryTransferAddMaterialInfoFailed",
                "transferAddMaterialCommitRequested",
                "transferAddMaterialCommitSucceed",
                "transferAddMaterialCommitFailed",
                "resetTransferAddMaterialCommit",
                "cancelTransferRequested",
                "cancelTransferSucceed",
                "cancelTransferFailed",
                "resetCancelTransfer",
                "setCancelModal",
                "addCardInfoRequested",
                "addCardInfoSucceed",
                "addCardInfoFailed",
                "querySupportBoostRequested",
                "querySupportBoostSucceed",
                "querySupportBoostFailed",
                "resetQuerySupportBoost",
                "queryCanFastWithdrawWorkRequested",
                "queryCanFastWithdrawWorkFailed",
                "queryCanFastWithdrawWorkSuccess",
                "queryACrossBorderRequested",
                "queryACrossBorderSuccess",
                "queryACrossBorderFailed",
                "getAbRequested",
                "getAbSucceed",
                "getAbFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "fundActions",
              "sourceValue": "actions/fund",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fund.ts",
              "exportNames": [
                "getFrozenListRequested",
                "getFrozenListSucceed",
                "getFrozenListFailed",
                "initFrozenList",
                "getWithDrawSpeedFlagRequested",
                "getWithDrawSpeedFlagSucceed",
                "getWithDrawSpeedFlagFailed",
                "getWithDrawDateRequested",
                "getWithDrawDateSucceed",
                "getWithDrawDateFailed",
                "getBankCardInfoRequested",
                "getBankCardInfoSucceed",
                "getBankCardInfoFailed",
                "resetBankCardInfo"
              ]
            },
            {
              "isNamespace": true,
              "localName": "ticketActions",
              "sourceValue": "actions/ticket",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/ticket.ts",
              "exportNames": [
                "ticketListRequested",
                "ticketListSucceed",
                "ticketListFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "metaActions",
              "sourceValue": "actions/meta",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
              "exportNames": [
                "fetchMetaRequested",
                "fetchMetaSucceed",
                "fetchMetaFailed",
                "resetFetchMeta",
                "hideFetchMetaError"
              ]
            },
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 70,
                  "column": 59,
                  "index": 1998
                },
                "end": {
                  "line": 113,
                  "column": 1,
                  "index": 3286
                }
              },
              "actionsMethods": [
                {
                  "name": "getFrozenListRequested",
                  "usage": "CROSS_BORDER_A"
                },
                {
                  "name": "getFxWithdrawHolderTypeRequested"
                },
                {
                  "name": "initFrozenList"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "getFrozenListRequested",
                  "importedName": "getFrozenListRequested",
                  "sourceValue": "actions/fund",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fund.ts",
                  "usage": "CROSS_BORDER_A"
                },
                {
                  "localName": "getFxWithdrawHolderTypeRequested",
                  "importedName": "getFxWithdrawHolderTypeRequested",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "localName": "initFrozenList",
                  "importedName": "initFrozenList",
                  "sourceValue": "actions/fund",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fund.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 70,
                  "column": 59,
                  "index": 1998
                },
                "end": {
                  "line": 113,
                  "column": 1,
                  "index": 3286
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [
            "withdrawActions",
            "fundActions",
            "ticketActions",
            "metaActions"
          ],
          "objectPropertyMap": {
            "push": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/WithdrawApplyForm/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "withdrawActions",
              "sourceValue": "actions/withdraw",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts",
              "exportNames": [
                "withdrawListRequested",
                "withdrawListSucceed",
                "withdrawListFailed",
                "hideWithdrawListError",
                "resetWithdrawList",
                "changeTab",
                "switchWithdrawApplyModal",
                "setWithdrawApplyIsReserved",
                "withdrawApplyRequested",
                "withdrawApplySucceed",
                "withdrawApplyFailed",
                "hideWithdrawApplyError",
                "setStep",
                "resetWithdrawApply",
                "withdrawInitRequested",
                "withdrawInitSucceed",
                "withdrawInitFailed",
                "hideWithdrawInitError",
                "withdrawDebtRequested",
                "withdrawDebtSucceed",
                "withdrawDebtFailed",
                "hideWithdrawDebtError",
                "removeRelatedItemOrderId",
                "addRelatedItemOrderId",
                "inputChangeRelatedItemValue",
                "resetRelatedOrders",
                "changeRelatedOrderChecked",
                "resetRelatedOrderChecked",
                "swithWithdrawFXApplyModal",
                "setWithdrawFXApplyStep",
                "setWithdrawFXApplyIsReserved",
                "withdrawFXApplyRequested",
                "withdrawFXApplySucceed",
                "withdrawFXApplyFailed",
                "hideWithdrawFXApplyError",
                "resetWithdrawFXApply",
                "isWithdrawErrorPage",
                "getFXWithdrawFeeRequested",
                "getFXWithdrawFeeSucceed",
                "getFXWithdrawFeeFailed",
                "hideGetFXWithdrawFeeError",
                "resetGetFXWithdrawFee",
                "getFXCanRelatedOrderRequested",
                "getFXCanRelatedOrderSucceed",
                "getFXCanRelatedOrderFailed",
                "hideGetFXCanRelatedOrderError",
                "resetGetFXCanRelatedOrder",
                "pushFXCanRelatedOrderRequested",
                "pushFXCanRelatedOrderSucceed",
                "pushFXCanRelatedOrderFailed",
                "swithWithdrawFXReApplyModal",
                "setWithdrawFXReApplyStep",
                "withdrawFXReApplyRequested",
                "withdrawFXReApplySucceed",
                "withdrawFXReApplyFailed",
                "resetWithdrawFXReApply",
                "hideWithdrawFXReApplyError",
                "getWithdrawReApplyItemRequested",
                "getWithdrawReApplyItemSucceed",
                "getWithdrawReApplyItemFailed",
                "resetGetWithdrawReApplyItem",
                "withdrawCheckBothFrozen",
                "withdrawCheckBothFrozenSucceed",
                "withdrawCheckBothFrozenFailed",
                "getFxWithdrawHolderTypeRequested",
                "getFxWithdrawHolderTypeSucceed",
                "getFxWithdrawHolderTypeFailed",
                "withdrawDetailRequested",
                "withdrawDetailSucceed",
                "withdrawDetailFailed",
                "resetWithdrawDetail",
                "withdrawFeeRequested",
                "withdrawFeeSucceed",
                "withdrawFeeFailed",
                "queryAddMaterialInfoRequested",
                "queryAddMaterialInfoSucceed",
                "queryAddMaterialInfoFailed",
                "addMaterialCommitRequested",
                "addMaterialCommitSucceed",
                "addMaterialCommitFailed",
                "resetAddMaterialCommit",
                "cancelFxWithdrawRequested",
                "cancelFxWithdrawSucceed",
                "cancelFxWithdrawFailed",
                "resetCancelFxWithdraw",
                "setCancelFxWithdrawModal",
                "cancelWithdrawRequested",
                "cancelWithdrawSucceed",
                "cancelWithdrawFailed",
                "resetCancelWithdraw",
                "setCancelWithdrawModal",
                "cancelOnGoingTransferRequested",
                "cancelOnGoingTransferSucceed",
                "cancelOnGoingTransferFailed",
                "resetCancelOnGoingTransfer",
                "setCancelOnGoingTransferModal",
                "withdrawSupportCcys",
                "withdrawSupportCcysSucceed",
                "withdrawSupportCcysFailed",
                "transferFeeRequested",
                "transferFeeSucceed",
                "transferFeeFailed",
                "setTransferApplyStep",
                "transferApplyRequested",
                "transferApplySucceed",
                "transferApplyFailed",
                "hideTransferApplyError",
                "resetTransferApply",
                "setTransferStep",
                "queryTransferAddMaterialInfoRequested",
                "queryTransferAddMaterialInfoSucceed",
                "queryTransferAddMaterialInfoFailed",
                "transferAddMaterialCommitRequested",
                "transferAddMaterialCommitSucceed",
                "transferAddMaterialCommitFailed",
                "resetTransferAddMaterialCommit",
                "cancelTransferRequested",
                "cancelTransferSucceed",
                "cancelTransferFailed",
                "resetCancelTransfer",
                "setCancelModal",
                "addCardInfoRequested",
                "addCardInfoSucceed",
                "addCardInfoFailed",
                "querySupportBoostRequested",
                "querySupportBoostSucceed",
                "querySupportBoostFailed",
                "resetQuerySupportBoost",
                "queryCanFastWithdrawWorkRequested",
                "queryCanFastWithdrawWorkFailed",
                "queryCanFastWithdrawWorkSuccess",
                "queryACrossBorderRequested",
                "queryACrossBorderSuccess",
                "queryACrossBorderFailed",
                "getAbRequested",
                "getAbSucceed",
                "getAbFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "ticketActions",
              "sourceValue": "actions/ticket",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/ticket.ts",
              "exportNames": [
                "ticketListRequested",
                "ticketListSucceed",
                "ticketListFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "utilActions",
              "sourceValue": "actions/util",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/util.ts",
              "exportNames": [
                "pubKeyRequested",
                "pubKeySucceed",
                "pubKeyFailed",
                "toggleOrderAnnexUpload",
                "setIsMobile",
                "getFirmStatusRequested",
                "getFirmStatusSucceed",
                "getFirmStatusFailed",
                "setPreviewPageId",
                "setCountrys",
                "setProvinces",
                "setLoadAddress",
                "getLocationRequested",
                "getLocationSucceed",
                "getLocationFailed",
                "touchAndChangeAddressFields",
                "resetAddressFieldsThenSetCountry"
              ]
            },
            {
              "isNamespace": true,
              "localName": "xptransferActions",
              "sourceValue": "actions/xpTransfer",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xpTransfer.ts",
              "exportNames": [
                "pendingSpotsRequested",
                "pendingSpotsSucceed",
                "pendingSpotsFailed",
                "supportCurrencyRequested",
                "supportCurrencySucceed",
                "supportCurrencyFailed",
                "pricingListRequested",
                "pricingListSucceed",
                "pricingListFailed",
                "innerTransferApplyRequested",
                "innerTransferApplySucceed",
                "innerTransferApplyFailed",
                "initInnerTransferApply",
                "setXPTransferApplyStep",
                "innerTransferDetailRequested",
                "innerTransferDetailSucceed",
                "innerTransferDetailFailed",
                "innerTransferListRequested",
                "innerTransferListSucceed",
                "innerTransferListFailed",
                "exportTransferRequested",
                "exportTransferSucceed",
                "exportTransferFailed",
                "setTransferModal",
                "updateApplyCheckList",
                "initApplyCheckList"
              ]
            },
            {
              "isNamespace": true,
              "localName": "metaActions",
              "sourceValue": "actions/meta",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
              "exportNames": [
                "fetchMetaRequested",
                "fetchMetaSucceed",
                "fetchMetaFailed",
                "resetFetchMeta",
                "hideFetchMetaError"
              ]
            },
            {
              "isNamespace": true,
              "localName": "submitActions",
              "sourceValue": "actions/submit",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/submit.ts",
              "exportNames": [
                "submitRequested",
                "submitSucceed",
                "submitFailed",
                "resetSubmit"
              ]
            },
            {
              "isNamespace": false,
              "localName": "initialize",
              "importedName": "initialize",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            },
            {
              "isNamespace": false,
              "localName": "change",
              "importedName": "change",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "touch",
              "importedName": "touch",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "destroy",
              "importedName": "destroy",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 106,
                  "column": 52,
                  "index": 4016
                },
                "end": {
                  "line": 899,
                  "column": 1,
                  "index": 32155
                }
              },
              "actionsMethods": [
                {
                  "name": "initialize"
                },
                {
                  "name": "fetchMetaRequested",
                  "usage": "EMMetaUsages.BeneficaryAddressCountry"
                },
                {
                  "name": "queryACrossBorderRequested"
                },
                {
                  "name": "change"
                },
                {
                  "name": "destroy"
                },
                {
                  "name": "resetFetchMeta",
                  "usage": "EMMetaUsages.BeneficaryAddressProvince"
                },
                {
                  "name": "resetFetchMeta",
                  "usage": "EMMetaUsages.BeneficaryAddressCity"
                },
                {
                  "name": "resetFetchMeta",
                  "usage": "EMMetaUsages.BeneficaryAddressTown"
                },
                {
                  "name": "resetSubmit",
                  "usage": "EMSubmitUsages.BenificiaryAddressCreate"
                },
                {
                  "name": "touchAndChangeAddressFields"
                },
                {
                  "name": "touch"
                },
                {
                  "name": "initApplyCheckList"
                },
                {
                  "name": "setStep"
                },
                {
                  "name": "setWithdrawApplyIsReserved"
                },
                {
                  "name": "withdrawApplySucceed"
                },
                {
                  "name": "withdrawApplyFailed"
                },
                {
                  "name": "submitRequested",
                  "usage": "EMSubmitUsages.BenificiaryAddressCreate"
                },
                {
                  "name": "addCardInfoRequested",
                  "usage": "EMGetUserFlowIdUsages.withdrawNormalOrder"
                },
                {
                  "name": "withdrawApplyRequested",
                  "usage": "EMGetUserFlowIdUsages.withdrawNormalOrder"
                },
                {
                  "name": "resetAddressFieldsThenSetCountry"
                }
              ],
              "usedActionsDependencies": [
                {
                  "isNamespace": false,
                  "localName": "initialize",
                  "importedName": "initialize",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                },
                {
                  "localName": "fetchMetaRequested",
                  "importedName": "fetchMetaRequested",
                  "sourceValue": "actions/meta",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
                  "usage": "EMMetaUsages.BeneficaryAddressCountry"
                },
                {
                  "localName": "queryACrossBorderRequested",
                  "importedName": "queryACrossBorderRequested",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "isNamespace": false,
                  "localName": "change",
                  "importedName": "change",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                },
                {
                  "isNamespace": false,
                  "localName": "destroy",
                  "importedName": "destroy",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                },
                {
                  "localName": "resetFetchMeta",
                  "importedName": "resetFetchMeta",
                  "sourceValue": "actions/meta",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
                  "usage": "EMMetaUsages.BeneficaryAddressProvince"
                },
                {
                  "localName": "resetFetchMeta",
                  "importedName": "resetFetchMeta",
                  "sourceValue": "actions/meta",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
                  "usage": "EMMetaUsages.BeneficaryAddressCity"
                },
                {
                  "localName": "resetFetchMeta",
                  "importedName": "resetFetchMeta",
                  "sourceValue": "actions/meta",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
                  "usage": "EMMetaUsages.BeneficaryAddressTown"
                },
                {
                  "localName": "resetSubmit",
                  "importedName": "resetSubmit",
                  "sourceValue": "actions/submit",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/submit.ts",
                  "usage": "EMSubmitUsages.BenificiaryAddressCreate"
                },
                {
                  "localName": "touchAndChangeAddressFields",
                  "importedName": "touchAndChangeAddressFields",
                  "sourceValue": "actions/util",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/util.ts"
                },
                {
                  "isNamespace": false,
                  "localName": "touch",
                  "importedName": "touch",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                },
                {
                  "localName": "initApplyCheckList",
                  "importedName": "initApplyCheckList",
                  "sourceValue": "actions/xpTransfer",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xpTransfer.ts"
                },
                {
                  "localName": "setStep",
                  "importedName": "setStep",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "localName": "setWithdrawApplyIsReserved",
                  "importedName": "setWithdrawApplyIsReserved",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "localName": "withdrawApplySucceed",
                  "importedName": "withdrawApplySucceed",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "localName": "withdrawApplyFailed",
                  "importedName": "withdrawApplyFailed",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "localName": "submitRequested",
                  "importedName": "submitRequested",
                  "sourceValue": "actions/submit",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/submit.ts",
                  "usage": "EMSubmitUsages.BenificiaryAddressCreate"
                },
                {
                  "localName": "addCardInfoRequested",
                  "importedName": "addCardInfoRequested",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts",
                  "usage": "EMGetUserFlowIdUsages.withdrawNormalOrder"
                },
                {
                  "localName": "withdrawApplyRequested",
                  "importedName": "withdrawApplyRequested",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts",
                  "usage": "EMGetUserFlowIdUsages.withdrawNormalOrder"
                },
                {
                  "localName": "resetAddressFieldsThenSetCountry",
                  "importedName": "resetAddressFieldsThenSetCountry",
                  "sourceValue": "actions/util",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/util.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 106,
                  "column": 52,
                  "index": 4016
                },
                "end": {
                  "line": 899,
                  "column": 1,
                  "index": 32155
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [
            "withdrawActions",
            "ticketActions",
            "utilActions",
            "xptransferActions",
            "metaActions",
            "submitActions"
          ],
          "objectPropertyMap": {
            "initialize": "initialize",
            "push": "push",
            "change": "change",
            "touch": "touch",
            "destroy": "destroy"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/ABVPanel/XTCaptcha/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "userActions",
              "sourceValue": "actions/user",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts",
              "exportNames": [
                "getUserFlowId",
                "getUserFlowIdAndCaptcha",
                "getUserFlowIdSucceed",
                "getUserFlowIdFailed",
                "initUserFlowId",
                "getUserCaptcha",
                "getUserCaptchaSucceed",
                "getUserCaptchaFailed",
                "initUserCaptcha",
                "verifyMfaRequested",
                "verifyMfaSucceed",
                "verifyMfaFailed",
                "initVerifyMfa",
                "setAuthId",
                "resetAuthId",
                "executeAuthIdCallBackRequested",
                "executeAuthIdCallBackSucceed",
                "executeAuthIdCallBackFailed",
                "sendMfaMessageRequested",
                "getMfaCaptchaRequested",
                "getMfaCaptchaSucceed",
                "getMfaCaptchaFailed",
                "initMfaCaptcha",
                "getWhiteListRequested",
                "getWhiteListSucceed",
                "getWhiteListFailed",
                "getWhiteListInit",
                "setMfaJson",
                "resetMfaJson",
                "queryIndustryRequested",
                "queryIndustrySucceed",
                "queryIndustryFailed",
                "queryRestrictionList",
                "queryRestrictionListSucceed",
                "queryRestrictionListFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "securityActions",
              "sourceValue": "actions/security",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/security.ts",
              "exportNames": [
                "checkABVType",
                "openABVPanel",
                "closeABVPanel",
                "validateCaptchaRequested",
                "validateCaptchaSucceed",
                "validateCaptchaFailed",
                "initValidateCaptcha",
                "setABVVeriType",
                "logSliderVeriInfo",
                "updateXRateLimitRoute"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 64,
                  "column": 65,
                  "index": 1928
                },
                "end": {
                  "line": 165,
                  "column": 1,
                  "index": 4634
                }
              },
              "actionsMethods": [
                {
                  "name": "getMfaCaptchaRequested",
                  "usageVariable": "usage"
                },
                {
                  "name": "getUserCaptcha",
                  "usageVariable": "usage"
                },
                {
                  "name": "validateCaptchaRequested",
                  "usageVariable": "usage"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "getMfaCaptchaRequested",
                  "importedName": "getMfaCaptchaRequested",
                  "sourceValue": "actions/user",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts",
                  "usageVariable": "usage"
                },
                {
                  "localName": "getUserCaptcha",
                  "importedName": "getUserCaptcha",
                  "sourceValue": "actions/user",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts",
                  "usageVariable": "usage"
                },
                {
                  "localName": "validateCaptchaRequested",
                  "importedName": "validateCaptchaRequested",
                  "sourceValue": "actions/security",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/security.ts",
                  "usageVariable": "usage"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 64,
                  "column": 65,
                  "index": 1928
                },
                "end": {
                  "line": 165,
                  "column": 1,
                  "index": 4634
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["userActions", "securityActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/ABVPanel/NCCaptcha/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "userActions",
              "sourceValue": "actions/user",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts",
              "exportNames": [
                "getUserFlowId",
                "getUserFlowIdAndCaptcha",
                "getUserFlowIdSucceed",
                "getUserFlowIdFailed",
                "initUserFlowId",
                "getUserCaptcha",
                "getUserCaptchaSucceed",
                "getUserCaptchaFailed",
                "initUserCaptcha",
                "verifyMfaRequested",
                "verifyMfaSucceed",
                "verifyMfaFailed",
                "initVerifyMfa",
                "setAuthId",
                "resetAuthId",
                "executeAuthIdCallBackRequested",
                "executeAuthIdCallBackSucceed",
                "executeAuthIdCallBackFailed",
                "sendMfaMessageRequested",
                "getMfaCaptchaRequested",
                "getMfaCaptchaSucceed",
                "getMfaCaptchaFailed",
                "initMfaCaptcha",
                "getWhiteListRequested",
                "getWhiteListSucceed",
                "getWhiteListFailed",
                "getWhiteListInit",
                "setMfaJson",
                "resetMfaJson",
                "queryIndustryRequested",
                "queryIndustrySucceed",
                "queryIndustryFailed",
                "queryRestrictionList",
                "queryRestrictionListSucceed",
                "queryRestrictionListFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "securityActions",
              "sourceValue": "actions/security",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/security.ts",
              "exportNames": [
                "checkABVType",
                "openABVPanel",
                "closeABVPanel",
                "validateCaptchaRequested",
                "validateCaptchaSucceed",
                "validateCaptchaFailed",
                "initValidateCaptcha",
                "setABVVeriType",
                "logSliderVeriInfo",
                "updateXRateLimitRoute"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 38,
                  "column": 65,
                  "index": 1176
                },
                "end": {
                  "line": 121,
                  "column": 1,
                  "index": 3674
                }
              },
              "actionsMethods": [
                {
                  "name": "closeABVPanel",
                  "usageVariable": "usage"
                },
                {
                  "name": "logSliderVeriInfo"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "closeABVPanel",
                  "importedName": "closeABVPanel",
                  "sourceValue": "actions/security",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/security.ts",
                  "usageVariable": "usage"
                },
                {
                  "localName": "logSliderVeriInfo",
                  "importedName": "logSliderVeriInfo",
                  "sourceValue": "actions/security",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/security.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 38,
                  "column": 65,
                  "index": 1176
                },
                "end": {
                  "line": 121,
                  "column": 1,
                  "index": 3674
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["userActions", "securityActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/frontBaseForm.jsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "fileActions",
              "sourceValue": "actions/file",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/file.ts",
              "exportNames": [
                "uploadFileRequested",
                "uploadFileSucceed",
                "uploadFileFailed",
                "hideUploadFileError",
                "deleteFile",
                "deleteSyncFile",
                "resetFile",
                "resetCreateTransferAccountFile",
                "resetAllFile",
                "fileDownload",
                "getThumbnailRequested",
                "getThumbnailSucceed",
                "getThumbnailFailed",
                "initGetThumbnail",
                "setAnnexeRenameModal",
                "updateAnnexeFileName"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 460,
                  "column": 44,
                  "index": 10918
                },
                "end": {
                  "line": 585,
                  "column": 1,
                  "index": 15598
                }
              },
              "actionsMethods": [
                {
                  "name": "initGetThumbnail"
                },
                {
                  "name": "setAnnexeRenameModal"
                },
                {
                  "name": "getThumbnailRequested"
                },
                {
                  "name": "updateAnnexeFileName"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "initGetThumbnail",
                  "importedName": "initGetThumbnail",
                  "sourceValue": "actions/file",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/file.ts"
                },
                {
                  "localName": "setAnnexeRenameModal",
                  "importedName": "setAnnexeRenameModal",
                  "sourceValue": "actions/file",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/file.ts"
                },
                {
                  "localName": "getThumbnailRequested",
                  "importedName": "getThumbnailRequested",
                  "sourceValue": "actions/file",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/file.ts"
                },
                {
                  "localName": "updateAnnexeFileName",
                  "importedName": "updateAnnexeFileName",
                  "sourceValue": "actions/file",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/file.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 460,
                  "column": 44,
                  "index": 10918
                },
                "end": {
                  "line": 585,
                  "column": 1,
                  "index": 15598
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["fileActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/AddBindPhoneForm/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "bindActions",
              "sourceValue": "actions/bind",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/bind.ts",
              "exportNames": [
                "bindRequested",
                "bindSucceed",
                "bindFailed",
                "modifyBindRequested",
                "modifyBindSucceed",
                "modifyBindFailed",
                "setBindStep",
                "resetBindStep",
                "hideBindError"
              ]
            },
            {
              "isNamespace": true,
              "localName": "vcodeActions",
              "sourceValue": "actions/vcode",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/vcode.ts",
              "exportNames": [
                "updateCountDownSeconds",
                "stopVcodeCountDown",
                "sendVcodeMessage",
                "sendVcodeMessageSucceed",
                "sendVcodeMessageFailed",
                "hideVcodeTip"
              ]
            },
            {
              "isNamespace": true,
              "localName": "securityActions",
              "sourceValue": "actions/security",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/security.ts",
              "exportNames": [
                "checkABVType",
                "openABVPanel",
                "closeABVPanel",
                "validateCaptchaRequested",
                "validateCaptchaSucceed",
                "validateCaptchaFailed",
                "initValidateCaptcha",
                "setABVVeriType",
                "logSliderVeriInfo",
                "updateXRateLimitRoute"
              ]
            },
            {
              "isNamespace": true,
              "localName": "submitActions",
              "sourceValue": "actions/submit",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/submit.ts",
              "exportNames": [
                "submitRequested",
                "submitSucceed",
                "submitFailed",
                "resetSubmit"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 89,
                  "column": 56,
                  "index": 2642
                },
                "end": {
                  "line": 224,
                  "column": 1,
                  "index": 7332
                }
              },
              "actionsMethods": [
                {
                  "name": "bindRequested",
                  "usageVariable": "type"
                },
                {
                  "name": "checkABVType",
                  "usageVariable": "type"
                },
                {
                  "name": "sendVcodeMessage"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "bindRequested",
                  "importedName": "bindRequested",
                  "sourceValue": "actions/bind",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/bind.ts",
                  "usageVariable": "type"
                },
                {
                  "localName": "checkABVType",
                  "importedName": "checkABVType",
                  "sourceValue": "actions/security",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/security.ts",
                  "usageVariable": "type"
                },
                {
                  "localName": "sendVcodeMessage",
                  "importedName": "sendVcodeMessage",
                  "sourceValue": "actions/vcode",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/vcode.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 89,
                  "column": 56,
                  "index": 2642
                },
                "end": {
                  "line": 224,
                  "column": 1,
                  "index": 7332
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [
            "bindActions",
            "vcodeActions",
            "securityActions",
            "submitActions"
          ],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/SetPasswordForm/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "userActions",
              "sourceValue": "actions/user",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts",
              "exportNames": [
                "getUserFlowId",
                "getUserFlowIdAndCaptcha",
                "getUserFlowIdSucceed",
                "getUserFlowIdFailed",
                "initUserFlowId",
                "getUserCaptcha",
                "getUserCaptchaSucceed",
                "getUserCaptchaFailed",
                "initUserCaptcha",
                "verifyMfaRequested",
                "verifyMfaSucceed",
                "verifyMfaFailed",
                "initVerifyMfa",
                "setAuthId",
                "resetAuthId",
                "executeAuthIdCallBackRequested",
                "executeAuthIdCallBackSucceed",
                "executeAuthIdCallBackFailed",
                "sendMfaMessageRequested",
                "getMfaCaptchaRequested",
                "getMfaCaptchaSucceed",
                "getMfaCaptchaFailed",
                "initMfaCaptcha",
                "getWhiteListRequested",
                "getWhiteListSucceed",
                "getWhiteListFailed",
                "getWhiteListInit",
                "setMfaJson",
                "resetMfaJson",
                "queryIndustryRequested",
                "queryIndustrySucceed",
                "queryIndustryFailed",
                "queryRestrictionList",
                "queryRestrictionListSucceed",
                "queryRestrictionListFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "passwordActions",
              "sourceValue": "actions/password",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/password.ts",
              "exportNames": [
                "modifyTradePasswordRequested",
                "modifyTradePasswordSucceed",
                "modifyTradePasswordFailed",
                "initModifyTradePassword",
                "forgotTradePasswordRequested",
                "forgotTradePasswordSucceed",
                "forgotTradePasswordFailed",
                "initForgotTradePassword",
                "setTradePasswordRequested",
                "setTradePasswordSucceed",
                "setTradePasswordFailed",
                "initSetTradePassword",
                "modifyLoginPasswordRequested",
                "modifyLoginPasswordSucceed",
                "modifyLoginPasswordFailed",
                "setModifyLoginPasswordStep",
                "resetModifyLoginPassword",
                "hideModifyLoginPasswordError",
                "initLoginPasswordRequested",
                "initLoginPasswordSucceed",
                "initLoginPasswordFailed",
                "initInitLoginPassword"
              ]
            },
            {
              "isNamespace": false,
              "localName": "initialize",
              "importedName": "initialize",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "SetPasswordForm",
              "loc": {
                "start": {
                  "line": 164,
                  "column": 4,
                  "index": 4907
                },
                "end": {
                  "line": 164,
                  "column": 19,
                  "index": 4922
                },
                "identifierName": "SetPasswordForm"
              },
              "actionsMethods": [
                {
                  "name": "initLoginPasswordRequested"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "initLoginPasswordRequested",
                  "importedName": "initLoginPasswordRequested",
                  "sourceValue": "actions/password",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/password.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 41,
                  "column": 6,
                  "index": 1548
                },
                "end": {
                  "line": 41,
                  "column": 21,
                  "index": 1563
                },
                "identifierName": "SetPasswordForm"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["userActions", "passwordActions"],
          "objectPropertyMap": {
            "initialize": "initialize"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/index.tsx",
      "localConnect": "connect",
      "localCompose": "compose",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": false,
              "localName": "createOrderRequested",
              "importedName": "createOrderRequested",
              "sourceValue": "actions/order",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/order.ts"
            },
            {
              "isNamespace": false,
              "localName": "updateOneOrderRequested",
              "importedName": "updateOneOrderRequested",
              "sourceValue": "actions/order",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/order.ts"
            },
            {
              "isNamespace": false,
              "localName": "switchCreateOrderSuccessModal",
              "importedName": "switchCreateOrderSuccessModal",
              "sourceValue": "actions/order",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/order.ts"
            },
            {
              "isNamespace": false,
              "localName": "createTips",
              "importedName": "createTips",
              "sourceValue": "actions/tip",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/tip.ts"
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "PlatformGuard",
              "loc": {
                "start": {
                  "line": 149,
                  "column": 1,
                  "index": 3818
                },
                "end": {
                  "line": 149,
                  "column": 14,
                  "index": 3831
                },
                "identifierName": "PlatformGuard"
              },
              "actionsMethods": [],
              "usedActionsDependencies": [],
              "nodeLoc": {
                "start": {
                  "line": 15,
                  "column": 7,
                  "index": 746
                },
                "end": {
                  "line": 15,
                  "column": 20,
                  "index": 759
                },
                "identifierName": "PlatformGuard"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {
            "createOrderRequested": "createOrderRequested",
            "updateOneOrderRequested": "updateOneOrderRequested",
            "switchCreateOrderSuccessModal": "switchCreateOrderSuccessModal",
            "createTips": "createTips"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/NavPanel/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "modalActions",
              "sourceValue": "actions/modal",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/modal.ts",
              "exportNames": [
                "toggleModalStatus",
                "toggleModalWithCallback",
                "toggleGlobalPriorityModalStatus"
              ]
            },
            {
              "isNamespace": true,
              "localName": "faqActions",
              "sourceValue": "actions/faq",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/faq.ts",
              "exportNames": [
                "getFaqMenuRequested",
                "getFaqMenuSucceed",
                "getFaqMenuFailed",
                "getFaqHomeRequested",
                "getFaqHomeSucceed",
                "getFaqHomeFailed",
                "getFaqCategoryRequested",
                "getFaqCategorySucceed",
                "getFaqCategoryFailed",
                "getMoreFaqCategorySucceed",
                "getFaqSearchRequested",
                "getFaqSearchSucceed",
                "getFaqSearchFailed",
                "getMoreFaqSearchSucceed",
                "getFaqDetailRequested",
                "getFaqDetailSucceed",
                "getFaqDetailFailed",
                "clearFaqDetail",
                "postFeedbackRequested",
                "postFeedbackSucceed",
                "postFeedbackFailed",
                "getTagFaqRequested",
                "getTagFaqSucceed",
                "getTagFaqFailed"
              ]
            },
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 54,
                  "column": 52,
                  "index": 1479
                },
                "end": {
                  "line": 177,
                  "column": 1,
                  "index": 4748
                }
              },
              "actionsMethods": [
                {
                  "name": "push"
                },
                {
                  "name": "toggleModalStatus",
                  "usage": "EMModalUsages.SideFunctions"
                }
              ],
              "usedActionsDependencies": [
                {
                  "isNamespace": false,
                  "localName": "push",
                  "importedName": "push",
                  "sourceValue": "react-router-redux",
                  "dependencyPath": "react-router-redux"
                },
                {
                  "localName": "toggleModalStatus",
                  "importedName": "toggleModalStatus",
                  "sourceValue": "actions/modal",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/modal.ts",
                  "usage": "EMModalUsages.SideFunctions"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 54,
                  "column": 52,
                  "index": 1479
                },
                "end": {
                  "line": 177,
                  "column": 1,
                  "index": 4748
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["modalActions", "faqActions"],
          "objectPropertyMap": {
            "push": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/containers/OrderLoan/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "OrderLoan",
              "loc": {
                "start": {
                  "line": 64,
                  "column": 2,
                  "index": 1776
                },
                "end": {
                  "line": 64,
                  "column": 11,
                  "index": 1785
                },
                "identifierName": "OrderLoan"
              },
              "actionsMethods": [],
              "usedActionsDependencies": [],
              "nodeLoc": {
                "start": {
                  "line": 21,
                  "column": 6,
                  "index": 661
                },
                "end": {
                  "line": 21,
                  "column": 15,
                  "index": 670
                },
                "identifierName": "OrderLoan"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/containers/MyLoans/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 56,
                  "column": 70,
                  "index": 1627
                },
                "end": {
                  "line": 165,
                  "column": 1,
                  "index": 4331
                }
              },
              "actionsMethods": [
                {
                  "name": "changePage"
                }
              ],
              "usedActionsDependencies": [],
              "nodeLoc": {
                "start": {
                  "line": 56,
                  "column": 70,
                  "index": 1627
                },
                "end": {
                  "line": 165,
                  "column": 1,
                  "index": 4331
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/containers/LoanWithdraw/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 47,
                  "column": 85,
                  "index": 1394
                },
                "end": {
                  "line": 132,
                  "column": 1,
                  "index": 3362
                }
              },
              "actionsMethods": [],
              "usedActionsDependencies": [],
              "nodeLoc": {
                "start": {
                  "line": 47,
                  "column": 85,
                  "index": 1394
                },
                "end": {
                  "line": 132,
                  "column": 1,
                  "index": 3362
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/containers/OrderLoanApplication/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": false,
              "localName": "destroy",
              "importedName": "destroy",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "OrderLoanApplication",
              "loc": {
                "start": {
                  "line": 128,
                  "column": 2,
                  "index": 3497
                },
                "end": {
                  "line": 128,
                  "column": 22,
                  "index": 3517
                },
                "identifierName": "OrderLoanApplication"
              },
              "actionsMethods": [
                {
                  "name": "destroy"
                },
                {
                  "name": "creditIsVerifiedStop"
                },
                {
                  "name": "historyPush"
                },
                {
                  "name": "grantCompleteRequest"
                },
                {
                  "name": "onCreditReq"
                }
              ],
              "usedActionsDependencies": [
                {
                  "isNamespace": false,
                  "localName": "destroy",
                  "importedName": "destroy",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                },
                {
                  "isNamespace": false,
                  "localName": "push",
                  "importedName": "push",
                  "sourceValue": "react-router-redux",
                  "dependencyPath": "react-router-redux"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 27,
                  "column": 6,
                  "index": 997
                },
                "end": {
                  "line": 27,
                  "column": 57,
                  "index": 1048
                },
                "identifierName": "OrderLoanApplication"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {
            "destroy": "destroy",
            "historyPush": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/containers/LoanDetail/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": false,
              "localName": "clearMyLoanState",
              "importedName": "clearMyLoanState",
              "sourceValue": "enterpriseFinancing/actions/myLoans",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/actions/myLoans.ts"
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "LoanDetail",
              "loc": {
                "start": {
                  "line": 160,
                  "column": 2,
                  "index": 5349
                },
                "end": {
                  "line": 160,
                  "column": 12,
                  "index": 5359
                },
                "identifierName": "LoanDetail"
              },
              "actionsMethods": [
                {
                  "name": "loanDetailRequest"
                },
                {
                  "name": "loanAgmtDtlReq"
                },
                {
                  "name": "clearMyLoanState"
                }
              ],
              "usedActionsDependencies": [
                {
                  "isNamespace": false,
                  "localName": "clearMyLoanState",
                  "importedName": "clearMyLoanState",
                  "sourceValue": "enterpriseFinancing/actions/myLoans",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/actions/myLoans.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 27,
                  "column": 9,
                  "index": 1170
                },
                "end": {
                  "line": 27,
                  "column": 19,
                  "index": 1180
                },
                "identifierName": "LoanDetail"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {
            "clearMyLoanState": "clearMyLoanState"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/containers/Repayment/index.tsx",
      "localConnect": "connect",
      "localCompose": "compose",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": false,
              "localName": "change",
              "importedName": "change",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "getWhiteListRequested",
              "importedName": "getWhiteListRequested",
              "sourceValue": "actions/user",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts"
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "Repayment",
              "loc": {
                "start": {
                  "line": 143,
                  "column": 2,
                  "index": 4258
                },
                "end": {
                  "line": 143,
                  "column": 11,
                  "index": 4267
                },
                "identifierName": "Repayment"
              },
              "actionsMethods": [
                {
                  "name": "repaymentQuery"
                },
                {
                  "name": "clearRepaymentData"
                },
                {
                  "name": "stopQueryingPayResult"
                },
                {
                  "name": "change"
                },
                {
                  "name": "getWhiteListRequested"
                }
              ],
              "usedActionsDependencies": [
                {
                  "isNamespace": false,
                  "localName": "change",
                  "importedName": "change",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                },
                {
                  "isNamespace": false,
                  "localName": "getWhiteListRequested",
                  "importedName": "getWhiteListRequested",
                  "sourceValue": "actions/user",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 27,
                  "column": 9,
                  "index": 933
                },
                "end": {
                  "line": 27,
                  "column": 18,
                  "index": 942
                },
                "identifierName": "Repayment"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {
            "change": "change",
            "getWhiteListRequested": "getWhiteListRequested"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/containers/LegalMobileModify/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": false,
              "localName": "destroy",
              "importedName": "destroy",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "LegalMobileModify",
              "loc": {
                "start": {
                  "line": 82,
                  "column": 2,
                  "index": 1976
                },
                "end": {
                  "line": 82,
                  "column": 19,
                  "index": 1993
                },
                "identifierName": "LegalMobileModify"
              },
              "actionsMethods": [
                {
                  "name": "destroy"
                },
                {
                  "name": "mobileResetIsVerifiedStop"
                }
              ],
              "usedActionsDependencies": [
                {
                  "isNamespace": false,
                  "localName": "destroy",
                  "importedName": "destroy",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 23,
                  "column": 6,
                  "index": 723
                },
                "end": {
                  "line": 23,
                  "column": 51,
                  "index": 768
                },
                "identifierName": "LegalMobileModify"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {
            "destroy": "destroy"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Steps/FirstRegisterSteps/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "meActions",
              "sourceValue": "actions/me",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/me.ts",
              "exportNames": [
                "getProfileRequested",
                "getProfileSucceed",
                "getProfileFailed",
                "setProfile",
                "accountRequested",
                "accountSucceed",
                "accountFailed",
                "hideAccountError",
                "userPowerRequested",
                "userPowerSucceed",
                "userPowerFailed",
                "getDepositTodoRequested",
                "getDepositTodoSucceed",
                "getDepositTodoFailed",
                "setXtMethod",
                "setTransferNotice",
                "reset",
                "platformRequested",
                "platformSucceed",
                "platformFailed"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 98,
                  "column": 54,
                  "index": 2152
                },
                "end": {
                  "line": 330,
                  "column": 1,
                  "index": 9623
                }
              },
              "actionsMethods": [
                {
                  "name": "setMFATip"
                }
              ],
              "usedActionsDependencies": [],
              "nodeLoc": {
                "start": {
                  "line": 98,
                  "column": 54,
                  "index": 2152
                },
                "end": {
                  "line": 330,
                  "column": 1,
                  "index": 9623
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["meActions"],
          "objectPropertyMap": {}
        },
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "meActions",
              "sourceValue": "actions/me",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/me.ts",
              "exportNames": [
                "getProfileRequested",
                "getProfileSucceed",
                "getProfileFailed",
                "setProfile",
                "accountRequested",
                "accountSucceed",
                "accountFailed",
                "hideAccountError",
                "userPowerRequested",
                "userPowerSucceed",
                "userPowerFailed",
                "getDepositTodoRequested",
                "getDepositTodoSucceed",
                "getDepositTodoFailed",
                "setXtMethod",
                "setTransferNotice",
                "reset",
                "platformRequested",
                "platformSucceed",
                "platformFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "xshieldActions",
              "sourceValue": "actions/xshield",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xshield.ts",
              "exportNames": [
                "identityVerifyRequested",
                "identityVerifySucceed",
                "identityVerifyFailed",
                "xshieldBindRequested",
                "xshieldBindSucceed",
                "xshieldBindFailed",
                "xshieldUnBindRequested",
                "xshieldUnBindSucceed",
                "xshieldUnBindFailed",
                "mfaWechatAuthRequested",
                "mfaWechatAuthSucceed",
                "mfaWechatAuthFailed",
                "initMfaWechatAuth",
                "setXshieldBindStep",
                "setMFAVisible",
                "setMFAParam",
                "initXshield",
                "setMFATip",
                "unBindSubAccountRequested",
                "unBindSubAccountSucceed",
                "unBindSubAccountFailed",
                "unBindSubAccountModal"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 98,
                  "column": 54,
                  "index": 2152
                },
                "end": {
                  "line": 330,
                  "column": 1,
                  "index": 9623
                }
              },
              "actionsMethods": [
                {
                  "name": "setMFATip"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "setMFATip",
                  "importedName": "setMFATip",
                  "sourceValue": "actions/xshield",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xshield.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 98,
                  "column": 54,
                  "index": 2152
                },
                "end": {
                  "line": 330,
                  "column": 1,
                  "index": 9623
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["meActions", "xshieldActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/SidebarNav/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "uiActions",
              "sourceValue": "actions/ui",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/ui.ts",
              "exportNames": [
                "toggleMobileNavSidebar",
                "toggleSubAppLoading",
                "setSubAppError"
              ]
            },
            {
              "isNamespace": true,
              "localName": "appActions",
              "sourceValue": "actions/app",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/app.ts",
              "exportNames": ["userCheckFuncs", "userConfirmNewFuncOrChange"]
            },
            {
              "isNamespace": true,
              "localName": "statusActions",
              "sourceValue": "actions/status",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/status.ts",
              "exportNames": ["toggleEntityStatus"]
            },
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            },
            {
              "isNamespace": false,
              "localName": "getWhiteListRequested",
              "importedName": "getWhiteListRequested",
              "sourceValue": "actions/user",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 187,
                  "column": 66,
                  "index": 5302
                },
                "end": {
                  "line": 383,
                  "column": 1,
                  "index": 11438
                }
              },
              "actionsMethods": [
                {
                  "name": "toggleMobileNavSidebar"
                },
                {
                  "name": "getWhiteListRequested"
                },
                {
                  "name": "toggleEntityStatus",
                  "usage": "EMEntityStatusUsages.SlideBarCollapsed"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "toggleMobileNavSidebar",
                  "importedName": "toggleMobileNavSidebar",
                  "sourceValue": "actions/ui",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/ui.ts"
                },
                {
                  "isNamespace": false,
                  "localName": "getWhiteListRequested",
                  "importedName": "getWhiteListRequested",
                  "sourceValue": "actions/user",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts"
                },
                {
                  "localName": "toggleEntityStatus",
                  "importedName": "toggleEntityStatus",
                  "sourceValue": "actions/status",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/status.ts",
                  "usage": "EMEntityStatusUsages.SlideBarCollapsed"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 187,
                  "column": 66,
                  "index": 5302
                },
                "end": {
                  "line": 383,
                  "column": 1,
                  "index": 11438
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["uiActions", "appActions", "statusActions"],
          "objectPropertyMap": {
            "push": "push",
            "getWhiteListRequested": "getWhiteListRequested"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/middlewares/ProtocolUpdate/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "metaActions",
              "sourceValue": "actions/meta",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
              "exportNames": [
                "fetchMetaRequested",
                "fetchMetaSucceed",
                "fetchMetaFailed",
                "resetFetchMeta",
                "hideFetchMetaError"
              ]
            },
            {
              "isNamespace": true,
              "localName": "modalActions",
              "sourceValue": "actions/modal",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/modal.ts",
              "exportNames": [
                "toggleModalStatus",
                "toggleModalWithCallback",
                "toggleGlobalPriorityModalStatus"
              ]
            },
            {
              "isNamespace": true,
              "localName": "submitActions",
              "sourceValue": "actions/submit",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/submit.ts",
              "exportNames": [
                "submitRequested",
                "submitSucceed",
                "submitFailed",
                "resetSubmit"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "PackagedComponent",
              "loc": {
                "start": {
                  "line": 85,
                  "column": 53,
                  "index": 3140
                },
                "end": {
                  "line": 85,
                  "column": 70,
                  "index": 3157
                },
                "identifierName": "PackagedComponent"
              },
              "actionsMethods": [],
              "usedActionsDependencies": [],
              "nodeLoc": {
                "start": {
                  "line": 20,
                  "column": 7,
                  "index": 890
                },
                "end": {
                  "line": 20,
                  "column": 24,
                  "index": 907
                },
                "identifierName": "PackagedComponent"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["metaActions", "modalActions", "submitActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Crm/SideFunctions/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "modalActions",
              "sourceValue": "actions/modal",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/modal.ts",
              "exportNames": [
                "toggleModalStatus",
                "toggleModalWithCallback",
                "toggleGlobalPriorityModalStatus"
              ]
            },
            {
              "isNamespace": true,
              "localName": "userActions",
              "sourceValue": "actions/user",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts",
              "exportNames": [
                "getUserFlowId",
                "getUserFlowIdAndCaptcha",
                "getUserFlowIdSucceed",
                "getUserFlowIdFailed",
                "initUserFlowId",
                "getUserCaptcha",
                "getUserCaptchaSucceed",
                "getUserCaptchaFailed",
                "initUserCaptcha",
                "verifyMfaRequested",
                "verifyMfaSucceed",
                "verifyMfaFailed",
                "initVerifyMfa",
                "setAuthId",
                "resetAuthId",
                "executeAuthIdCallBackRequested",
                "executeAuthIdCallBackSucceed",
                "executeAuthIdCallBackFailed",
                "sendMfaMessageRequested",
                "getMfaCaptchaRequested",
                "getMfaCaptchaSucceed",
                "getMfaCaptchaFailed",
                "initMfaCaptcha",
                "getWhiteListRequested",
                "getWhiteListSucceed",
                "getWhiteListFailed",
                "getWhiteListInit",
                "setMfaJson",
                "resetMfaJson",
                "queryIndustryRequested",
                "queryIndustrySucceed",
                "queryIndustryFailed",
                "queryRestrictionList",
                "queryRestrictionListSucceed",
                "queryRestrictionListFailed"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 111,
                  "column": 60,
                  "index": 3404
                },
                "end": {
                  "line": 261,
                  "column": 1,
                  "index": 7931
                }
              },
              "actionsMethods": [
                {
                  "name": "getWhiteListRequested"
                },
                {
                  "name": "toggleModalStatus",
                  "usage": "EMModalUsages.SideFunctions"
                },
                {
                  "name": "toggleModalStatus",
                  "usage": "EMModalUsages.TradeEmailDetailModal"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "getWhiteListRequested",
                  "importedName": "getWhiteListRequested",
                  "sourceValue": "actions/user",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts"
                },
                {
                  "localName": "toggleModalStatus",
                  "importedName": "toggleModalStatus",
                  "sourceValue": "actions/modal",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/modal.ts",
                  "usage": "EMModalUsages.SideFunctions"
                },
                {
                  "localName": "toggleModalStatus",
                  "importedName": "toggleModalStatus",
                  "sourceValue": "actions/modal",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/modal.ts",
                  "usage": "EMModalUsages.TradeEmailDetailModal"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 111,
                  "column": 60,
                  "index": 3404
                },
                "end": {
                  "line": 261,
                  "column": 1,
                  "index": 7931
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["modalActions", "userActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/middlewares/MembershipNotify.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": false,
              "localName": "modalActions",
              "importedName": "modalActions",
              "sourceValue": "actions",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/index.ts"
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "WrapperComponent",
              "loc": {
                "start": {
                  "line": 110,
                  "column": 3,
                  "index": 3716
                },
                "end": {
                  "line": 110,
                  "column": 19,
                  "index": 3732
                },
                "identifierName": "WrapperComponent"
              },
              "actionsMethods": [],
              "usedActionsDependencies": [],
              "nodeLoc": {
                "start": {
                  "line": 21,
                  "column": 7,
                  "index": 742
                },
                "end": {
                  "line": 21,
                  "column": 23,
                  "index": 758
                },
                "identifierName": "WrapperComponent"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["modalActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/middlewares/SystemUpdate.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "WrapperComponent",
              "loc": {
                "start": {
                  "line": 61,
                  "column": 3,
                  "index": 1573
                },
                "end": {
                  "line": 61,
                  "column": 19,
                  "index": 1589
                },
                "identifierName": "WrapperComponent"
              },
              "actionsMethods": [
                {
                  "name": "push"
                }
              ],
              "usedActionsDependencies": [
                {
                  "isNamespace": false,
                  "localName": "push",
                  "importedName": "push",
                  "sourceValue": "react-router-redux",
                  "dependencyPath": "react-router-redux"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 12,
                  "column": 7,
                  "index": 454
                },
                "end": {
                  "line": 12,
                  "column": 23,
                  "index": 470
                },
                "identifierName": "WrapperComponent"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {
            "push": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/QueryRateChartForm/index.jsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "swapActions",
              "sourceValue": "actions/fundSwap",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fundSwap.ts",
              "exportNames": [
                "setTradeStep",
                "getRateRequested",
                "getRateSucceed",
                "getRateFailed",
                "hideGetRateError",
                "rateReset",
                "tradeRequested",
                "tradeSucceed",
                "tradeFailed",
                "resetTrade",
                "hideTradeFailed",
                "tradeListRequested",
                "tradeListSucceed",
                "tradeListFailed",
                "hideTradeListFailed",
                "updateStatus",
                "setSeconds",
                "stopSeconds",
                "getBalance",
                "getBalanceSucceed",
                "getBalanceFailed",
                "resetBalance",
                "getFxDetail",
                "getFxDetailSucceed",
                "getFxDetailFailed",
                "spotfxMeta",
                "spotfxMetaSucceed",
                "spotfxMetaFailed",
                "resetSpotFxMeta",
                "changeExchangeWay",
                "entrustRequested",
                "entrustSucceed",
                "entrustFailed",
                "hideEntrustError",
                "resetEntrust",
                "entrustRateRequested",
                "entrustRateSucceed",
                "entrustRateFailed",
                "hideEntrustRateError",
                "resetEntrustRate",
                "billExportDownloadRequested",
                "billExportDownloadSucceed",
                "billExportDownloadFailed",
                "toggleBillExportDownloadModal",
                "resetBillExportDownload",
                "enterAccountRequested",
                "enterAccountSucceed",
                "enterAccountFailed",
                "cancelEntrustRequested",
                "cancelEntrustSucceed",
                "cancelEntrustFailed",
                "hideCancelEntrustError",
                "resetCancelEntrust",
                "toggleCancelEntrustPwdModal",
                "tradeMoreListRequested",
                "tradeMoreListSucceed",
                "tradeMoreListFailed",
                "clearMore",
                "queryExchangeArrivalRequested",
                "queryExchangeArrivalSucceed",
                "queryExchangeArrivalFailed",
                "initExchangeArrival",
                "spotBuyRateRequested",
                "spotBuyRateSucceed",
                "spotBuyRateFailed",
                "spotApplyRequested",
                "spotApplySucceed",
                "spotApplyFailed",
                "spotResultRequested",
                "spotResultSucceed",
                "spotResultFailed",
                "spotResultInit"
              ]
            },
            {
              "isNamespace": false,
              "localName": "change",
              "importedName": "change",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 63,
                  "column": 58,
                  "index": 1521
                },
                "end": {
                  "line": 165,
                  "column": 1,
                  "index": 4802
                }
              },
              "actionsMethods": [
                {
                  "name": "change"
                },
                {
                  "name": "spotfxMeta",
                  "usage": "SWAP_META_LOCATION.HOME"
                }
              ],
              "usedActionsDependencies": [
                {
                  "isNamespace": false,
                  "localName": "change",
                  "importedName": "change",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                },
                {
                  "localName": "spotfxMeta",
                  "importedName": "spotfxMeta",
                  "sourceValue": "actions/fundSwap",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fundSwap.ts",
                  "usage": "SWAP_META_LOCATION.HOME"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 63,
                  "column": 58,
                  "index": 1521
                },
                "end": {
                  "line": 165,
                  "column": 1,
                  "index": 4802
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["swapActions"],
          "objectPropertyMap": {
            "change": "change"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Settings/BasicSet/AnnuallyCheck/StatusBar/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "tipActions",
              "sourceValue": "actions/tip",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/tip.ts",
              "exportNames": [
                "tipRequested",
                "tipSucceed",
                "tipFailed",
                "resetTip",
                "setCurrentTipIndex",
                "resetCurrentTipIndex",
                "setPanelState",
                "delTip",
                "delTipSucceed",
                "createTips",
                "closeTip",
                "closeTipSucceed",
                "toggleDeclareOrderTimeOutRangeTip"
              ]
            },
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 37,
                  "column": 76,
                  "index": 946
                },
                "end": {
                  "line": 104,
                  "column": 1,
                  "index": 2868
                }
              },
              "actionsMethods": [
                {
                  "name": "closeTip"
                },
                {
                  "name": "push"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "closeTip",
                  "importedName": "closeTip",
                  "sourceValue": "actions/tip",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/tip.ts"
                },
                {
                  "isNamespace": false,
                  "localName": "push",
                  "importedName": "push",
                  "sourceValue": "react-router-redux",
                  "dependencyPath": "react-router-redux"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 37,
                  "column": 76,
                  "index": 946
                },
                "end": {
                  "line": 104,
                  "column": 1,
                  "index": 2868
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["tipActions"],
          "objectPropertyMap": {
            "push": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/middlewares/Limit.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsParamName": "action",
          "actionsDependencies": [],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "ModifyedComponent",
              "loc": {
                "start": {
                  "line": 53,
                  "column": 54,
                  "index": 1402
                },
                "end": {
                  "line": 53,
                  "column": 71,
                  "index": 1419
                },
                "identifierName": "ModifyedComponent"
              },
              "actionsMethods": [],
              "usedActionsDependencies": [],
              "nodeLoc": {
                "start": {
                  "line": 21,
                  "column": 8,
                  "index": 562
                },
                "end": {
                  "line": 21,
                  "column": 25,
                  "index": 579
                },
                "identifierName": "ModifyedComponent"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["action"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Withdrawal/WithdrawalTable/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "actions",
              "sourceValue": "actions/withdrawals",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts",
              "exportNames": [
                "accountListRequested",
                "accountListSucceed",
                "accountListFailed",
                "hideAccountListError",
                "deleteItemRequested",
                "deleteItemSucceed",
                "deleteItemFailed",
                "swithDeleteItemModal",
                "setDeleteItemId",
                "setDeleteItemType",
                "hideDeleteItemError",
                "historyDetailRequested",
                "historyDetailSucceed",
                "historyDetailFailed",
                "hideHistoryDetailError",
                "createAccountRequested",
                "createAccountSucceed",
                "createAccountFailed",
                "setCreateAccountStep",
                "resetCreateAccount",
                "hideCreateAccountError",
                "withdrawFXAddRequested",
                "withdrawFXAddSucceed",
                "withdrawFXAddFailed",
                "hideWithdrawFXAddError",
                "setWithdrawFXAddStep",
                "resetWithdrawFXAdd",
                "withdrawFXAddVerifyRequested",
                "withdrawFXAddVerifySucceed",
                "withdrawFXAddVerifyFailed",
                "queryBanks",
                "queryBanksSucceed",
                "queryBanksFailed",
                "queryProvinces",
                "queryProvincesSucceed",
                "queryProvincesFailed",
                "getLegalProfile",
                "getLegalProfileSucceed",
                "getLegalProfileFailed",
                "createTransferAccountRequested",
                "createTransferAccountSucceed",
                "createTransferAccountFailed",
                "hideCreateTransferAccountError",
                "setCreateTransferAccountStep",
                "resetCreateTransferAccount",
                "setBeneficiaryNameError",
                "getBeneficiayAccountNoRequested",
                "getBeneficiayAccountNoSucceed",
                "getBeneficiayAccountNoFailed",
                "resetBeneficiayAccountNo",
                "getAccountLimitRequested",
                "getAccountLimitSucceed",
                "getAccountLimitFailed",
                "bindAccountPhoneNoRequested",
                "bindAccountPhoneNoSucceed",
                "bindAccountPhoneNoFailed",
                "bindAccountPhoneNoVerifyFailed",
                "swithBindPhoneNoModal",
                "getBeneficiayPhoneNoRequested",
                "getBeneficiayPhoneNoSucceed",
                "getBeneficiayPhoneNoFailed",
                "resetBeneficiayPhoneNo",
                "getFXPrivateAgreementRequested",
                "getFXPrivateAgreementSucceed",
                "getFXPrivateAgreementFailed",
                "getFXPublicAgreementRequested",
                "getFXPublicAgreementSucceed",
                "getFXPublicAgreementFailed",
                "getTransferPublicAgreementRequested",
                "getTransferPublicAgreementSucceed",
                "getTransferPublicAgreementFailed",
                "getWithdrawNormalAgreementRequested",
                "getWithdrawNormalAgreementSucceed",
                "getWithdrawNormalAgreementFailed"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 81,
                  "column": 55,
                  "index": 1919
                },
                "end": {
                  "line": 219,
                  "column": 1,
                  "index": 6867
                }
              },
              "actionsMethods": [
                {
                  "name": "getBeneficiayAccountNoRequested"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "getBeneficiayAccountNoRequested",
                  "importedName": "getBeneficiayAccountNoRequested",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 81,
                  "column": 55,
                  "index": 1919
                },
                "end": {
                  "line": 219,
                  "column": 1,
                  "index": 6867
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["actions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/middlewares/BindAcctUpperLimit.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "metaAction",
              "sourceValue": "actions/meta",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
              "exportNames": [
                "fetchMetaRequested",
                "fetchMetaSucceed",
                "fetchMetaFailed",
                "resetFetchMeta",
                "hideFetchMetaError"
              ]
            },
            {
              "isNamespace": true,
              "localName": "withdrawalsAction",
              "sourceValue": "actions/withdrawals",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts",
              "exportNames": [
                "accountListRequested",
                "accountListSucceed",
                "accountListFailed",
                "hideAccountListError",
                "deleteItemRequested",
                "deleteItemSucceed",
                "deleteItemFailed",
                "swithDeleteItemModal",
                "setDeleteItemId",
                "setDeleteItemType",
                "hideDeleteItemError",
                "historyDetailRequested",
                "historyDetailSucceed",
                "historyDetailFailed",
                "hideHistoryDetailError",
                "createAccountRequested",
                "createAccountSucceed",
                "createAccountFailed",
                "setCreateAccountStep",
                "resetCreateAccount",
                "hideCreateAccountError",
                "withdrawFXAddRequested",
                "withdrawFXAddSucceed",
                "withdrawFXAddFailed",
                "hideWithdrawFXAddError",
                "setWithdrawFXAddStep",
                "resetWithdrawFXAdd",
                "withdrawFXAddVerifyRequested",
                "withdrawFXAddVerifySucceed",
                "withdrawFXAddVerifyFailed",
                "queryBanks",
                "queryBanksSucceed",
                "queryBanksFailed",
                "queryProvinces",
                "queryProvincesSucceed",
                "queryProvincesFailed",
                "getLegalProfile",
                "getLegalProfileSucceed",
                "getLegalProfileFailed",
                "createTransferAccountRequested",
                "createTransferAccountSucceed",
                "createTransferAccountFailed",
                "hideCreateTransferAccountError",
                "setCreateTransferAccountStep",
                "resetCreateTransferAccount",
                "setBeneficiaryNameError",
                "getBeneficiayAccountNoRequested",
                "getBeneficiayAccountNoSucceed",
                "getBeneficiayAccountNoFailed",
                "resetBeneficiayAccountNo",
                "getAccountLimitRequested",
                "getAccountLimitSucceed",
                "getAccountLimitFailed",
                "bindAccountPhoneNoRequested",
                "bindAccountPhoneNoSucceed",
                "bindAccountPhoneNoFailed",
                "bindAccountPhoneNoVerifyFailed",
                "swithBindPhoneNoModal",
                "getBeneficiayPhoneNoRequested",
                "getBeneficiayPhoneNoSucceed",
                "getBeneficiayPhoneNoFailed",
                "resetBeneficiayPhoneNo",
                "getFXPrivateAgreementRequested",
                "getFXPrivateAgreementSucceed",
                "getFXPrivateAgreementFailed",
                "getFXPublicAgreementRequested",
                "getFXPublicAgreementSucceed",
                "getFXPublicAgreementFailed",
                "getTransferPublicAgreementRequested",
                "getTransferPublicAgreementSucceed",
                "getTransferPublicAgreementFailed",
                "getWithdrawNormalAgreementRequested",
                "getWithdrawNormalAgreementSucceed",
                "getWithdrawNormalAgreementFailed"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "WrapperComponent",
              "loc": {
                "start": {
                  "line": 120,
                  "column": 3,
                  "index": 4037
                },
                "end": {
                  "line": 120,
                  "column": 19,
                  "index": 4053
                },
                "identifierName": "WrapperComponent"
              },
              "actionsMethods": [
                {
                  "name": "accountListRequested"
                },
                {
                  "name": "fetchMetaRequested",
                  "usage": "EMMetaUsages.BindCardLimitInfo"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "accountListRequested",
                  "importedName": "accountListRequested",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts"
                },
                {
                  "localName": "fetchMetaRequested",
                  "importedName": "fetchMetaRequested",
                  "sourceValue": "actions/meta",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
                  "usage": "EMMetaUsages.BindCardLimitInfo"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 23,
                  "column": 7,
                  "index": 759
                },
                "end": {
                  "line": 23,
                  "column": 23,
                  "index": 775
                },
                "identifierName": "WrapperComponent"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["metaAction", "withdrawalsAction"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/middlewares/BenefitPkgInfo.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "metaActions",
              "sourceValue": "actions/meta",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
              "exportNames": [
                "fetchMetaRequested",
                "fetchMetaSucceed",
                "fetchMetaFailed",
                "resetFetchMeta",
                "hideFetchMetaError"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "ModifyedComponent",
              "loc": {
                "start": {
                  "line": 66,
                  "column": 53,
                  "index": 1922
                },
                "end": {
                  "line": 66,
                  "column": 70,
                  "index": 1939
                },
                "identifierName": "ModifyedComponent"
              },
              "actionsMethods": [],
              "usedActionsDependencies": [],
              "nodeLoc": {
                "start": {
                  "line": 26,
                  "column": 8,
                  "index": 790
                },
                "end": {
                  "line": 26,
                  "column": 25,
                  "index": 807
                },
                "identifierName": "ModifyedComponent"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["metaActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/AssignStaffForm/index.jsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "actions",
              "sourceValue": "actions/staff",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/staff.ts",
              "exportNames": [
                "staffSuffixRequested",
                "staffSuffixSucceed",
                "staffSuffixFailed",
                "toggleStaffSuffixModal",
                "hideStaffSuffixError",
                "modifyStaffSuffixRequested",
                "modifyStaffSuffixSucceed",
                "modifyStaffSuffixFailed",
                "toggleModifyStaffSuffixModal",
                "resetModifyStaffSuffix",
                "addStaffRequested",
                "addStaffSucceed",
                "addStaffFailed",
                "setAddStaffStep",
                "hideAddStaffError",
                "setAddStaffAccount",
                "resetAddStaff",
                "staffListRequested",
                "staffListSucceed",
                "staffListFailed",
                "setStaffListStatus",
                "resetStaffList",
                "oneStaffInfoRequested",
                "oneStaffInfoSucceed",
                "oneStaffInfoFailed",
                "updateOneStaffRequested",
                "updateOneStaffSucceed",
                "updateOneStaffFailed",
                "hideUpdateOneStaffError",
                "resetUpdateOneStaff",
                "delOneStaffRequested",
                "delOneStaffSucceed",
                "delOneStaffFailed",
                "hideDelOneStaffError",
                "toggleDelOneStaffModal",
                "resetStaffPwRequested",
                "resetStaffPwSucceed",
                "resetStaffPwFailed",
                "genResetStaffPassword",
                "toggleResetStaffPwModal",
                "resetResetStaffPw",
                "assignStaffDepositRequested",
                "assignStaffDepositSucceed",
                "assignStaffDepositFailed",
                "toggleAssignStaffDepositModal",
                "setDepositIdsWaitAssign",
                "addDepositIdsWaitAssign",
                "removeDepositIdsWaitAssign",
                "resetDepositIdsWaitAssign",
                "resetAssignStaffDeposit"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 43,
                  "column": 61,
                  "index": 827
                },
                "end": {
                  "line": 95,
                  "column": 1,
                  "index": 1908
                }
              },
              "actionsMethods": [],
              "usedActionsDependencies": [],
              "nodeLoc": {
                "start": {
                  "line": 43,
                  "column": 61,
                  "index": 827
                },
                "end": {
                  "line": 95,
                  "column": 1,
                  "index": 1908
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["actions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/EarnListDownloadQueryForm/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "earnExchangeActions",
              "sourceValue": "actions/earnExchange",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/earnExchange.ts",
              "exportNames": [
                "earnExchangeListRequested",
                "earnExchangeListSucceed",
                "earnExchangeListFailed",
                "hideEarnExchangeListError",
                "setQueryEarnExchangeListType",
                "viewRelatedOrderListRequested",
                "viewRelatedOrderListSucceed",
                "viewRelatedOrderListFailed",
                "hideViewRelatedOrderListError",
                "queryReceiveMoneyOrderListRequested",
                "queryReceiveMoneyOrderListSucceed",
                "queryReceiveMoneyOrderListFailed",
                "hideQueryReceiveMoneyOrderListError",
                "queryReceiveMoneyOrderDetailRequested",
                "queryReceiveMoneyOrderDetailSucceed",
                "queryReceiveMoneyOrderDetailFailed",
                "hideQueryReceiveMoneyOrderDetailError",
                "resetRelateDetail",
                "setHasUpdateOrder",
                "resetSetHasUpdateOrder",
                "switchRelatedOrderModal",
                "earnListDownloadRequested",
                "earnListDownloadSucceed",
                "earnListDownloadFailed",
                "toggleEarnListDownloadModal",
                "resetEarnListDownload",
                "cancelRelateRequested",
                "cancelRelateSucceed",
                "cancelRelateFailed",
                "resetCancelRelate",
                "setCancelRelateModal"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 55,
                  "column": 65,
                  "index": 1555
                },
                "end": {
                  "line": 184,
                  "column": 1,
                  "index": 5818
                }
              },
              "actionsMethods": [
                {
                  "name": "earnListDownloadRequested"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "earnListDownloadRequested",
                  "importedName": "earnListDownloadRequested",
                  "sourceValue": "actions/earnExchange",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/earnExchange.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 55,
                  "column": 65,
                  "index": 1555
                },
                "end": {
                  "line": 184,
                  "column": 1,
                  "index": 5818
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["earnExchangeActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/EarnListQueryForm/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "earnExchangeActions",
              "sourceValue": "actions/earnExchange",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/earnExchange.ts",
              "exportNames": [
                "earnExchangeListRequested",
                "earnExchangeListSucceed",
                "earnExchangeListFailed",
                "hideEarnExchangeListError",
                "setQueryEarnExchangeListType",
                "viewRelatedOrderListRequested",
                "viewRelatedOrderListSucceed",
                "viewRelatedOrderListFailed",
                "hideViewRelatedOrderListError",
                "queryReceiveMoneyOrderListRequested",
                "queryReceiveMoneyOrderListSucceed",
                "queryReceiveMoneyOrderListFailed",
                "hideQueryReceiveMoneyOrderListError",
                "queryReceiveMoneyOrderDetailRequested",
                "queryReceiveMoneyOrderDetailSucceed",
                "queryReceiveMoneyOrderDetailFailed",
                "hideQueryReceiveMoneyOrderDetailError",
                "resetRelateDetail",
                "setHasUpdateOrder",
                "resetSetHasUpdateOrder",
                "switchRelatedOrderModal",
                "earnListDownloadRequested",
                "earnListDownloadSucceed",
                "earnListDownloadFailed",
                "toggleEarnListDownloadModal",
                "resetEarnListDownload",
                "cancelRelateRequested",
                "cancelRelateSucceed",
                "cancelRelateFailed",
                "resetCancelRelate",
                "setCancelRelateModal"
              ]
            },
            {
              "isNamespace": true,
              "localName": "collectionActions",
              "sourceValue": "actions/collection",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/collection.ts",
              "exportNames": [
                "collectionListRequested",
                "collectionListSucceed",
                "collectionListFailed",
                "hideCollectionListError",
                "addCollectionRequested",
                "addCollectionSucceed",
                "addCollectionFailed",
                "resetAddCollection",
                "hideAddCollectionError",
                "reAddCollectionRequested",
                "oneCollectionRequested",
                "oneCollectionSucceed",
                "oneCollectionFailed",
                "hideOneCollectionError",
                "allServerProviderRequested",
                "allServerProviderSucceed",
                "allServerProviderFailed",
                "hideAllServerProviderError",
                "changeVaStatusRequested",
                "changeVaStatusSucceed",
                "changeVaStatusFailed",
                "toggleSleepModal",
                "depositLimitRequested",
                "depositLimitSucceed",
                "depositLimitFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "tipActions",
              "sourceValue": "actions/tip",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/tip.ts",
              "exportNames": [
                "tipRequested",
                "tipSucceed",
                "tipFailed",
                "resetTip",
                "setCurrentTipIndex",
                "resetCurrentTipIndex",
                "setPanelState",
                "delTip",
                "delTipSucceed",
                "createTips",
                "closeTip",
                "closeTipSucceed",
                "toggleDeclareOrderTimeOutRangeTip"
              ]
            },
            {
              "isNamespace": true,
              "localName": "formActions",
              "sourceValue": "actions/form",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/form.ts"
            },
            {
              "isNamespace": true,
              "localName": "metaActions",
              "sourceValue": "actions/meta",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
              "exportNames": [
                "fetchMetaRequested",
                "fetchMetaSucceed",
                "fetchMetaFailed",
                "resetFetchMeta",
                "hideFetchMetaError"
              ]
            },
            {
              "isNamespace": false,
              "localName": "change",
              "importedName": "change",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "getWhiteListRequested",
              "importedName": "getWhiteListRequested",
              "sourceValue": "actions/user",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 65,
                  "column": 57,
                  "index": 2267
                },
                "end": {
                  "line": 365,
                  "column": 1,
                  "index": 11190
                }
              },
              "actionsMethods": [
                {
                  "name": "toggleEarnListDownloadModal"
                },
                {
                  "name": "cusFormChange"
                },
                {
                  "name": "fetchMetaRequested",
                  "usage": "EMMetaUsages.VaOptionList"
                },
                {
                  "name": "resetTip",
                  "usageVariable": "DEPOSIT_RECEIPT_PAYERNAME_USAGE"
                },
                {
                  "name": "setPanelState",
                  "usageVariable": "DEPOSIT_RECEIPT_PAYERNAME_USAGE"
                },
                {
                  "name": "queryReceiveMoneyOrderListRequested"
                },
                {
                  "name": "earnExchangeListRequested"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "toggleEarnListDownloadModal",
                  "importedName": "toggleEarnListDownloadModal",
                  "sourceValue": "actions/earnExchange",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/earnExchange.ts"
                },
                {
                  "localName": "fetchMetaRequested",
                  "importedName": "fetchMetaRequested",
                  "sourceValue": "actions/meta",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
                  "usage": "EMMetaUsages.VaOptionList"
                },
                {
                  "localName": "resetTip",
                  "importedName": "resetTip",
                  "sourceValue": "actions/tip",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/tip.ts",
                  "usageVariable": "DEPOSIT_RECEIPT_PAYERNAME_USAGE"
                },
                {
                  "localName": "setPanelState",
                  "importedName": "setPanelState",
                  "sourceValue": "actions/tip",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/tip.ts",
                  "usageVariable": "DEPOSIT_RECEIPT_PAYERNAME_USAGE"
                },
                {
                  "localName": "queryReceiveMoneyOrderListRequested",
                  "importedName": "queryReceiveMoneyOrderListRequested",
                  "sourceValue": "actions/earnExchange",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/earnExchange.ts"
                },
                {
                  "localName": "earnExchangeListRequested",
                  "importedName": "earnExchangeListRequested",
                  "sourceValue": "actions/earnExchange",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/earnExchange.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 65,
                  "column": 57,
                  "index": 2267
                },
                "end": {
                  "line": 365,
                  "column": 1,
                  "index": 11190
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [
            "earnExchangeActions",
            "collectionActions",
            "tipActions",
            "formActions",
            "metaActions"
          ],
          "objectPropertyMap": {
            "change": "change",
            "getWhiteListRequested": "getWhiteListRequested"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Modal/TradePasswordModal/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 38,
                  "column": 58,
                  "index": 1066
                },
                "end": {
                  "line": 99,
                  "column": 1,
                  "index": 2707
                }
              },
              "actionsMethods": [],
              "usedActionsDependencies": [],
              "nodeLoc": {
                "start": {
                  "line": 38,
                  "column": 58,
                  "index": 1066
                },
                "end": {
                  "line": 99,
                  "column": 1,
                  "index": 2707
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/PageOptions/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 18,
                  "column": 51,
                  "index": 592
                },
                "end": {
                  "line": 162,
                  "column": 1,
                  "index": 4788
                }
              },
              "actionsMethods": [],
              "usedActionsDependencies": [],
              "nodeLoc": {
                "start": {
                  "line": 18,
                  "column": 51,
                  "index": 592
                },
                "end": {
                  "line": 162,
                  "column": 1,
                  "index": 4788
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Refund/RefundTT/StepOne/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 36,
                  "column": 55,
                  "index": 1091
                },
                "end": {
                  "line": 149,
                  "column": 1,
                  "index": 4199
                }
              },
              "actionsMethods": [],
              "usedActionsDependencies": [],
              "nodeLoc": {
                "start": {
                  "line": 36,
                  "column": 55,
                  "index": 1091
                },
                "end": {
                  "line": 149,
                  "column": 1,
                  "index": 4199
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Refund/RefundTT/StepThree/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "annexAction",
              "sourceValue": "actions/annex",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/annex.ts",
              "exportNames": [
                "uploadAnnexRequested",
                "uploadAnnexSucceed",
                "uploadAnnexFailed",
                "uploadAnnexInit",
                "previewAnnexRequested",
                "previewAnnexSucceed",
                "previewAnnexFailed",
                "previewAnnexInit",
                "deleteAnnex"
              ]
            },
            {
              "isNamespace": true,
              "localName": "refundAction",
              "sourceValue": "actions/refund",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/refund.ts",
              "exportNames": [
                "setRefundExchangeModal",
                "refundExchangeRequested",
                "refundExchangeSucceed",
                "refundExchangeFailed",
                "refundExchangeInit",
                "exchangeRateRequested",
                "exchangeRateSucceed",
                "exchangeRateFailed",
                "exchangeRateInit",
                "refundApplyRequested",
                "refundApplySucceed",
                "refundApplyFailed",
                "refundApplyInit",
                "setRefundStep",
                "setFxRequestId",
                "refundExchangeAvailableRequested",
                "refundExchangeAvailableSucceed",
                "refundExchangeAvailableFailed",
                "checkFieldRequested",
                "checkSwiftCodeRequested",
                "checkFieldSucceed",
                "checkFieldFailed",
                "refundReasonRequested",
                "refundReasonSucceed",
                "refundReasonFailed",
                "refundLocCreateRequested",
                "refundLocCreateSucceed",
                "refundLocCreateFailed",
                "beneficiaryMsgRequested",
                "beneficiaryMsgSucceed",
                "beneficiaryMsgFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "submitAction",
              "sourceValue": "actions/submit",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/submit.ts",
              "exportNames": [
                "submitRequested",
                "submitSucceed",
                "submitFailed",
                "resetSubmit"
              ]
            },
            {
              "isNamespace": true,
              "localName": "metaActions",
              "sourceValue": "actions/meta",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
              "exportNames": [
                "fetchMetaRequested",
                "fetchMetaSucceed",
                "fetchMetaFailed",
                "resetFetchMeta",
                "hideFetchMetaError"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 98,
                  "column": 42,
                  "index": 3296
                },
                "end": {
                  "line": 475,
                  "column": 1,
                  "index": 16010
                }
              },
              "actionsMethods": [
                {
                  "name": "setRefundStep",
                  "usage": "TT"
                },
                {
                  "name": "refundApplyInit",
                  "usage": "TT"
                },
                {
                  "name": "refundLocCreateRequested",
                  "usage": "TT"
                },
                {
                  "name": "refundApplyRequested",
                  "usage": "TT"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "setRefundStep",
                  "importedName": "setRefundStep",
                  "sourceValue": "actions/refund",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/refund.ts",
                  "usage": "TT"
                },
                {
                  "localName": "refundApplyInit",
                  "importedName": "refundApplyInit",
                  "sourceValue": "actions/refund",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/refund.ts",
                  "usage": "TT"
                },
                {
                  "localName": "refundLocCreateRequested",
                  "importedName": "refundLocCreateRequested",
                  "sourceValue": "actions/refund",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/refund.ts",
                  "usage": "TT"
                },
                {
                  "localName": "refundApplyRequested",
                  "importedName": "refundApplyRequested",
                  "sourceValue": "actions/refund",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/refund.ts",
                  "usage": "TT"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 98,
                  "column": 42,
                  "index": 3296
                },
                "end": {
                  "line": 475,
                  "column": 1,
                  "index": 16010
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [
            "annexAction",
            "refundAction",
            "submitAction",
            "metaActions"
          ],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Refund/RefundTT/StepTwo/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "refundAction",
              "sourceValue": "actions/refund",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/refund.ts",
              "exportNames": [
                "setRefundExchangeModal",
                "refundExchangeRequested",
                "refundExchangeSucceed",
                "refundExchangeFailed",
                "refundExchangeInit",
                "exchangeRateRequested",
                "exchangeRateSucceed",
                "exchangeRateFailed",
                "exchangeRateInit",
                "refundApplyRequested",
                "refundApplySucceed",
                "refundApplyFailed",
                "refundApplyInit",
                "setRefundStep",
                "setFxRequestId",
                "refundExchangeAvailableRequested",
                "refundExchangeAvailableSucceed",
                "refundExchangeAvailableFailed",
                "checkFieldRequested",
                "checkSwiftCodeRequested",
                "checkFieldSucceed",
                "checkFieldFailed",
                "refundReasonRequested",
                "refundReasonSucceed",
                "refundReasonFailed",
                "refundLocCreateRequested",
                "refundLocCreateSucceed",
                "refundLocCreateFailed",
                "beneficiaryMsgRequested",
                "beneficiaryMsgSucceed",
                "beneficiaryMsgFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "annexAction",
              "sourceValue": "actions/annex",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/annex.ts",
              "exportNames": [
                "uploadAnnexRequested",
                "uploadAnnexSucceed",
                "uploadAnnexFailed",
                "uploadAnnexInit",
                "previewAnnexRequested",
                "previewAnnexSucceed",
                "previewAnnexFailed",
                "previewAnnexInit",
                "deleteAnnex"
              ]
            },
            {
              "isNamespace": true,
              "localName": "statusActions",
              "sourceValue": "actions/status",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/status.ts",
              "exportNames": ["toggleEntityStatus"]
            },
            {
              "isNamespace": true,
              "localName": "utilAction",
              "sourceValue": "actions/util",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/util.ts",
              "exportNames": [
                "pubKeyRequested",
                "pubKeySucceed",
                "pubKeyFailed",
                "toggleOrderAnnexUpload",
                "setIsMobile",
                "getFirmStatusRequested",
                "getFirmStatusSucceed",
                "getFirmStatusFailed",
                "setPreviewPageId",
                "setCountrys",
                "setProvinces",
                "setLoadAddress",
                "getLocationRequested",
                "getLocationSucceed",
                "getLocationFailed",
                "touchAndChangeAddressFields",
                "resetAddressFieldsThenSetCountry"
              ]
            },
            {
              "isNamespace": false,
              "localName": "initialize",
              "importedName": "initialize",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "change",
              "importedName": "change",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            },
            {
              "isNamespace": false,
              "localName": "goBack",
              "importedName": "goBack",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 128,
                  "column": 55,
                  "index": 4874
                },
                "end": {
                  "line": 539,
                  "column": 1,
                  "index": 17441
                }
              },
              "actionsMethods": [
                {
                  "name": "refundReasonRequested"
                },
                {
                  "name": "setRefundStep",
                  "usage": "TT"
                },
                {
                  "name": "uploadAnnexFailed",
                  "usage": "undefined.usage"
                },
                {
                  "name": "uploadAnnexRequested",
                  "usageVariable": "usage"
                },
                {
                  "name": "deleteAnnex",
                  "usageVariable": "usage"
                },
                {
                  "name": "push"
                },
                {
                  "name": "checkFieldSucceed"
                },
                {
                  "name": "change"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "refundReasonRequested",
                  "importedName": "refundReasonRequested",
                  "sourceValue": "actions/refund",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/refund.ts"
                },
                {
                  "localName": "setRefundStep",
                  "importedName": "setRefundStep",
                  "sourceValue": "actions/refund",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/refund.ts",
                  "usage": "TT"
                },
                {
                  "localName": "uploadAnnexFailed",
                  "importedName": "uploadAnnexFailed",
                  "sourceValue": "actions/annex",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/annex.ts",
                  "usage": "undefined.usage"
                },
                {
                  "localName": "uploadAnnexRequested",
                  "importedName": "uploadAnnexRequested",
                  "sourceValue": "actions/annex",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/annex.ts",
                  "usageVariable": "usage"
                },
                {
                  "localName": "deleteAnnex",
                  "importedName": "deleteAnnex",
                  "sourceValue": "actions/annex",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/annex.ts",
                  "usageVariable": "usage"
                },
                {
                  "isNamespace": false,
                  "localName": "push",
                  "importedName": "push",
                  "sourceValue": "react-router-redux",
                  "dependencyPath": "react-router-redux"
                },
                {
                  "localName": "checkFieldSucceed",
                  "importedName": "checkFieldSucceed",
                  "sourceValue": "actions/refund",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/refund.ts"
                },
                {
                  "isNamespace": false,
                  "localName": "change",
                  "importedName": "change",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 128,
                  "column": 55,
                  "index": 4874
                },
                "end": {
                  "line": 539,
                  "column": 1,
                  "index": 17441
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [
            "refundAction",
            "annexAction",
            "statusActions",
            "utilAction"
          ],
          "objectPropertyMap": {
            "initialize": "initialize",
            "change": "change",
            "push": "push",
            "goBack": "goBack"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Refund/RefundMSG/StepOne/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "refundAction",
              "sourceValue": "actions/refund",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/refund.ts",
              "exportNames": [
                "setRefundExchangeModal",
                "refundExchangeRequested",
                "refundExchangeSucceed",
                "refundExchangeFailed",
                "refundExchangeInit",
                "exchangeRateRequested",
                "exchangeRateSucceed",
                "exchangeRateFailed",
                "exchangeRateInit",
                "refundApplyRequested",
                "refundApplySucceed",
                "refundApplyFailed",
                "refundApplyInit",
                "setRefundStep",
                "setFxRequestId",
                "refundExchangeAvailableRequested",
                "refundExchangeAvailableSucceed",
                "refundExchangeAvailableFailed",
                "checkFieldRequested",
                "checkSwiftCodeRequested",
                "checkFieldSucceed",
                "checkFieldFailed",
                "refundReasonRequested",
                "refundReasonSucceed",
                "refundReasonFailed",
                "refundLocCreateRequested",
                "refundLocCreateSucceed",
                "refundLocCreateFailed",
                "beneficiaryMsgRequested",
                "beneficiaryMsgSucceed",
                "beneficiaryMsgFailed"
              ]
            },
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            },
            {
              "isNamespace": false,
              "localName": "reset",
              "importedName": "reset",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "initialize",
              "importedName": "initialize",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 94,
                  "column": 47,
                  "index": 2555
                },
                "end": {
                  "line": 371,
                  "column": 1,
                  "index": 11297
                }
              },
              "actionsMethods": [
                {
                  "name": "reset"
                },
                {
                  "name": "refundReasonRequested"
                },
                {
                  "name": "push"
                },
                {
                  "name": "setRefundExchangeModal"
                }
              ],
              "usedActionsDependencies": [
                {
                  "isNamespace": false,
                  "localName": "reset",
                  "importedName": "reset",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                },
                {
                  "localName": "refundReasonRequested",
                  "importedName": "refundReasonRequested",
                  "sourceValue": "actions/refund",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/refund.ts"
                },
                {
                  "isNamespace": false,
                  "localName": "push",
                  "importedName": "push",
                  "sourceValue": "react-router-redux",
                  "dependencyPath": "react-router-redux"
                },
                {
                  "localName": "setRefundExchangeModal",
                  "importedName": "setRefundExchangeModal",
                  "sourceValue": "actions/refund",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/refund.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 94,
                  "column": 47,
                  "index": 2555
                },
                "end": {
                  "line": 371,
                  "column": 1,
                  "index": 11297
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["refundAction"],
          "objectPropertyMap": {
            "push": "push",
            "reset": "reset",
            "initialize": "initialize"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Refund/RefundMSG/StepTwo/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "refundAction",
              "sourceValue": "actions/refund",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/refund.ts",
              "exportNames": [
                "setRefundExchangeModal",
                "refundExchangeRequested",
                "refundExchangeSucceed",
                "refundExchangeFailed",
                "refundExchangeInit",
                "exchangeRateRequested",
                "exchangeRateSucceed",
                "exchangeRateFailed",
                "exchangeRateInit",
                "refundApplyRequested",
                "refundApplySucceed",
                "refundApplyFailed",
                "refundApplyInit",
                "setRefundStep",
                "setFxRequestId",
                "refundExchangeAvailableRequested",
                "refundExchangeAvailableSucceed",
                "refundExchangeAvailableFailed",
                "checkFieldRequested",
                "checkSwiftCodeRequested",
                "checkFieldSucceed",
                "checkFieldFailed",
                "refundReasonRequested",
                "refundReasonSucceed",
                "refundReasonFailed",
                "refundLocCreateRequested",
                "refundLocCreateSucceed",
                "refundLocCreateFailed",
                "beneficiaryMsgRequested",
                "beneficiaryMsgSucceed",
                "beneficiaryMsgFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "metaActions",
              "sourceValue": "actions/meta",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
              "exportNames": [
                "fetchMetaRequested",
                "fetchMetaSucceed",
                "fetchMetaFailed",
                "resetFetchMeta",
                "hideFetchMetaError"
              ]
            },
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 65,
                  "column": 41,
                  "index": 1854
                },
                "end": {
                  "line": 211,
                  "column": 1,
                  "index": 6130
                }
              },
              "actionsMethods": [
                {
                  "name": "setRefundStep",
                  "usage": "MSG"
                },
                {
                  "name": "refundApplyInit",
                  "usage": "MSG"
                },
                {
                  "name": "refundApplyRequested",
                  "usage": "MSG"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "setRefundStep",
                  "importedName": "setRefundStep",
                  "sourceValue": "actions/refund",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/refund.ts",
                  "usage": "MSG"
                },
                {
                  "localName": "refundApplyInit",
                  "importedName": "refundApplyInit",
                  "sourceValue": "actions/refund",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/refund.ts",
                  "usage": "MSG"
                },
                {
                  "localName": "refundApplyRequested",
                  "importedName": "refundApplyRequested",
                  "sourceValue": "actions/refund",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/refund.ts",
                  "usage": "MSG"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 65,
                  "column": 41,
                  "index": 1854
                },
                "end": {
                  "line": 211,
                  "column": 1,
                  "index": 6130
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["refundAction", "metaActions"],
          "objectPropertyMap": {
            "push": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CancelFixRateForm/index.jsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "actions",
              "sourceValue": "actions/fixRate",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fixRate.ts",
              "exportNames": [
                "getFixRateListRequested",
                "getFixRateListSucceed",
                "getFixRateListFailed",
                "hideGetFixRateListError",
                "fixRateTradeRequested",
                "fixRateTradeSucceed",
                "fixRateTradeFailed",
                "hideFixRateTradeError",
                "fixRateTradeModal",
                "resetFixRateTrade",
                "resetTrade",
                "getContractRateRequested",
                "getContractRateSucceed",
                "getContractRateFailed",
                "hideGetContractRateError",
                "updateFixRateCountDownSeconds",
                "stopFixRateCountDown",
                "resetFixRateCountDownSeconds",
                "resetRate",
                "getOneFixRateRequested",
                "getOneFixRateSucceed",
                "getOneFixRateFailed",
                "hideGetOneFixRateError",
                "setCancelItem",
                "resetCancelItem",
                "cancelOneFixRateContractRequested",
                "cancelOneFixRateContractSucceed",
                "cancelOneFixRateContractFailed",
                "hideCancelOneFixRateContractError",
                "cancelOneFixRateContractModal",
                "resetCancelOneFixRateContract",
                "getFixRateMarginFeeRequested",
                "getFixRateMarginFeeSucceed",
                "getFixRateMarginFeeFailed",
                "hideGetFixRateMarginFeeError",
                "resetMarginFee",
                "getFixRateCancelFeeRequested",
                "getFixRateCancelFeeSucceed",
                "getFixRateCancelFeeFailed",
                "hideGetFixRateCancelFeeError",
                "resetFixRateCancelFee",
                "getContractDeadlineRequested",
                "getContractDeadlineSucceed",
                "getContractDeadlineFailed",
                "hideGetContractDeadlineError",
                "resetGetContractDeadline",
                "setFixRateQueryType",
                "validFixRateOrderDateRequested",
                "validFixRateOrderDateSucceed",
                "validFixRateOrderDateFailed",
                "hideValidFixRateOrderDateError",
                "resetValidFixRateOrderDate"
              ]
            },
            {
              "isNamespace": false,
              "localName": "change",
              "importedName": "change",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 142,
                  "column": 57,
                  "index": 4447
                },
                "end": {
                  "line": 386,
                  "column": 1,
                  "index": 12335
                }
              },
              "actionsMethods": [
                {
                  "name": "resetCancelItem"
                },
                {
                  "name": "change"
                },
                {
                  "name": "getFixRateCancelFeeRequested"
                },
                {
                  "name": "resetFixRateCancelFee"
                },
                {
                  "name": "touch"
                },
                {
                  "name": "cancelOneFixRateContractRequested"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "resetCancelItem",
                  "importedName": "resetCancelItem",
                  "sourceValue": "actions/fixRate",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fixRate.ts"
                },
                {
                  "isNamespace": false,
                  "localName": "change",
                  "importedName": "change",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                },
                {
                  "localName": "getFixRateCancelFeeRequested",
                  "importedName": "getFixRateCancelFeeRequested",
                  "sourceValue": "actions/fixRate",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fixRate.ts"
                },
                {
                  "localName": "resetFixRateCancelFee",
                  "importedName": "resetFixRateCancelFee",
                  "sourceValue": "actions/fixRate",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fixRate.ts"
                },
                {
                  "localName": "cancelOneFixRateContractRequested",
                  "importedName": "cancelOneFixRateContractRequested",
                  "sourceValue": "actions/fixRate",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fixRate.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 142,
                  "column": 57,
                  "index": 4447
                },
                "end": {
                  "line": 386,
                  "column": 1,
                  "index": 12335
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["actions"],
          "objectPropertyMap": {
            "change": "change"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/FixRateListQueryForm/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "queryActions",
              "sourceValue": "actions/query",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/query.ts",
              "exportNames": [
                "setFixRateQuery",
                "setOrderListQuery",
                "setWithdrawRecordsListQuery"
              ]
            },
            {
              "isNamespace": true,
              "localName": "fixRateActions",
              "sourceValue": "actions/fixRate",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fixRate.ts",
              "exportNames": [
                "getFixRateListRequested",
                "getFixRateListSucceed",
                "getFixRateListFailed",
                "hideGetFixRateListError",
                "fixRateTradeRequested",
                "fixRateTradeSucceed",
                "fixRateTradeFailed",
                "hideFixRateTradeError",
                "fixRateTradeModal",
                "resetFixRateTrade",
                "resetTrade",
                "getContractRateRequested",
                "getContractRateSucceed",
                "getContractRateFailed",
                "hideGetContractRateError",
                "updateFixRateCountDownSeconds",
                "stopFixRateCountDown",
                "resetFixRateCountDownSeconds",
                "resetRate",
                "getOneFixRateRequested",
                "getOneFixRateSucceed",
                "getOneFixRateFailed",
                "hideGetOneFixRateError",
                "setCancelItem",
                "resetCancelItem",
                "cancelOneFixRateContractRequested",
                "cancelOneFixRateContractSucceed",
                "cancelOneFixRateContractFailed",
                "hideCancelOneFixRateContractError",
                "cancelOneFixRateContractModal",
                "resetCancelOneFixRateContract",
                "getFixRateMarginFeeRequested",
                "getFixRateMarginFeeSucceed",
                "getFixRateMarginFeeFailed",
                "hideGetFixRateMarginFeeError",
                "resetMarginFee",
                "getFixRateCancelFeeRequested",
                "getFixRateCancelFeeSucceed",
                "getFixRateCancelFeeFailed",
                "hideGetFixRateCancelFeeError",
                "resetFixRateCancelFee",
                "getContractDeadlineRequested",
                "getContractDeadlineSucceed",
                "getContractDeadlineFailed",
                "hideGetContractDeadlineError",
                "resetGetContractDeadline",
                "setFixRateQueryType",
                "validFixRateOrderDateRequested",
                "validFixRateOrderDateSucceed",
                "validFixRateOrderDateFailed",
                "hideValidFixRateOrderDateError",
                "resetValidFixRateOrderDate"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 46,
                  "column": 60,
                  "index": 1113
                },
                "end": {
                  "line": 159,
                  "column": 1,
                  "index": 4519
                }
              },
              "actionsMethods": [
                {
                  "name": "getFixRateListRequested"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "getFixRateListRequested",
                  "importedName": "getFixRateListRequested",
                  "sourceValue": "actions/fixRate",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fixRate.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 46,
                  "column": 60,
                  "index": 1113
                },
                "end": {
                  "line": 159,
                  "column": 1,
                  "index": 4519
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["queryActions", "fixRateActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/FixRateTradeStepOne/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "actions",
              "sourceValue": "actions/fixRate",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fixRate.ts",
              "exportNames": [
                "getFixRateListRequested",
                "getFixRateListSucceed",
                "getFixRateListFailed",
                "hideGetFixRateListError",
                "fixRateTradeRequested",
                "fixRateTradeSucceed",
                "fixRateTradeFailed",
                "hideFixRateTradeError",
                "fixRateTradeModal",
                "resetFixRateTrade",
                "resetTrade",
                "getContractRateRequested",
                "getContractRateSucceed",
                "getContractRateFailed",
                "hideGetContractRateError",
                "updateFixRateCountDownSeconds",
                "stopFixRateCountDown",
                "resetFixRateCountDownSeconds",
                "resetRate",
                "getOneFixRateRequested",
                "getOneFixRateSucceed",
                "getOneFixRateFailed",
                "hideGetOneFixRateError",
                "setCancelItem",
                "resetCancelItem",
                "cancelOneFixRateContractRequested",
                "cancelOneFixRateContractSucceed",
                "cancelOneFixRateContractFailed",
                "hideCancelOneFixRateContractError",
                "cancelOneFixRateContractModal",
                "resetCancelOneFixRateContract",
                "getFixRateMarginFeeRequested",
                "getFixRateMarginFeeSucceed",
                "getFixRateMarginFeeFailed",
                "hideGetFixRateMarginFeeError",
                "resetMarginFee",
                "getFixRateCancelFeeRequested",
                "getFixRateCancelFeeSucceed",
                "getFixRateCancelFeeFailed",
                "hideGetFixRateCancelFeeError",
                "resetFixRateCancelFee",
                "getContractDeadlineRequested",
                "getContractDeadlineSucceed",
                "getContractDeadlineFailed",
                "hideGetContractDeadlineError",
                "resetGetContractDeadline",
                "setFixRateQueryType",
                "validFixRateOrderDateRequested",
                "validFixRateOrderDateSucceed",
                "validFixRateOrderDateFailed",
                "hideValidFixRateOrderDateError",
                "resetValidFixRateOrderDate"
              ]
            },
            {
              "isNamespace": true,
              "localName": "userActions",
              "sourceValue": "actions/user",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts",
              "exportNames": [
                "getUserFlowId",
                "getUserFlowIdAndCaptcha",
                "getUserFlowIdSucceed",
                "getUserFlowIdFailed",
                "initUserFlowId",
                "getUserCaptcha",
                "getUserCaptchaSucceed",
                "getUserCaptchaFailed",
                "initUserCaptcha",
                "verifyMfaRequested",
                "verifyMfaSucceed",
                "verifyMfaFailed",
                "initVerifyMfa",
                "setAuthId",
                "resetAuthId",
                "executeAuthIdCallBackRequested",
                "executeAuthIdCallBackSucceed",
                "executeAuthIdCallBackFailed",
                "sendMfaMessageRequested",
                "getMfaCaptchaRequested",
                "getMfaCaptchaSucceed",
                "getMfaCaptchaFailed",
                "initMfaCaptcha",
                "getWhiteListRequested",
                "getWhiteListSucceed",
                "getWhiteListFailed",
                "getWhiteListInit",
                "setMfaJson",
                "resetMfaJson",
                "queryIndustryRequested",
                "queryIndustrySucceed",
                "queryIndustryFailed",
                "queryRestrictionList",
                "queryRestrictionListSucceed",
                "queryRestrictionListFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "meActions",
              "sourceValue": "actions/me",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/me.ts",
              "exportNames": [
                "getProfileRequested",
                "getProfileSucceed",
                "getProfileFailed",
                "setProfile",
                "accountRequested",
                "accountSucceed",
                "accountFailed",
                "hideAccountError",
                "userPowerRequested",
                "userPowerSucceed",
                "userPowerFailed",
                "getDepositTodoRequested",
                "getDepositTodoSucceed",
                "getDepositTodoFailed",
                "setXtMethod",
                "setTransferNotice",
                "reset",
                "platformRequested",
                "platformSucceed",
                "platformFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "withdrawActions",
              "sourceValue": "actions/withdraw",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts",
              "exportNames": [
                "withdrawListRequested",
                "withdrawListSucceed",
                "withdrawListFailed",
                "hideWithdrawListError",
                "resetWithdrawList",
                "changeTab",
                "switchWithdrawApplyModal",
                "setWithdrawApplyIsReserved",
                "withdrawApplyRequested",
                "withdrawApplySucceed",
                "withdrawApplyFailed",
                "hideWithdrawApplyError",
                "setStep",
                "resetWithdrawApply",
                "withdrawInitRequested",
                "withdrawInitSucceed",
                "withdrawInitFailed",
                "hideWithdrawInitError",
                "withdrawDebtRequested",
                "withdrawDebtSucceed",
                "withdrawDebtFailed",
                "hideWithdrawDebtError",
                "removeRelatedItemOrderId",
                "addRelatedItemOrderId",
                "inputChangeRelatedItemValue",
                "resetRelatedOrders",
                "changeRelatedOrderChecked",
                "resetRelatedOrderChecked",
                "swithWithdrawFXApplyModal",
                "setWithdrawFXApplyStep",
                "setWithdrawFXApplyIsReserved",
                "withdrawFXApplyRequested",
                "withdrawFXApplySucceed",
                "withdrawFXApplyFailed",
                "hideWithdrawFXApplyError",
                "resetWithdrawFXApply",
                "isWithdrawErrorPage",
                "getFXWithdrawFeeRequested",
                "getFXWithdrawFeeSucceed",
                "getFXWithdrawFeeFailed",
                "hideGetFXWithdrawFeeError",
                "resetGetFXWithdrawFee",
                "getFXCanRelatedOrderRequested",
                "getFXCanRelatedOrderSucceed",
                "getFXCanRelatedOrderFailed",
                "hideGetFXCanRelatedOrderError",
                "resetGetFXCanRelatedOrder",
                "pushFXCanRelatedOrderRequested",
                "pushFXCanRelatedOrderSucceed",
                "pushFXCanRelatedOrderFailed",
                "swithWithdrawFXReApplyModal",
                "setWithdrawFXReApplyStep",
                "withdrawFXReApplyRequested",
                "withdrawFXReApplySucceed",
                "withdrawFXReApplyFailed",
                "resetWithdrawFXReApply",
                "hideWithdrawFXReApplyError",
                "getWithdrawReApplyItemRequested",
                "getWithdrawReApplyItemSucceed",
                "getWithdrawReApplyItemFailed",
                "resetGetWithdrawReApplyItem",
                "withdrawCheckBothFrozen",
                "withdrawCheckBothFrozenSucceed",
                "withdrawCheckBothFrozenFailed",
                "getFxWithdrawHolderTypeRequested",
                "getFxWithdrawHolderTypeSucceed",
                "getFxWithdrawHolderTypeFailed",
                "withdrawDetailRequested",
                "withdrawDetailSucceed",
                "withdrawDetailFailed",
                "resetWithdrawDetail",
                "withdrawFeeRequested",
                "withdrawFeeSucceed",
                "withdrawFeeFailed",
                "queryAddMaterialInfoRequested",
                "queryAddMaterialInfoSucceed",
                "queryAddMaterialInfoFailed",
                "addMaterialCommitRequested",
                "addMaterialCommitSucceed",
                "addMaterialCommitFailed",
                "resetAddMaterialCommit",
                "cancelFxWithdrawRequested",
                "cancelFxWithdrawSucceed",
                "cancelFxWithdrawFailed",
                "resetCancelFxWithdraw",
                "setCancelFxWithdrawModal",
                "cancelWithdrawRequested",
                "cancelWithdrawSucceed",
                "cancelWithdrawFailed",
                "resetCancelWithdraw",
                "setCancelWithdrawModal",
                "cancelOnGoingTransferRequested",
                "cancelOnGoingTransferSucceed",
                "cancelOnGoingTransferFailed",
                "resetCancelOnGoingTransfer",
                "setCancelOnGoingTransferModal",
                "withdrawSupportCcys",
                "withdrawSupportCcysSucceed",
                "withdrawSupportCcysFailed",
                "transferFeeRequested",
                "transferFeeSucceed",
                "transferFeeFailed",
                "setTransferApplyStep",
                "transferApplyRequested",
                "transferApplySucceed",
                "transferApplyFailed",
                "hideTransferApplyError",
                "resetTransferApply",
                "setTransferStep",
                "queryTransferAddMaterialInfoRequested",
                "queryTransferAddMaterialInfoSucceed",
                "queryTransferAddMaterialInfoFailed",
                "transferAddMaterialCommitRequested",
                "transferAddMaterialCommitSucceed",
                "transferAddMaterialCommitFailed",
                "resetTransferAddMaterialCommit",
                "cancelTransferRequested",
                "cancelTransferSucceed",
                "cancelTransferFailed",
                "resetCancelTransfer",
                "setCancelModal",
                "addCardInfoRequested",
                "addCardInfoSucceed",
                "addCardInfoFailed",
                "querySupportBoostRequested",
                "querySupportBoostSucceed",
                "querySupportBoostFailed",
                "resetQuerySupportBoost",
                "queryCanFastWithdrawWorkRequested",
                "queryCanFastWithdrawWorkFailed",
                "queryCanFastWithdrawWorkSuccess",
                "queryACrossBorderRequested",
                "queryACrossBorderSuccess",
                "queryACrossBorderFailed",
                "getAbRequested",
                "getAbSucceed",
                "getAbFailed"
              ]
            },
            {
              "isNamespace": false,
              "localName": "change",
              "importedName": "change",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "touch",
              "importedName": "touch",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 210,
                  "column": 48,
                  "index": 5863
                },
                "end": {
                  "line": 879,
                  "column": 1,
                  "index": 28195
                }
              },
              "actionsMethods": [
                {
                  "name": "change"
                },
                {
                  "name": "withdrawDebtRequested"
                },
                {
                  "name": "getUserFlowId",
                  "usage": "EMGetUserFlowIdUsages.ForwardFxOrder"
                },
                {
                  "name": "stopFixRateCountDown"
                },
                {
                  "name": "resetRate"
                },
                {
                  "name": "resetMarginFee"
                },
                {
                  "name": "resetGetContractDeadline"
                },
                {
                  "name": "resetTrade"
                },
                {
                  "name": "touch"
                },
                {
                  "name": "fixRateTradeModal"
                },
                {
                  "name": "getContractRateRequested"
                },
                {
                  "name": "resetFixRateCountDownSeconds"
                },
                {
                  "name": "hideFixRateTradeError"
                },
                {
                  "name": "fixRateTradeSucceed"
                },
                {
                  "name": "fixRateTradeFailed"
                },
                {
                  "name": "fixRateTradeRequested"
                }
              ],
              "usedActionsDependencies": [
                {
                  "isNamespace": false,
                  "localName": "change",
                  "importedName": "change",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                },
                {
                  "localName": "withdrawDebtRequested",
                  "importedName": "withdrawDebtRequested",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "localName": "getUserFlowId",
                  "importedName": "getUserFlowId",
                  "sourceValue": "actions/user",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts",
                  "usage": "EMGetUserFlowIdUsages.ForwardFxOrder"
                },
                {
                  "localName": "stopFixRateCountDown",
                  "importedName": "stopFixRateCountDown",
                  "sourceValue": "actions/fixRate",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fixRate.ts"
                },
                {
                  "localName": "resetRate",
                  "importedName": "resetRate",
                  "sourceValue": "actions/fixRate",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fixRate.ts"
                },
                {
                  "localName": "resetMarginFee",
                  "importedName": "resetMarginFee",
                  "sourceValue": "actions/fixRate",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fixRate.ts"
                },
                {
                  "localName": "resetGetContractDeadline",
                  "importedName": "resetGetContractDeadline",
                  "sourceValue": "actions/fixRate",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fixRate.ts"
                },
                {
                  "localName": "resetTrade",
                  "importedName": "resetTrade",
                  "sourceValue": "actions/fixRate",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fixRate.ts"
                },
                {
                  "isNamespace": false,
                  "localName": "touch",
                  "importedName": "touch",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                },
                {
                  "localName": "fixRateTradeModal",
                  "importedName": "fixRateTradeModal",
                  "sourceValue": "actions/fixRate",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fixRate.ts"
                },
                {
                  "localName": "getContractRateRequested",
                  "importedName": "getContractRateRequested",
                  "sourceValue": "actions/fixRate",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fixRate.ts"
                },
                {
                  "localName": "resetFixRateCountDownSeconds",
                  "importedName": "resetFixRateCountDownSeconds",
                  "sourceValue": "actions/fixRate",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fixRate.ts"
                },
                {
                  "localName": "hideFixRateTradeError",
                  "importedName": "hideFixRateTradeError",
                  "sourceValue": "actions/fixRate",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fixRate.ts"
                },
                {
                  "localName": "fixRateTradeSucceed",
                  "importedName": "fixRateTradeSucceed",
                  "sourceValue": "actions/fixRate",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fixRate.ts"
                },
                {
                  "localName": "fixRateTradeFailed",
                  "importedName": "fixRateTradeFailed",
                  "sourceValue": "actions/fixRate",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fixRate.ts"
                },
                {
                  "localName": "fixRateTradeRequested",
                  "importedName": "fixRateTradeRequested",
                  "sourceValue": "actions/fixRate",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fixRate.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 210,
                  "column": 48,
                  "index": 5863
                },
                "end": {
                  "line": 879,
                  "column": 1,
                  "index": 28195
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [
            "actions",
            "userActions",
            "meActions",
            "withdrawActions"
          ],
          "objectPropertyMap": {
            "change": "change",
            "touch": "touch",
            "push": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Order/OrderTable/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": false,
              "localName": "fetchMetaRequested",
              "importedName": "fetchMetaRequested",
              "sourceValue": "actions/meta",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts"
            },
            {
              "isNamespace": false,
              "localName": "toggleModalStatus",
              "importedName": "toggleModalStatus",
              "sourceValue": "actions/modal",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/modal.ts"
            },
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 64,
                  "column": 87,
                  "index": 1750
                },
                "end": {
                  "line": 193,
                  "column": 1,
                  "index": 4841
                }
              },
              "actionsMethods": [
                {
                  "name": "toggleModalStatus",
                  "usage": "EMModalUsages.NeedOrderAddMaterialModal"
                },
                {
                  "name": "fetchMetaRequested",
                  "usage": "EMMetaUsages.OrderSupplementaryMaterials"
                },
                {
                  "name": "push"
                }
              ],
              "usedActionsDependencies": [
                {
                  "isNamespace": false,
                  "localName": "toggleModalStatus",
                  "importedName": "toggleModalStatus",
                  "sourceValue": "actions/modal",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/modal.ts"
                },
                {
                  "isNamespace": false,
                  "localName": "fetchMetaRequested",
                  "importedName": "fetchMetaRequested",
                  "sourceValue": "actions/meta",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts"
                },
                {
                  "isNamespace": false,
                  "localName": "push",
                  "importedName": "push",
                  "sourceValue": "react-router-redux",
                  "dependencyPath": "react-router-redux"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 64,
                  "column": 87,
                  "index": 1750
                },
                "end": {
                  "line": 193,
                  "column": 1,
                  "index": 4841
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {
            "fetchMetaRequested": "fetchMetaRequested",
            "toggleModalStatus": "toggleModalStatus",
            "push": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/WithdrawSetting/WithdrawChoose/helper.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": false,
              "localName": "reset",
              "importedName": "reset",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "change",
              "importedName": "change",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 57,
                  "column": 43,
                  "index": 1634
                },
                "end": {
                  "line": 155,
                  "column": 1,
                  "index": 4997
                }
              },
              "actionsMethods": [
                {
                  "name": "reset"
                },
                {
                  "name": "change"
                }
              ],
              "usedActionsDependencies": [
                {
                  "isNamespace": false,
                  "localName": "reset",
                  "importedName": "reset",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                },
                {
                  "isNamespace": false,
                  "localName": "change",
                  "importedName": "change",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 57,
                  "column": 43,
                  "index": 1634
                },
                "end": {
                  "line": 155,
                  "column": 1,
                  "index": 4997
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {
            "reset": "reset",
            "change": "change"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/WithdrawFXApplyForm/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "withdrawActions",
              "sourceValue": "actions/withdraw",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts",
              "exportNames": [
                "withdrawListRequested",
                "withdrawListSucceed",
                "withdrawListFailed",
                "hideWithdrawListError",
                "resetWithdrawList",
                "changeTab",
                "switchWithdrawApplyModal",
                "setWithdrawApplyIsReserved",
                "withdrawApplyRequested",
                "withdrawApplySucceed",
                "withdrawApplyFailed",
                "hideWithdrawApplyError",
                "setStep",
                "resetWithdrawApply",
                "withdrawInitRequested",
                "withdrawInitSucceed",
                "withdrawInitFailed",
                "hideWithdrawInitError",
                "withdrawDebtRequested",
                "withdrawDebtSucceed",
                "withdrawDebtFailed",
                "hideWithdrawDebtError",
                "removeRelatedItemOrderId",
                "addRelatedItemOrderId",
                "inputChangeRelatedItemValue",
                "resetRelatedOrders",
                "changeRelatedOrderChecked",
                "resetRelatedOrderChecked",
                "swithWithdrawFXApplyModal",
                "setWithdrawFXApplyStep",
                "setWithdrawFXApplyIsReserved",
                "withdrawFXApplyRequested",
                "withdrawFXApplySucceed",
                "withdrawFXApplyFailed",
                "hideWithdrawFXApplyError",
                "resetWithdrawFXApply",
                "isWithdrawErrorPage",
                "getFXWithdrawFeeRequested",
                "getFXWithdrawFeeSucceed",
                "getFXWithdrawFeeFailed",
                "hideGetFXWithdrawFeeError",
                "resetGetFXWithdrawFee",
                "getFXCanRelatedOrderRequested",
                "getFXCanRelatedOrderSucceed",
                "getFXCanRelatedOrderFailed",
                "hideGetFXCanRelatedOrderError",
                "resetGetFXCanRelatedOrder",
                "pushFXCanRelatedOrderRequested",
                "pushFXCanRelatedOrderSucceed",
                "pushFXCanRelatedOrderFailed",
                "swithWithdrawFXReApplyModal",
                "setWithdrawFXReApplyStep",
                "withdrawFXReApplyRequested",
                "withdrawFXReApplySucceed",
                "withdrawFXReApplyFailed",
                "resetWithdrawFXReApply",
                "hideWithdrawFXReApplyError",
                "getWithdrawReApplyItemRequested",
                "getWithdrawReApplyItemSucceed",
                "getWithdrawReApplyItemFailed",
                "resetGetWithdrawReApplyItem",
                "withdrawCheckBothFrozen",
                "withdrawCheckBothFrozenSucceed",
                "withdrawCheckBothFrozenFailed",
                "getFxWithdrawHolderTypeRequested",
                "getFxWithdrawHolderTypeSucceed",
                "getFxWithdrawHolderTypeFailed",
                "withdrawDetailRequested",
                "withdrawDetailSucceed",
                "withdrawDetailFailed",
                "resetWithdrawDetail",
                "withdrawFeeRequested",
                "withdrawFeeSucceed",
                "withdrawFeeFailed",
                "queryAddMaterialInfoRequested",
                "queryAddMaterialInfoSucceed",
                "queryAddMaterialInfoFailed",
                "addMaterialCommitRequested",
                "addMaterialCommitSucceed",
                "addMaterialCommitFailed",
                "resetAddMaterialCommit",
                "cancelFxWithdrawRequested",
                "cancelFxWithdrawSucceed",
                "cancelFxWithdrawFailed",
                "resetCancelFxWithdraw",
                "setCancelFxWithdrawModal",
                "cancelWithdrawRequested",
                "cancelWithdrawSucceed",
                "cancelWithdrawFailed",
                "resetCancelWithdraw",
                "setCancelWithdrawModal",
                "cancelOnGoingTransferRequested",
                "cancelOnGoingTransferSucceed",
                "cancelOnGoingTransferFailed",
                "resetCancelOnGoingTransfer",
                "setCancelOnGoingTransferModal",
                "withdrawSupportCcys",
                "withdrawSupportCcysSucceed",
                "withdrawSupportCcysFailed",
                "transferFeeRequested",
                "transferFeeSucceed",
                "transferFeeFailed",
                "setTransferApplyStep",
                "transferApplyRequested",
                "transferApplySucceed",
                "transferApplyFailed",
                "hideTransferApplyError",
                "resetTransferApply",
                "setTransferStep",
                "queryTransferAddMaterialInfoRequested",
                "queryTransferAddMaterialInfoSucceed",
                "queryTransferAddMaterialInfoFailed",
                "transferAddMaterialCommitRequested",
                "transferAddMaterialCommitSucceed",
                "transferAddMaterialCommitFailed",
                "resetTransferAddMaterialCommit",
                "cancelTransferRequested",
                "cancelTransferSucceed",
                "cancelTransferFailed",
                "resetCancelTransfer",
                "setCancelModal",
                "addCardInfoRequested",
                "addCardInfoSucceed",
                "addCardInfoFailed",
                "querySupportBoostRequested",
                "querySupportBoostSucceed",
                "querySupportBoostFailed",
                "resetQuerySupportBoost",
                "queryCanFastWithdrawWorkRequested",
                "queryCanFastWithdrawWorkFailed",
                "queryCanFastWithdrawWorkSuccess",
                "queryACrossBorderRequested",
                "queryACrossBorderSuccess",
                "queryACrossBorderFailed",
                "getAbRequested",
                "getAbSucceed",
                "getAbFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "couponActions",
              "sourceValue": "actions/coupon",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/coupon.ts",
              "exportNames": [
                "couponQueryRequested",
                "couponQuerySucceed",
                "couponQueryFailed",
                "couponQueryError"
              ]
            },
            {
              "isNamespace": true,
              "localName": "ticketActions",
              "sourceValue": "actions/ticket",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/ticket.ts",
              "exportNames": [
                "ticketListRequested",
                "ticketListSucceed",
                "ticketListFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "withdrawalsActions",
              "sourceValue": "actions/withdrawals",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts",
              "exportNames": [
                "accountListRequested",
                "accountListSucceed",
                "accountListFailed",
                "hideAccountListError",
                "deleteItemRequested",
                "deleteItemSucceed",
                "deleteItemFailed",
                "swithDeleteItemModal",
                "setDeleteItemId",
                "setDeleteItemType",
                "hideDeleteItemError",
                "historyDetailRequested",
                "historyDetailSucceed",
                "historyDetailFailed",
                "hideHistoryDetailError",
                "createAccountRequested",
                "createAccountSucceed",
                "createAccountFailed",
                "setCreateAccountStep",
                "resetCreateAccount",
                "hideCreateAccountError",
                "withdrawFXAddRequested",
                "withdrawFXAddSucceed",
                "withdrawFXAddFailed",
                "hideWithdrawFXAddError",
                "setWithdrawFXAddStep",
                "resetWithdrawFXAdd",
                "withdrawFXAddVerifyRequested",
                "withdrawFXAddVerifySucceed",
                "withdrawFXAddVerifyFailed",
                "queryBanks",
                "queryBanksSucceed",
                "queryBanksFailed",
                "queryProvinces",
                "queryProvincesSucceed",
                "queryProvincesFailed",
                "getLegalProfile",
                "getLegalProfileSucceed",
                "getLegalProfileFailed",
                "createTransferAccountRequested",
                "createTransferAccountSucceed",
                "createTransferAccountFailed",
                "hideCreateTransferAccountError",
                "setCreateTransferAccountStep",
                "resetCreateTransferAccount",
                "setBeneficiaryNameError",
                "getBeneficiayAccountNoRequested",
                "getBeneficiayAccountNoSucceed",
                "getBeneficiayAccountNoFailed",
                "resetBeneficiayAccountNo",
                "getAccountLimitRequested",
                "getAccountLimitSucceed",
                "getAccountLimitFailed",
                "bindAccountPhoneNoRequested",
                "bindAccountPhoneNoSucceed",
                "bindAccountPhoneNoFailed",
                "bindAccountPhoneNoVerifyFailed",
                "swithBindPhoneNoModal",
                "getBeneficiayPhoneNoRequested",
                "getBeneficiayPhoneNoSucceed",
                "getBeneficiayPhoneNoFailed",
                "resetBeneficiayPhoneNo",
                "getFXPrivateAgreementRequested",
                "getFXPrivateAgreementSucceed",
                "getFXPrivateAgreementFailed",
                "getFXPublicAgreementRequested",
                "getFXPublicAgreementSucceed",
                "getFXPublicAgreementFailed",
                "getTransferPublicAgreementRequested",
                "getTransferPublicAgreementSucceed",
                "getTransferPublicAgreementFailed",
                "getWithdrawNormalAgreementRequested",
                "getWithdrawNormalAgreementSucceed",
                "getWithdrawNormalAgreementFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "metaActions",
              "sourceValue": "actions/meta",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
              "exportNames": [
                "fetchMetaRequested",
                "fetchMetaSucceed",
                "fetchMetaFailed",
                "resetFetchMeta",
                "hideFetchMetaError"
              ]
            },
            {
              "isNamespace": true,
              "localName": "xptransferActions",
              "sourceValue": "actions/xpTransfer",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xpTransfer.ts",
              "exportNames": [
                "pendingSpotsRequested",
                "pendingSpotsSucceed",
                "pendingSpotsFailed",
                "supportCurrencyRequested",
                "supportCurrencySucceed",
                "supportCurrencyFailed",
                "pricingListRequested",
                "pricingListSucceed",
                "pricingListFailed",
                "innerTransferApplyRequested",
                "innerTransferApplySucceed",
                "innerTransferApplyFailed",
                "initInnerTransferApply",
                "setXPTransferApplyStep",
                "innerTransferDetailRequested",
                "innerTransferDetailSucceed",
                "innerTransferDetailFailed",
                "innerTransferListRequested",
                "innerTransferListSucceed",
                "innerTransferListFailed",
                "exportTransferRequested",
                "exportTransferSucceed",
                "exportTransferFailed",
                "setTransferModal",
                "updateApplyCheckList",
                "initApplyCheckList"
              ]
            },
            {
              "isNamespace": true,
              "localName": "submitActions",
              "sourceValue": "actions/submit",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/submit.ts",
              "exportNames": [
                "submitRequested",
                "submitSucceed",
                "submitFailed",
                "resetSubmit"
              ]
            },
            {
              "isNamespace": true,
              "localName": "fundActions",
              "sourceValue": "actions/fund",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fund.ts",
              "exportNames": [
                "getFrozenListRequested",
                "getFrozenListSucceed",
                "getFrozenListFailed",
                "initFrozenList",
                "getWithDrawSpeedFlagRequested",
                "getWithDrawSpeedFlagSucceed",
                "getWithDrawSpeedFlagFailed",
                "getWithDrawDateRequested",
                "getWithDrawDateSucceed",
                "getWithDrawDateFailed",
                "getBankCardInfoRequested",
                "getBankCardInfoSucceed",
                "getBankCardInfoFailed",
                "resetBankCardInfo"
              ]
            },
            {
              "isNamespace": false,
              "localName": "reset",
              "importedName": "reset",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            },
            {
              "isNamespace": false,
              "localName": "touch",
              "importedName": "touch",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "change",
              "importedName": "change",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "toggleModalStatus",
              "importedName": "toggleModalStatus",
              "sourceValue": "actions/modal",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/modal.ts"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 154,
                  "column": 54,
                  "index": 5860
                },
                "end": {
                  "line": 899,
                  "column": 1,
                  "index": 29323
                }
              },
              "actionsMethods": [
                {
                  "name": "push"
                },
                {
                  "name": "getLegalProfile"
                },
                {
                  "name": "toggleModalStatus",
                  "usage": "EMModalUsages.OrderAddMaterialModal"
                },
                {
                  "name": "queryCanFastWithdrawWorkRequested"
                },
                {
                  "name": "queryBanks"
                },
                {
                  "name": "resetWithdrawFXApply"
                },
                {
                  "name": "reset"
                },
                {
                  "name": "resetGetFXWithdrawFee"
                },
                {
                  "name": "resetRelatedOrders"
                },
                {
                  "name": "resetBankCardInfo"
                },
                {
                  "name": "change"
                },
                {
                  "name": "fetchMetaRequested",
                  "usage": "EMMetaUsages.SupportShipStatus"
                },
                {
                  "name": "initApplyCheckList"
                },
                {
                  "name": "touch"
                },
                {
                  "name": "setWithdrawFXApplyStep"
                },
                {
                  "name": "setWithdrawFXApplyIsReserved"
                },
                {
                  "name": "withdrawFXApplySucceed"
                },
                {
                  "name": "withdrawFXApplyFailed"
                },
                {
                  "name": "withdrawFXApplyRequested",
                  "usage": "EMGetUserFlowIdUsages.withdrawCrossBorderOrder"
                },
                {
                  "name": "swithBindPhoneNoModal"
                },
                {
                  "name": "bindAccountPhoneNoRequested"
                },
                {
                  "name": "fetchMetaRequested",
                  "usage": "EMMetaUsages.OrderSupplementaryMaterials"
                }
              ],
              "usedActionsDependencies": [
                {
                  "isNamespace": false,
                  "localName": "push",
                  "importedName": "push",
                  "sourceValue": "react-router-redux",
                  "dependencyPath": "react-router-redux"
                },
                {
                  "localName": "getLegalProfile",
                  "importedName": "getLegalProfile",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts"
                },
                {
                  "isNamespace": false,
                  "localName": "toggleModalStatus",
                  "importedName": "toggleModalStatus",
                  "sourceValue": "actions/modal",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/modal.ts"
                },
                {
                  "localName": "queryCanFastWithdrawWorkRequested",
                  "importedName": "queryCanFastWithdrawWorkRequested",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "localName": "queryBanks",
                  "importedName": "queryBanks",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts"
                },
                {
                  "localName": "resetWithdrawFXApply",
                  "importedName": "resetWithdrawFXApply",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "isNamespace": false,
                  "localName": "reset",
                  "importedName": "reset",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                },
                {
                  "localName": "resetGetFXWithdrawFee",
                  "importedName": "resetGetFXWithdrawFee",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "localName": "resetRelatedOrders",
                  "importedName": "resetRelatedOrders",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "localName": "resetBankCardInfo",
                  "importedName": "resetBankCardInfo",
                  "sourceValue": "actions/fund",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fund.ts"
                },
                {
                  "isNamespace": false,
                  "localName": "change",
                  "importedName": "change",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                },
                {
                  "localName": "fetchMetaRequested",
                  "importedName": "fetchMetaRequested",
                  "sourceValue": "actions/meta",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
                  "usage": "EMMetaUsages.SupportShipStatus"
                },
                {
                  "localName": "initApplyCheckList",
                  "importedName": "initApplyCheckList",
                  "sourceValue": "actions/xpTransfer",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xpTransfer.ts"
                },
                {
                  "isNamespace": false,
                  "localName": "touch",
                  "importedName": "touch",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                },
                {
                  "localName": "setWithdrawFXApplyStep",
                  "importedName": "setWithdrawFXApplyStep",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "localName": "setWithdrawFXApplyIsReserved",
                  "importedName": "setWithdrawFXApplyIsReserved",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "localName": "withdrawFXApplySucceed",
                  "importedName": "withdrawFXApplySucceed",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "localName": "withdrawFXApplyFailed",
                  "importedName": "withdrawFXApplyFailed",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "localName": "withdrawFXApplyRequested",
                  "importedName": "withdrawFXApplyRequested",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts",
                  "usage": "EMGetUserFlowIdUsages.withdrawCrossBorderOrder"
                },
                {
                  "localName": "swithBindPhoneNoModal",
                  "importedName": "swithBindPhoneNoModal",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts"
                },
                {
                  "localName": "bindAccountPhoneNoRequested",
                  "importedName": "bindAccountPhoneNoRequested",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts"
                },
                {
                  "localName": "fetchMetaRequested",
                  "importedName": "fetchMetaRequested",
                  "sourceValue": "actions/meta",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
                  "usage": "EMMetaUsages.OrderSupplementaryMaterials"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 154,
                  "column": 54,
                  "index": 5860
                },
                "end": {
                  "line": 899,
                  "column": 1,
                  "index": 29323
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [
            "withdrawActions",
            "couponActions",
            "ticketActions",
            "withdrawalsActions",
            "metaActions",
            "xptransferActions",
            "submitActions",
            "fundActions"
          ],
          "objectPropertyMap": {
            "reset": "reset",
            "push": "push",
            "touch": "touch",
            "change": "change",
            "toggleModalStatus": "toggleModalStatus"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/WithdrawFXReApplyForm/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "withdrawActions",
              "sourceValue": "actions/withdraw",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts",
              "exportNames": [
                "withdrawListRequested",
                "withdrawListSucceed",
                "withdrawListFailed",
                "hideWithdrawListError",
                "resetWithdrawList",
                "changeTab",
                "switchWithdrawApplyModal",
                "setWithdrawApplyIsReserved",
                "withdrawApplyRequested",
                "withdrawApplySucceed",
                "withdrawApplyFailed",
                "hideWithdrawApplyError",
                "setStep",
                "resetWithdrawApply",
                "withdrawInitRequested",
                "withdrawInitSucceed",
                "withdrawInitFailed",
                "hideWithdrawInitError",
                "withdrawDebtRequested",
                "withdrawDebtSucceed",
                "withdrawDebtFailed",
                "hideWithdrawDebtError",
                "removeRelatedItemOrderId",
                "addRelatedItemOrderId",
                "inputChangeRelatedItemValue",
                "resetRelatedOrders",
                "changeRelatedOrderChecked",
                "resetRelatedOrderChecked",
                "swithWithdrawFXApplyModal",
                "setWithdrawFXApplyStep",
                "setWithdrawFXApplyIsReserved",
                "withdrawFXApplyRequested",
                "withdrawFXApplySucceed",
                "withdrawFXApplyFailed",
                "hideWithdrawFXApplyError",
                "resetWithdrawFXApply",
                "isWithdrawErrorPage",
                "getFXWithdrawFeeRequested",
                "getFXWithdrawFeeSucceed",
                "getFXWithdrawFeeFailed",
                "hideGetFXWithdrawFeeError",
                "resetGetFXWithdrawFee",
                "getFXCanRelatedOrderRequested",
                "getFXCanRelatedOrderSucceed",
                "getFXCanRelatedOrderFailed",
                "hideGetFXCanRelatedOrderError",
                "resetGetFXCanRelatedOrder",
                "pushFXCanRelatedOrderRequested",
                "pushFXCanRelatedOrderSucceed",
                "pushFXCanRelatedOrderFailed",
                "swithWithdrawFXReApplyModal",
                "setWithdrawFXReApplyStep",
                "withdrawFXReApplyRequested",
                "withdrawFXReApplySucceed",
                "withdrawFXReApplyFailed",
                "resetWithdrawFXReApply",
                "hideWithdrawFXReApplyError",
                "getWithdrawReApplyItemRequested",
                "getWithdrawReApplyItemSucceed",
                "getWithdrawReApplyItemFailed",
                "resetGetWithdrawReApplyItem",
                "withdrawCheckBothFrozen",
                "withdrawCheckBothFrozenSucceed",
                "withdrawCheckBothFrozenFailed",
                "getFxWithdrawHolderTypeRequested",
                "getFxWithdrawHolderTypeSucceed",
                "getFxWithdrawHolderTypeFailed",
                "withdrawDetailRequested",
                "withdrawDetailSucceed",
                "withdrawDetailFailed",
                "resetWithdrawDetail",
                "withdrawFeeRequested",
                "withdrawFeeSucceed",
                "withdrawFeeFailed",
                "queryAddMaterialInfoRequested",
                "queryAddMaterialInfoSucceed",
                "queryAddMaterialInfoFailed",
                "addMaterialCommitRequested",
                "addMaterialCommitSucceed",
                "addMaterialCommitFailed",
                "resetAddMaterialCommit",
                "cancelFxWithdrawRequested",
                "cancelFxWithdrawSucceed",
                "cancelFxWithdrawFailed",
                "resetCancelFxWithdraw",
                "setCancelFxWithdrawModal",
                "cancelWithdrawRequested",
                "cancelWithdrawSucceed",
                "cancelWithdrawFailed",
                "resetCancelWithdraw",
                "setCancelWithdrawModal",
                "cancelOnGoingTransferRequested",
                "cancelOnGoingTransferSucceed",
                "cancelOnGoingTransferFailed",
                "resetCancelOnGoingTransfer",
                "setCancelOnGoingTransferModal",
                "withdrawSupportCcys",
                "withdrawSupportCcysSucceed",
                "withdrawSupportCcysFailed",
                "transferFeeRequested",
                "transferFeeSucceed",
                "transferFeeFailed",
                "setTransferApplyStep",
                "transferApplyRequested",
                "transferApplySucceed",
                "transferApplyFailed",
                "hideTransferApplyError",
                "resetTransferApply",
                "setTransferStep",
                "queryTransferAddMaterialInfoRequested",
                "queryTransferAddMaterialInfoSucceed",
                "queryTransferAddMaterialInfoFailed",
                "transferAddMaterialCommitRequested",
                "transferAddMaterialCommitSucceed",
                "transferAddMaterialCommitFailed",
                "resetTransferAddMaterialCommit",
                "cancelTransferRequested",
                "cancelTransferSucceed",
                "cancelTransferFailed",
                "resetCancelTransfer",
                "setCancelModal",
                "addCardInfoRequested",
                "addCardInfoSucceed",
                "addCardInfoFailed",
                "querySupportBoostRequested",
                "querySupportBoostSucceed",
                "querySupportBoostFailed",
                "resetQuerySupportBoost",
                "queryCanFastWithdrawWorkRequested",
                "queryCanFastWithdrawWorkFailed",
                "queryCanFastWithdrawWorkSuccess",
                "queryACrossBorderRequested",
                "queryACrossBorderSuccess",
                "queryACrossBorderFailed",
                "getAbRequested",
                "getAbSucceed",
                "getAbFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "withdrawalsActions",
              "sourceValue": "actions/withdrawals",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts",
              "exportNames": [
                "accountListRequested",
                "accountListSucceed",
                "accountListFailed",
                "hideAccountListError",
                "deleteItemRequested",
                "deleteItemSucceed",
                "deleteItemFailed",
                "swithDeleteItemModal",
                "setDeleteItemId",
                "setDeleteItemType",
                "hideDeleteItemError",
                "historyDetailRequested",
                "historyDetailSucceed",
                "historyDetailFailed",
                "hideHistoryDetailError",
                "createAccountRequested",
                "createAccountSucceed",
                "createAccountFailed",
                "setCreateAccountStep",
                "resetCreateAccount",
                "hideCreateAccountError",
                "withdrawFXAddRequested",
                "withdrawFXAddSucceed",
                "withdrawFXAddFailed",
                "hideWithdrawFXAddError",
                "setWithdrawFXAddStep",
                "resetWithdrawFXAdd",
                "withdrawFXAddVerifyRequested",
                "withdrawFXAddVerifySucceed",
                "withdrawFXAddVerifyFailed",
                "queryBanks",
                "queryBanksSucceed",
                "queryBanksFailed",
                "queryProvinces",
                "queryProvincesSucceed",
                "queryProvincesFailed",
                "getLegalProfile",
                "getLegalProfileSucceed",
                "getLegalProfileFailed",
                "createTransferAccountRequested",
                "createTransferAccountSucceed",
                "createTransferAccountFailed",
                "hideCreateTransferAccountError",
                "setCreateTransferAccountStep",
                "resetCreateTransferAccount",
                "setBeneficiaryNameError",
                "getBeneficiayAccountNoRequested",
                "getBeneficiayAccountNoSucceed",
                "getBeneficiayAccountNoFailed",
                "resetBeneficiayAccountNo",
                "getAccountLimitRequested",
                "getAccountLimitSucceed",
                "getAccountLimitFailed",
                "bindAccountPhoneNoRequested",
                "bindAccountPhoneNoSucceed",
                "bindAccountPhoneNoFailed",
                "bindAccountPhoneNoVerifyFailed",
                "swithBindPhoneNoModal",
                "getBeneficiayPhoneNoRequested",
                "getBeneficiayPhoneNoSucceed",
                "getBeneficiayPhoneNoFailed",
                "resetBeneficiayPhoneNo",
                "getFXPrivateAgreementRequested",
                "getFXPrivateAgreementSucceed",
                "getFXPrivateAgreementFailed",
                "getFXPublicAgreementRequested",
                "getFXPublicAgreementSucceed",
                "getFXPublicAgreementFailed",
                "getTransferPublicAgreementRequested",
                "getTransferPublicAgreementSucceed",
                "getTransferPublicAgreementFailed",
                "getWithdrawNormalAgreementRequested",
                "getWithdrawNormalAgreementSucceed",
                "getWithdrawNormalAgreementFailed"
              ]
            },
            {
              "isNamespace": false,
              "localName": "reset",
              "importedName": "reset",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "change",
              "importedName": "change",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "touch",
              "importedName": "touch",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 126,
                  "column": 71,
                  "index": 3830
                },
                "end": {
                  "line": 444,
                  "column": 1,
                  "index": 14948
                }
              },
              "actionsMethods": [
                {
                  "name": "queryBanks"
                },
                {
                  "name": "withdrawInitRequested"
                },
                {
                  "name": "touch"
                },
                {
                  "name": "swithWithdrawFXReApplyModal"
                },
                {
                  "name": "change"
                },
                {
                  "name": "resetGetWithdrawReApplyItem"
                },
                {
                  "name": "withdrawFXReApplyRequested"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "queryBanks",
                  "importedName": "queryBanks",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts"
                },
                {
                  "localName": "withdrawInitRequested",
                  "importedName": "withdrawInitRequested",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "isNamespace": false,
                  "localName": "touch",
                  "importedName": "touch",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                },
                {
                  "localName": "swithWithdrawFXReApplyModal",
                  "importedName": "swithWithdrawFXReApplyModal",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "isNamespace": false,
                  "localName": "change",
                  "importedName": "change",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                },
                {
                  "localName": "resetGetWithdrawReApplyItem",
                  "importedName": "resetGetWithdrawReApplyItem",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "localName": "withdrawFXReApplyRequested",
                  "importedName": "withdrawFXReApplyRequested",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 126,
                  "column": 71,
                  "index": 3830
                },
                "end": {
                  "line": 444,
                  "column": 1,
                  "index": 14948
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["withdrawActions", "withdrawalsActions"],
          "objectPropertyMap": {
            "reset": "reset",
            "change": "change",
            "touch": "touch"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/TransferAddMaterialForm/index.jsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "actions",
              "sourceValue": "actions/withdraw",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts",
              "exportNames": [
                "withdrawListRequested",
                "withdrawListSucceed",
                "withdrawListFailed",
                "hideWithdrawListError",
                "resetWithdrawList",
                "changeTab",
                "switchWithdrawApplyModal",
                "setWithdrawApplyIsReserved",
                "withdrawApplyRequested",
                "withdrawApplySucceed",
                "withdrawApplyFailed",
                "hideWithdrawApplyError",
                "setStep",
                "resetWithdrawApply",
                "withdrawInitRequested",
                "withdrawInitSucceed",
                "withdrawInitFailed",
                "hideWithdrawInitError",
                "withdrawDebtRequested",
                "withdrawDebtSucceed",
                "withdrawDebtFailed",
                "hideWithdrawDebtError",
                "removeRelatedItemOrderId",
                "addRelatedItemOrderId",
                "inputChangeRelatedItemValue",
                "resetRelatedOrders",
                "changeRelatedOrderChecked",
                "resetRelatedOrderChecked",
                "swithWithdrawFXApplyModal",
                "setWithdrawFXApplyStep",
                "setWithdrawFXApplyIsReserved",
                "withdrawFXApplyRequested",
                "withdrawFXApplySucceed",
                "withdrawFXApplyFailed",
                "hideWithdrawFXApplyError",
                "resetWithdrawFXApply",
                "isWithdrawErrorPage",
                "getFXWithdrawFeeRequested",
                "getFXWithdrawFeeSucceed",
                "getFXWithdrawFeeFailed",
                "hideGetFXWithdrawFeeError",
                "resetGetFXWithdrawFee",
                "getFXCanRelatedOrderRequested",
                "getFXCanRelatedOrderSucceed",
                "getFXCanRelatedOrderFailed",
                "hideGetFXCanRelatedOrderError",
                "resetGetFXCanRelatedOrder",
                "pushFXCanRelatedOrderRequested",
                "pushFXCanRelatedOrderSucceed",
                "pushFXCanRelatedOrderFailed",
                "swithWithdrawFXReApplyModal",
                "setWithdrawFXReApplyStep",
                "withdrawFXReApplyRequested",
                "withdrawFXReApplySucceed",
                "withdrawFXReApplyFailed",
                "resetWithdrawFXReApply",
                "hideWithdrawFXReApplyError",
                "getWithdrawReApplyItemRequested",
                "getWithdrawReApplyItemSucceed",
                "getWithdrawReApplyItemFailed",
                "resetGetWithdrawReApplyItem",
                "withdrawCheckBothFrozen",
                "withdrawCheckBothFrozenSucceed",
                "withdrawCheckBothFrozenFailed",
                "getFxWithdrawHolderTypeRequested",
                "getFxWithdrawHolderTypeSucceed",
                "getFxWithdrawHolderTypeFailed",
                "withdrawDetailRequested",
                "withdrawDetailSucceed",
                "withdrawDetailFailed",
                "resetWithdrawDetail",
                "withdrawFeeRequested",
                "withdrawFeeSucceed",
                "withdrawFeeFailed",
                "queryAddMaterialInfoRequested",
                "queryAddMaterialInfoSucceed",
                "queryAddMaterialInfoFailed",
                "addMaterialCommitRequested",
                "addMaterialCommitSucceed",
                "addMaterialCommitFailed",
                "resetAddMaterialCommit",
                "cancelFxWithdrawRequested",
                "cancelFxWithdrawSucceed",
                "cancelFxWithdrawFailed",
                "resetCancelFxWithdraw",
                "setCancelFxWithdrawModal",
                "cancelWithdrawRequested",
                "cancelWithdrawSucceed",
                "cancelWithdrawFailed",
                "resetCancelWithdraw",
                "setCancelWithdrawModal",
                "cancelOnGoingTransferRequested",
                "cancelOnGoingTransferSucceed",
                "cancelOnGoingTransferFailed",
                "resetCancelOnGoingTransfer",
                "setCancelOnGoingTransferModal",
                "withdrawSupportCcys",
                "withdrawSupportCcysSucceed",
                "withdrawSupportCcysFailed",
                "transferFeeRequested",
                "transferFeeSucceed",
                "transferFeeFailed",
                "setTransferApplyStep",
                "transferApplyRequested",
                "transferApplySucceed",
                "transferApplyFailed",
                "hideTransferApplyError",
                "resetTransferApply",
                "setTransferStep",
                "queryTransferAddMaterialInfoRequested",
                "queryTransferAddMaterialInfoSucceed",
                "queryTransferAddMaterialInfoFailed",
                "transferAddMaterialCommitRequested",
                "transferAddMaterialCommitSucceed",
                "transferAddMaterialCommitFailed",
                "resetTransferAddMaterialCommit",
                "cancelTransferRequested",
                "cancelTransferSucceed",
                "cancelTransferFailed",
                "resetCancelTransfer",
                "setCancelModal",
                "addCardInfoRequested",
                "addCardInfoSucceed",
                "addCardInfoFailed",
                "querySupportBoostRequested",
                "querySupportBoostSucceed",
                "querySupportBoostFailed",
                "resetQuerySupportBoost",
                "queryCanFastWithdrawWorkRequested",
                "queryCanFastWithdrawWorkFailed",
                "queryCanFastWithdrawWorkSuccess",
                "queryACrossBorderRequested",
                "queryACrossBorderSuccess",
                "queryACrossBorderFailed",
                "getAbRequested",
                "getAbSucceed",
                "getAbFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "fileActions",
              "sourceValue": "actions/file",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/file.ts",
              "exportNames": [
                "uploadFileRequested",
                "uploadFileSucceed",
                "uploadFileFailed",
                "hideUploadFileError",
                "deleteFile",
                "deleteSyncFile",
                "resetFile",
                "resetCreateTransferAccountFile",
                "resetAllFile",
                "fileDownload",
                "getThumbnailRequested",
                "getThumbnailSucceed",
                "getThumbnailFailed",
                "initGetThumbnail",
                "setAnnexeRenameModal",
                "updateAnnexeFileName"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 84,
                  "column": 63,
                  "index": 2745
                },
                "end": {
                  "line": 343,
                  "column": 1,
                  "index": 11218
                }
              },
              "actionsMethods": [
                {
                  "name": "transferAddMaterialCommitRequested"
                },
                {
                  "name": "uploadFileRequested"
                },
                {
                  "name": "deleteFile",
                  "usageVariable": "usage"
                },
                {
                  "name": "setCancelModal"
                },
                {
                  "name": "cancelTransferRequested"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "transferAddMaterialCommitRequested",
                  "importedName": "transferAddMaterialCommitRequested",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "localName": "uploadFileRequested",
                  "importedName": "uploadFileRequested",
                  "sourceValue": "actions/file",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/file.ts"
                },
                {
                  "localName": "deleteFile",
                  "importedName": "deleteFile",
                  "sourceValue": "actions/file",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/file.ts",
                  "usageVariable": "usage"
                },
                {
                  "localName": "setCancelModal",
                  "importedName": "setCancelModal",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "localName": "cancelTransferRequested",
                  "importedName": "cancelTransferRequested",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 84,
                  "column": 63,
                  "index": 2745
                },
                "end": {
                  "line": 343,
                  "column": 1,
                  "index": 11218
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["actions", "fileActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/TransferApplyForm/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "withdrawActions",
              "sourceValue": "actions/withdraw",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts",
              "exportNames": [
                "withdrawListRequested",
                "withdrawListSucceed",
                "withdrawListFailed",
                "hideWithdrawListError",
                "resetWithdrawList",
                "changeTab",
                "switchWithdrawApplyModal",
                "setWithdrawApplyIsReserved",
                "withdrawApplyRequested",
                "withdrawApplySucceed",
                "withdrawApplyFailed",
                "hideWithdrawApplyError",
                "setStep",
                "resetWithdrawApply",
                "withdrawInitRequested",
                "withdrawInitSucceed",
                "withdrawInitFailed",
                "hideWithdrawInitError",
                "withdrawDebtRequested",
                "withdrawDebtSucceed",
                "withdrawDebtFailed",
                "hideWithdrawDebtError",
                "removeRelatedItemOrderId",
                "addRelatedItemOrderId",
                "inputChangeRelatedItemValue",
                "resetRelatedOrders",
                "changeRelatedOrderChecked",
                "resetRelatedOrderChecked",
                "swithWithdrawFXApplyModal",
                "setWithdrawFXApplyStep",
                "setWithdrawFXApplyIsReserved",
                "withdrawFXApplyRequested",
                "withdrawFXApplySucceed",
                "withdrawFXApplyFailed",
                "hideWithdrawFXApplyError",
                "resetWithdrawFXApply",
                "isWithdrawErrorPage",
                "getFXWithdrawFeeRequested",
                "getFXWithdrawFeeSucceed",
                "getFXWithdrawFeeFailed",
                "hideGetFXWithdrawFeeError",
                "resetGetFXWithdrawFee",
                "getFXCanRelatedOrderRequested",
                "getFXCanRelatedOrderSucceed",
                "getFXCanRelatedOrderFailed",
                "hideGetFXCanRelatedOrderError",
                "resetGetFXCanRelatedOrder",
                "pushFXCanRelatedOrderRequested",
                "pushFXCanRelatedOrderSucceed",
                "pushFXCanRelatedOrderFailed",
                "swithWithdrawFXReApplyModal",
                "setWithdrawFXReApplyStep",
                "withdrawFXReApplyRequested",
                "withdrawFXReApplySucceed",
                "withdrawFXReApplyFailed",
                "resetWithdrawFXReApply",
                "hideWithdrawFXReApplyError",
                "getWithdrawReApplyItemRequested",
                "getWithdrawReApplyItemSucceed",
                "getWithdrawReApplyItemFailed",
                "resetGetWithdrawReApplyItem",
                "withdrawCheckBothFrozen",
                "withdrawCheckBothFrozenSucceed",
                "withdrawCheckBothFrozenFailed",
                "getFxWithdrawHolderTypeRequested",
                "getFxWithdrawHolderTypeSucceed",
                "getFxWithdrawHolderTypeFailed",
                "withdrawDetailRequested",
                "withdrawDetailSucceed",
                "withdrawDetailFailed",
                "resetWithdrawDetail",
                "withdrawFeeRequested",
                "withdrawFeeSucceed",
                "withdrawFeeFailed",
                "queryAddMaterialInfoRequested",
                "queryAddMaterialInfoSucceed",
                "queryAddMaterialInfoFailed",
                "addMaterialCommitRequested",
                "addMaterialCommitSucceed",
                "addMaterialCommitFailed",
                "resetAddMaterialCommit",
                "cancelFxWithdrawRequested",
                "cancelFxWithdrawSucceed",
                "cancelFxWithdrawFailed",
                "resetCancelFxWithdraw",
                "setCancelFxWithdrawModal",
                "cancelWithdrawRequested",
                "cancelWithdrawSucceed",
                "cancelWithdrawFailed",
                "resetCancelWithdraw",
                "setCancelWithdrawModal",
                "cancelOnGoingTransferRequested",
                "cancelOnGoingTransferSucceed",
                "cancelOnGoingTransferFailed",
                "resetCancelOnGoingTransfer",
                "setCancelOnGoingTransferModal",
                "withdrawSupportCcys",
                "withdrawSupportCcysSucceed",
                "withdrawSupportCcysFailed",
                "transferFeeRequested",
                "transferFeeSucceed",
                "transferFeeFailed",
                "setTransferApplyStep",
                "transferApplyRequested",
                "transferApplySucceed",
                "transferApplyFailed",
                "hideTransferApplyError",
                "resetTransferApply",
                "setTransferStep",
                "queryTransferAddMaterialInfoRequested",
                "queryTransferAddMaterialInfoSucceed",
                "queryTransferAddMaterialInfoFailed",
                "transferAddMaterialCommitRequested",
                "transferAddMaterialCommitSucceed",
                "transferAddMaterialCommitFailed",
                "resetTransferAddMaterialCommit",
                "cancelTransferRequested",
                "cancelTransferSucceed",
                "cancelTransferFailed",
                "resetCancelTransfer",
                "setCancelModal",
                "addCardInfoRequested",
                "addCardInfoSucceed",
                "addCardInfoFailed",
                "querySupportBoostRequested",
                "querySupportBoostSucceed",
                "querySupportBoostFailed",
                "resetQuerySupportBoost",
                "queryCanFastWithdrawWorkRequested",
                "queryCanFastWithdrawWorkFailed",
                "queryCanFastWithdrawWorkSuccess",
                "queryACrossBorderRequested",
                "queryACrossBorderSuccess",
                "queryACrossBorderFailed",
                "getAbRequested",
                "getAbSucceed",
                "getAbFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "userActions",
              "sourceValue": "actions/user",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts",
              "exportNames": [
                "getUserFlowId",
                "getUserFlowIdAndCaptcha",
                "getUserFlowIdSucceed",
                "getUserFlowIdFailed",
                "initUserFlowId",
                "getUserCaptcha",
                "getUserCaptchaSucceed",
                "getUserCaptchaFailed",
                "initUserCaptcha",
                "verifyMfaRequested",
                "verifyMfaSucceed",
                "verifyMfaFailed",
                "initVerifyMfa",
                "setAuthId",
                "resetAuthId",
                "executeAuthIdCallBackRequested",
                "executeAuthIdCallBackSucceed",
                "executeAuthIdCallBackFailed",
                "sendMfaMessageRequested",
                "getMfaCaptchaRequested",
                "getMfaCaptchaSucceed",
                "getMfaCaptchaFailed",
                "initMfaCaptcha",
                "getWhiteListRequested",
                "getWhiteListSucceed",
                "getWhiteListFailed",
                "getWhiteListInit",
                "setMfaJson",
                "resetMfaJson",
                "queryIndustryRequested",
                "queryIndustrySucceed",
                "queryIndustryFailed",
                "queryRestrictionList",
                "queryRestrictionListSucceed",
                "queryRestrictionListFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "utilActions",
              "sourceValue": "actions/util",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/util.ts",
              "exportNames": [
                "pubKeyRequested",
                "pubKeySucceed",
                "pubKeyFailed",
                "toggleOrderAnnexUpload",
                "setIsMobile",
                "getFirmStatusRequested",
                "getFirmStatusSucceed",
                "getFirmStatusFailed",
                "setPreviewPageId",
                "setCountrys",
                "setProvinces",
                "setLoadAddress",
                "getLocationRequested",
                "getLocationSucceed",
                "getLocationFailed",
                "touchAndChangeAddressFields",
                "resetAddressFieldsThenSetCountry"
              ]
            },
            {
              "isNamespace": true,
              "localName": "xptransferActions",
              "sourceValue": "actions/xpTransfer",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xpTransfer.ts",
              "exportNames": [
                "pendingSpotsRequested",
                "pendingSpotsSucceed",
                "pendingSpotsFailed",
                "supportCurrencyRequested",
                "supportCurrencySucceed",
                "supportCurrencyFailed",
                "pricingListRequested",
                "pricingListSucceed",
                "pricingListFailed",
                "innerTransferApplyRequested",
                "innerTransferApplySucceed",
                "innerTransferApplyFailed",
                "initInnerTransferApply",
                "setXPTransferApplyStep",
                "innerTransferDetailRequested",
                "innerTransferDetailSucceed",
                "innerTransferDetailFailed",
                "innerTransferListRequested",
                "innerTransferListSucceed",
                "innerTransferListFailed",
                "exportTransferRequested",
                "exportTransferSucceed",
                "exportTransferFailed",
                "setTransferModal",
                "updateApplyCheckList",
                "initApplyCheckList"
              ]
            },
            {
              "isNamespace": true,
              "localName": "metaActions",
              "sourceValue": "actions/meta",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
              "exportNames": [
                "fetchMetaRequested",
                "fetchMetaSucceed",
                "fetchMetaFailed",
                "resetFetchMeta",
                "hideFetchMetaError"
              ]
            },
            {
              "isNamespace": true,
              "localName": "submitActions",
              "sourceValue": "actions/submit",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/submit.ts",
              "exportNames": [
                "submitRequested",
                "submitSucceed",
                "submitFailed",
                "resetSubmit"
              ]
            },
            {
              "isNamespace": true,
              "localName": "idsActions",
              "sourceValue": "actions/ids",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/ids.ts",
              "exportNames": ["setIds", "setCurIds", "resetIds"]
            },
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            },
            {
              "isNamespace": false,
              "localName": "change",
              "importedName": "change",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "touch",
              "importedName": "touch",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "initialize",
              "importedName": "initialize",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "destroy",
              "importedName": "destroy",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 109,
                  "column": 56,
                  "index": 4101
                },
                "end": {
                  "line": 826,
                  "column": 1,
                  "index": 28888
                }
              },
              "actionsMethods": [
                {
                  "name": "initialize"
                },
                {
                  "name": "fetchMetaRequested",
                  "usage": "EMMetaUsages.Tickets"
                },
                {
                  "name": "fetchMetaRequested",
                  "usage": "EMMetaUsages.BeneficaryAddressCountry"
                },
                {
                  "name": "change"
                },
                {
                  "name": "destroy"
                },
                {
                  "name": "resetFetchMeta",
                  "usage": "EMMetaUsages.BeneficaryAddressProvince"
                },
                {
                  "name": "resetFetchMeta",
                  "usage": "EMMetaUsages.BeneficaryAddressCity"
                },
                {
                  "name": "resetFetchMeta",
                  "usage": "EMMetaUsages.BeneficaryAddressTown"
                },
                {
                  "name": "resetSubmit",
                  "usage": "EMSubmitUsages.BenificiaryAddressCreate"
                },
                {
                  "name": "touchAndChangeAddressFields"
                },
                {
                  "name": "touch"
                },
                {
                  "name": "initApplyCheckList"
                },
                {
                  "name": "setTransferStep"
                },
                {
                  "name": "submitRequested",
                  "usage": "EMSubmitUsages.BenificiaryAddressCreate"
                },
                {
                  "name": "addCardInfoRequested",
                  "usage": "EMGetUserFlowIdUsages.withdrawTransferOrder"
                },
                {
                  "name": "transferApplyRequested",
                  "usage": "EMGetUserFlowIdUsages.withdrawTransferOrder"
                },
                {
                  "name": "transferApplySucceed"
                },
                {
                  "name": "transferApplyFailed"
                },
                {
                  "name": "resetAddressFieldsThenSetCountry"
                },
                {
                  "name": "resetIds",
                  "usage": "EMIdsUsages.UsedTicketInBusiness"
                }
              ],
              "usedActionsDependencies": [
                {
                  "isNamespace": false,
                  "localName": "initialize",
                  "importedName": "initialize",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                },
                {
                  "localName": "fetchMetaRequested",
                  "importedName": "fetchMetaRequested",
                  "sourceValue": "actions/meta",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
                  "usage": "EMMetaUsages.Tickets"
                },
                {
                  "localName": "fetchMetaRequested",
                  "importedName": "fetchMetaRequested",
                  "sourceValue": "actions/meta",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
                  "usage": "EMMetaUsages.BeneficaryAddressCountry"
                },
                {
                  "isNamespace": false,
                  "localName": "change",
                  "importedName": "change",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                },
                {
                  "isNamespace": false,
                  "localName": "destroy",
                  "importedName": "destroy",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                },
                {
                  "localName": "resetFetchMeta",
                  "importedName": "resetFetchMeta",
                  "sourceValue": "actions/meta",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
                  "usage": "EMMetaUsages.BeneficaryAddressProvince"
                },
                {
                  "localName": "resetFetchMeta",
                  "importedName": "resetFetchMeta",
                  "sourceValue": "actions/meta",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
                  "usage": "EMMetaUsages.BeneficaryAddressCity"
                },
                {
                  "localName": "resetFetchMeta",
                  "importedName": "resetFetchMeta",
                  "sourceValue": "actions/meta",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
                  "usage": "EMMetaUsages.BeneficaryAddressTown"
                },
                {
                  "localName": "resetSubmit",
                  "importedName": "resetSubmit",
                  "sourceValue": "actions/submit",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/submit.ts",
                  "usage": "EMSubmitUsages.BenificiaryAddressCreate"
                },
                {
                  "localName": "touchAndChangeAddressFields",
                  "importedName": "touchAndChangeAddressFields",
                  "sourceValue": "actions/util",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/util.ts"
                },
                {
                  "isNamespace": false,
                  "localName": "touch",
                  "importedName": "touch",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                },
                {
                  "localName": "initApplyCheckList",
                  "importedName": "initApplyCheckList",
                  "sourceValue": "actions/xpTransfer",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xpTransfer.ts"
                },
                {
                  "localName": "setTransferStep",
                  "importedName": "setTransferStep",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "localName": "submitRequested",
                  "importedName": "submitRequested",
                  "sourceValue": "actions/submit",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/submit.ts",
                  "usage": "EMSubmitUsages.BenificiaryAddressCreate"
                },
                {
                  "localName": "addCardInfoRequested",
                  "importedName": "addCardInfoRequested",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts",
                  "usage": "EMGetUserFlowIdUsages.withdrawTransferOrder"
                },
                {
                  "localName": "transferApplyRequested",
                  "importedName": "transferApplyRequested",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts",
                  "usage": "EMGetUserFlowIdUsages.withdrawTransferOrder"
                },
                {
                  "localName": "transferApplySucceed",
                  "importedName": "transferApplySucceed",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "localName": "transferApplyFailed",
                  "importedName": "transferApplyFailed",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "localName": "resetAddressFieldsThenSetCountry",
                  "importedName": "resetAddressFieldsThenSetCountry",
                  "sourceValue": "actions/util",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/util.ts"
                },
                {
                  "localName": "resetIds",
                  "importedName": "resetIds",
                  "sourceValue": "actions/ids",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/ids.ts",
                  "usage": "EMIdsUsages.UsedTicketInBusiness"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 109,
                  "column": 56,
                  "index": 4101
                },
                "end": {
                  "line": 826,
                  "column": 1,
                  "index": 28888
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [
            "withdrawActions",
            "userActions",
            "utilActions",
            "xptransferActions",
            "metaActions",
            "submitActions",
            "idsActions"
          ],
          "objectPropertyMap": {
            "push": "push",
            "change": "change",
            "touch": "touch",
            "initialize": "initialize",
            "destroy": "destroy"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/WithdrawListQueryForm/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "withdrawActions",
              "sourceValue": "actions/withdraw",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts",
              "exportNames": [
                "withdrawListRequested",
                "withdrawListSucceed",
                "withdrawListFailed",
                "hideWithdrawListError",
                "resetWithdrawList",
                "changeTab",
                "switchWithdrawApplyModal",
                "setWithdrawApplyIsReserved",
                "withdrawApplyRequested",
                "withdrawApplySucceed",
                "withdrawApplyFailed",
                "hideWithdrawApplyError",
                "setStep",
                "resetWithdrawApply",
                "withdrawInitRequested",
                "withdrawInitSucceed",
                "withdrawInitFailed",
                "hideWithdrawInitError",
                "withdrawDebtRequested",
                "withdrawDebtSucceed",
                "withdrawDebtFailed",
                "hideWithdrawDebtError",
                "removeRelatedItemOrderId",
                "addRelatedItemOrderId",
                "inputChangeRelatedItemValue",
                "resetRelatedOrders",
                "changeRelatedOrderChecked",
                "resetRelatedOrderChecked",
                "swithWithdrawFXApplyModal",
                "setWithdrawFXApplyStep",
                "setWithdrawFXApplyIsReserved",
                "withdrawFXApplyRequested",
                "withdrawFXApplySucceed",
                "withdrawFXApplyFailed",
                "hideWithdrawFXApplyError",
                "resetWithdrawFXApply",
                "isWithdrawErrorPage",
                "getFXWithdrawFeeRequested",
                "getFXWithdrawFeeSucceed",
                "getFXWithdrawFeeFailed",
                "hideGetFXWithdrawFeeError",
                "resetGetFXWithdrawFee",
                "getFXCanRelatedOrderRequested",
                "getFXCanRelatedOrderSucceed",
                "getFXCanRelatedOrderFailed",
                "hideGetFXCanRelatedOrderError",
                "resetGetFXCanRelatedOrder",
                "pushFXCanRelatedOrderRequested",
                "pushFXCanRelatedOrderSucceed",
                "pushFXCanRelatedOrderFailed",
                "swithWithdrawFXReApplyModal",
                "setWithdrawFXReApplyStep",
                "withdrawFXReApplyRequested",
                "withdrawFXReApplySucceed",
                "withdrawFXReApplyFailed",
                "resetWithdrawFXReApply",
                "hideWithdrawFXReApplyError",
                "getWithdrawReApplyItemRequested",
                "getWithdrawReApplyItemSucceed",
                "getWithdrawReApplyItemFailed",
                "resetGetWithdrawReApplyItem",
                "withdrawCheckBothFrozen",
                "withdrawCheckBothFrozenSucceed",
                "withdrawCheckBothFrozenFailed",
                "getFxWithdrawHolderTypeRequested",
                "getFxWithdrawHolderTypeSucceed",
                "getFxWithdrawHolderTypeFailed",
                "withdrawDetailRequested",
                "withdrawDetailSucceed",
                "withdrawDetailFailed",
                "resetWithdrawDetail",
                "withdrawFeeRequested",
                "withdrawFeeSucceed",
                "withdrawFeeFailed",
                "queryAddMaterialInfoRequested",
                "queryAddMaterialInfoSucceed",
                "queryAddMaterialInfoFailed",
                "addMaterialCommitRequested",
                "addMaterialCommitSucceed",
                "addMaterialCommitFailed",
                "resetAddMaterialCommit",
                "cancelFxWithdrawRequested",
                "cancelFxWithdrawSucceed",
                "cancelFxWithdrawFailed",
                "resetCancelFxWithdraw",
                "setCancelFxWithdrawModal",
                "cancelWithdrawRequested",
                "cancelWithdrawSucceed",
                "cancelWithdrawFailed",
                "resetCancelWithdraw",
                "setCancelWithdrawModal",
                "cancelOnGoingTransferRequested",
                "cancelOnGoingTransferSucceed",
                "cancelOnGoingTransferFailed",
                "resetCancelOnGoingTransfer",
                "setCancelOnGoingTransferModal",
                "withdrawSupportCcys",
                "withdrawSupportCcysSucceed",
                "withdrawSupportCcysFailed",
                "transferFeeRequested",
                "transferFeeSucceed",
                "transferFeeFailed",
                "setTransferApplyStep",
                "transferApplyRequested",
                "transferApplySucceed",
                "transferApplyFailed",
                "hideTransferApplyError",
                "resetTransferApply",
                "setTransferStep",
                "queryTransferAddMaterialInfoRequested",
                "queryTransferAddMaterialInfoSucceed",
                "queryTransferAddMaterialInfoFailed",
                "transferAddMaterialCommitRequested",
                "transferAddMaterialCommitSucceed",
                "transferAddMaterialCommitFailed",
                "resetTransferAddMaterialCommit",
                "cancelTransferRequested",
                "cancelTransferSucceed",
                "cancelTransferFailed",
                "resetCancelTransfer",
                "setCancelModal",
                "addCardInfoRequested",
                "addCardInfoSucceed",
                "addCardInfoFailed",
                "querySupportBoostRequested",
                "querySupportBoostSucceed",
                "querySupportBoostFailed",
                "resetQuerySupportBoost",
                "queryCanFastWithdrawWorkRequested",
                "queryCanFastWithdrawWorkFailed",
                "queryCanFastWithdrawWorkSuccess",
                "queryACrossBorderRequested",
                "queryACrossBorderSuccess",
                "queryACrossBorderFailed",
                "getAbRequested",
                "getAbSucceed",
                "getAbFailed"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 37,
                  "column": 61,
                  "index": 1065
                },
                "end": {
                  "line": 151,
                  "column": 1,
                  "index": 4415
                }
              },
              "actionsMethods": [
                {
                  "name": "withdrawSupportCcys"
                },
                {
                  "name": "changeTab"
                },
                {
                  "name": "withdrawListRequested"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "withdrawSupportCcys",
                  "importedName": "withdrawSupportCcys",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "localName": "changeTab",
                  "importedName": "changeTab",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "localName": "withdrawListRequested",
                  "importedName": "withdrawListRequested",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 37,
                  "column": 61,
                  "index": 1065
                },
                "end": {
                  "line": 151,
                  "column": 1,
                  "index": 4415
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["withdrawActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/WithdrawSetting/WithdrawTable/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "actions",
              "sourceValue": "actions/withdraw",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts",
              "exportNames": [
                "withdrawListRequested",
                "withdrawListSucceed",
                "withdrawListFailed",
                "hideWithdrawListError",
                "resetWithdrawList",
                "changeTab",
                "switchWithdrawApplyModal",
                "setWithdrawApplyIsReserved",
                "withdrawApplyRequested",
                "withdrawApplySucceed",
                "withdrawApplyFailed",
                "hideWithdrawApplyError",
                "setStep",
                "resetWithdrawApply",
                "withdrawInitRequested",
                "withdrawInitSucceed",
                "withdrawInitFailed",
                "hideWithdrawInitError",
                "withdrawDebtRequested",
                "withdrawDebtSucceed",
                "withdrawDebtFailed",
                "hideWithdrawDebtError",
                "removeRelatedItemOrderId",
                "addRelatedItemOrderId",
                "inputChangeRelatedItemValue",
                "resetRelatedOrders",
                "changeRelatedOrderChecked",
                "resetRelatedOrderChecked",
                "swithWithdrawFXApplyModal",
                "setWithdrawFXApplyStep",
                "setWithdrawFXApplyIsReserved",
                "withdrawFXApplyRequested",
                "withdrawFXApplySucceed",
                "withdrawFXApplyFailed",
                "hideWithdrawFXApplyError",
                "resetWithdrawFXApply",
                "isWithdrawErrorPage",
                "getFXWithdrawFeeRequested",
                "getFXWithdrawFeeSucceed",
                "getFXWithdrawFeeFailed",
                "hideGetFXWithdrawFeeError",
                "resetGetFXWithdrawFee",
                "getFXCanRelatedOrderRequested",
                "getFXCanRelatedOrderSucceed",
                "getFXCanRelatedOrderFailed",
                "hideGetFXCanRelatedOrderError",
                "resetGetFXCanRelatedOrder",
                "pushFXCanRelatedOrderRequested",
                "pushFXCanRelatedOrderSucceed",
                "pushFXCanRelatedOrderFailed",
                "swithWithdrawFXReApplyModal",
                "setWithdrawFXReApplyStep",
                "withdrawFXReApplyRequested",
                "withdrawFXReApplySucceed",
                "withdrawFXReApplyFailed",
                "resetWithdrawFXReApply",
                "hideWithdrawFXReApplyError",
                "getWithdrawReApplyItemRequested",
                "getWithdrawReApplyItemSucceed",
                "getWithdrawReApplyItemFailed",
                "resetGetWithdrawReApplyItem",
                "withdrawCheckBothFrozen",
                "withdrawCheckBothFrozenSucceed",
                "withdrawCheckBothFrozenFailed",
                "getFxWithdrawHolderTypeRequested",
                "getFxWithdrawHolderTypeSucceed",
                "getFxWithdrawHolderTypeFailed",
                "withdrawDetailRequested",
                "withdrawDetailSucceed",
                "withdrawDetailFailed",
                "resetWithdrawDetail",
                "withdrawFeeRequested",
                "withdrawFeeSucceed",
                "withdrawFeeFailed",
                "queryAddMaterialInfoRequested",
                "queryAddMaterialInfoSucceed",
                "queryAddMaterialInfoFailed",
                "addMaterialCommitRequested",
                "addMaterialCommitSucceed",
                "addMaterialCommitFailed",
                "resetAddMaterialCommit",
                "cancelFxWithdrawRequested",
                "cancelFxWithdrawSucceed",
                "cancelFxWithdrawFailed",
                "resetCancelFxWithdraw",
                "setCancelFxWithdrawModal",
                "cancelWithdrawRequested",
                "cancelWithdrawSucceed",
                "cancelWithdrawFailed",
                "resetCancelWithdraw",
                "setCancelWithdrawModal",
                "cancelOnGoingTransferRequested",
                "cancelOnGoingTransferSucceed",
                "cancelOnGoingTransferFailed",
                "resetCancelOnGoingTransfer",
                "setCancelOnGoingTransferModal",
                "withdrawSupportCcys",
                "withdrawSupportCcysSucceed",
                "withdrawSupportCcysFailed",
                "transferFeeRequested",
                "transferFeeSucceed",
                "transferFeeFailed",
                "setTransferApplyStep",
                "transferApplyRequested",
                "transferApplySucceed",
                "transferApplyFailed",
                "hideTransferApplyError",
                "resetTransferApply",
                "setTransferStep",
                "queryTransferAddMaterialInfoRequested",
                "queryTransferAddMaterialInfoSucceed",
                "queryTransferAddMaterialInfoFailed",
                "transferAddMaterialCommitRequested",
                "transferAddMaterialCommitSucceed",
                "transferAddMaterialCommitFailed",
                "resetTransferAddMaterialCommit",
                "cancelTransferRequested",
                "cancelTransferSucceed",
                "cancelTransferFailed",
                "resetCancelTransfer",
                "setCancelModal",
                "addCardInfoRequested",
                "addCardInfoSucceed",
                "addCardInfoFailed",
                "querySupportBoostRequested",
                "querySupportBoostSucceed",
                "querySupportBoostFailed",
                "resetQuerySupportBoost",
                "queryCanFastWithdrawWorkRequested",
                "queryCanFastWithdrawWorkFailed",
                "queryCanFastWithdrawWorkSuccess",
                "queryACrossBorderRequested",
                "queryACrossBorderSuccess",
                "queryACrossBorderFailed",
                "getAbRequested",
                "getAbSucceed",
                "getAbFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "downloadActions",
              "sourceValue": "actions/download",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/download.ts",
              "exportNames": ["downloadRequested", "downloadSucceed", "downloadFailed"]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 239,
                  "column": 53,
                  "index": 7296
                },
                "end": {
                  "line": 365,
                  "column": 1,
                  "index": 11198
                }
              },
              "actionsMethods": [
                {
                  "name": "downloadRequested",
                  "usage": "EMDownloadUsages.BankSlip"
                },
                {
                  "name": "changeTab"
                },
                {
                  "name": "withdrawListRequested"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "downloadRequested",
                  "importedName": "downloadRequested",
                  "sourceValue": "actions/download",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/download.ts",
                  "usage": "EMDownloadUsages.BankSlip"
                },
                {
                  "localName": "changeTab",
                  "importedName": "changeTab",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "localName": "withdrawListRequested",
                  "importedName": "withdrawListRequested",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 239,
                  "column": 53,
                  "index": 7296
                },
                "end": {
                  "line": 365,
                  "column": 1,
                  "index": 11198
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["actions", "downloadActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/StatementDownloadForm/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "statementActions",
              "sourceValue": "actions/statement",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/statement.ts",
              "exportNames": [
                "test",
                "queryData",
                "preQuery",
                "querySucceed",
                "queryFailed",
                "showError",
                "setShowError",
                "queryPerMonthRequested",
                "queryPerMonthSucceed",
                "queryPerMonthFailed",
                "setPerMonthShowError",
                "billListDownloadRequested",
                "billListDownloadSucceed",
                "billListDownloadFailed",
                "toggleBillListDownloadModal",
                "resetBillListDownload",
                "queryPaymentRequested",
                "queryPaymentSucceed",
                "queryPaymentFailed",
                "paymentDetailRequested",
                "paymentDetailSucceed",
                "paymentDetailFailed",
                "repaymentRequested",
                "repaymentSucceed",
                "repaymentFailed"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 59,
                  "column": 61,
                  "index": 1423
                },
                "end": {
                  "line": 173,
                  "column": 1,
                  "index": 5494
                }
              },
              "actionsMethods": [
                {
                  "name": "billListDownloadRequested"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "billListDownloadRequested",
                  "importedName": "billListDownloadRequested",
                  "sourceValue": "actions/statement",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/statement.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 59,
                  "column": 61,
                  "index": 1423
                },
                "end": {
                  "line": 173,
                  "column": 1,
                  "index": 5494
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["statementActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/StatementQueryForm/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "statementActions",
              "sourceValue": "actions/statement",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/statement.ts",
              "exportNames": [
                "test",
                "queryData",
                "preQuery",
                "querySucceed",
                "queryFailed",
                "showError",
                "setShowError",
                "queryPerMonthRequested",
                "queryPerMonthSucceed",
                "queryPerMonthFailed",
                "setPerMonthShowError",
                "billListDownloadRequested",
                "billListDownloadSucceed",
                "billListDownloadFailed",
                "toggleBillListDownloadModal",
                "resetBillListDownload",
                "queryPaymentRequested",
                "queryPaymentSucceed",
                "queryPaymentFailed",
                "paymentDetailRequested",
                "paymentDetailSucceed",
                "paymentDetailFailed",
                "repaymentRequested",
                "repaymentSucceed",
                "repaymentFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "vaActions",
              "sourceValue": "actions/collection",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/collection.ts",
              "exportNames": [
                "collectionListRequested",
                "collectionListSucceed",
                "collectionListFailed",
                "hideCollectionListError",
                "addCollectionRequested",
                "addCollectionSucceed",
                "addCollectionFailed",
                "resetAddCollection",
                "hideAddCollectionError",
                "reAddCollectionRequested",
                "oneCollectionRequested",
                "oneCollectionSucceed",
                "oneCollectionFailed",
                "hideOneCollectionError",
                "allServerProviderRequested",
                "allServerProviderSucceed",
                "allServerProviderFailed",
                "hideAllServerProviderError",
                "changeVaStatusRequested",
                "changeVaStatusSucceed",
                "changeVaStatusFailed",
                "toggleSleepModal",
                "depositLimitRequested",
                "depositLimitSucceed",
                "depositLimitFailed"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 66,
                  "column": 58,
                  "index": 1960
                },
                "end": {
                  "line": 258,
                  "column": 1,
                  "index": 7582
                }
              },
              "actionsMethods": [
                {
                  "name": "toggleBillListDownloadModal"
                },
                {
                  "name": "queryData"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "toggleBillListDownloadModal",
                  "importedName": "toggleBillListDownloadModal",
                  "sourceValue": "actions/statement",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/statement.ts"
                },
                {
                  "localName": "queryData",
                  "importedName": "queryData",
                  "sourceValue": "actions/statement",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/statement.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 66,
                  "column": 58,
                  "index": 1960
                },
                "end": {
                  "line": 258,
                  "column": 1,
                  "index": 7582
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["statementActions", "vaActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/StatementPerMonthQueryForm/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "statementActions",
              "sourceValue": "actions/statement",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/statement.ts",
              "exportNames": [
                "test",
                "queryData",
                "preQuery",
                "querySucceed",
                "queryFailed",
                "showError",
                "setShowError",
                "queryPerMonthRequested",
                "queryPerMonthSucceed",
                "queryPerMonthFailed",
                "setPerMonthShowError",
                "billListDownloadRequested",
                "billListDownloadSucceed",
                "billListDownloadFailed",
                "toggleBillListDownloadModal",
                "resetBillListDownload",
                "queryPaymentRequested",
                "queryPaymentSucceed",
                "queryPaymentFailed",
                "paymentDetailRequested",
                "paymentDetailSucceed",
                "paymentDetailFailed",
                "repaymentRequested",
                "repaymentSucceed",
                "repaymentFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "vaActions",
              "sourceValue": "actions/collection",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/collection.ts",
              "exportNames": [
                "collectionListRequested",
                "collectionListSucceed",
                "collectionListFailed",
                "hideCollectionListError",
                "addCollectionRequested",
                "addCollectionSucceed",
                "addCollectionFailed",
                "resetAddCollection",
                "hideAddCollectionError",
                "reAddCollectionRequested",
                "oneCollectionRequested",
                "oneCollectionSucceed",
                "oneCollectionFailed",
                "hideOneCollectionError",
                "allServerProviderRequested",
                "allServerProviderSucceed",
                "allServerProviderFailed",
                "hideAllServerProviderError",
                "changeVaStatusRequested",
                "changeVaStatusSucceed",
                "changeVaStatusFailed",
                "toggleSleepModal",
                "depositLimitRequested",
                "depositLimitSucceed",
                "depositLimitFailed"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 57,
                  "column": 66,
                  "index": 1764
                },
                "end": {
                  "line": 161,
                  "column": 1,
                  "index": 4696
                }
              },
              "actionsMethods": [
                {
                  "name": "queryPerMonthRequested"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "queryPerMonthRequested",
                  "importedName": "queryPerMonthRequested",
                  "sourceValue": "actions/statement",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/statement.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 57,
                  "column": 66,
                  "index": 1764
                },
                "end": {
                  "line": 161,
                  "column": 1,
                  "index": 4696
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["statementActions", "vaActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Modal/ExchangeModal/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "stepActions",
              "sourceValue": "actions/step",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/step.ts",
              "exportNames": ["setStep"]
            },
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 31,
                  "column": 63,
                  "index": 755
                },
                "end": {
                  "line": 80,
                  "column": 1,
                  "index": 2197
                }
              },
              "actionsMethods": [
                {
                  "name": "setStep",
                  "usage": "EMStepUsages.ExchangeModal"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "setStep",
                  "importedName": "setStep",
                  "sourceValue": "actions/step",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/step.ts",
                  "usage": "EMStepUsages.ExchangeModal"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 31,
                  "column": 63,
                  "index": 755
                },
                "end": {
                  "line": 80,
                  "column": 1,
                  "index": 2197
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["stepActions"],
          "objectPropertyMap": {
            "push": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/components/Details/refund.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "actions",
              "sourceValue": "actions/earnExchange",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/earnExchange.ts",
              "exportNames": [
                "earnExchangeListRequested",
                "earnExchangeListSucceed",
                "earnExchangeListFailed",
                "hideEarnExchangeListError",
                "setQueryEarnExchangeListType",
                "viewRelatedOrderListRequested",
                "viewRelatedOrderListSucceed",
                "viewRelatedOrderListFailed",
                "hideViewRelatedOrderListError",
                "queryReceiveMoneyOrderListRequested",
                "queryReceiveMoneyOrderListSucceed",
                "queryReceiveMoneyOrderListFailed",
                "hideQueryReceiveMoneyOrderListError",
                "queryReceiveMoneyOrderDetailRequested",
                "queryReceiveMoneyOrderDetailSucceed",
                "queryReceiveMoneyOrderDetailFailed",
                "hideQueryReceiveMoneyOrderDetailError",
                "resetRelateDetail",
                "setHasUpdateOrder",
                "resetSetHasUpdateOrder",
                "switchRelatedOrderModal",
                "earnListDownloadRequested",
                "earnListDownloadSucceed",
                "earnListDownloadFailed",
                "toggleEarnListDownloadModal",
                "resetEarnListDownload",
                "cancelRelateRequested",
                "cancelRelateSucceed",
                "cancelRelateFailed",
                "resetCancelRelate",
                "setCancelRelateModal"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "Index",
              "loc": {
                "start": {
                  "line": 321,
                  "column": 62,
                  "index": 9333
                },
                "end": {
                  "line": 321,
                  "column": 67,
                  "index": 9338
                },
                "identifierName": "Index"
              },
              "actionsMethods": [
                {
                  "name": "viewRelatedOrderListRequested"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "viewRelatedOrderListRequested",
                  "importedName": "viewRelatedOrderListRequested",
                  "sourceValue": "actions/earnExchange",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/earnExchange.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 120,
                  "column": 6,
                  "index": 2839
                },
                "end": {
                  "line": 120,
                  "column": 11,
                  "index": 2844
                },
                "identifierName": "Index"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["actions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/components/Details/withdrawAndTransfer.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "actions",
              "sourceValue": "actions/withdraw",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts",
              "exportNames": [
                "withdrawListRequested",
                "withdrawListSucceed",
                "withdrawListFailed",
                "hideWithdrawListError",
                "resetWithdrawList",
                "changeTab",
                "switchWithdrawApplyModal",
                "setWithdrawApplyIsReserved",
                "withdrawApplyRequested",
                "withdrawApplySucceed",
                "withdrawApplyFailed",
                "hideWithdrawApplyError",
                "setStep",
                "resetWithdrawApply",
                "withdrawInitRequested",
                "withdrawInitSucceed",
                "withdrawInitFailed",
                "hideWithdrawInitError",
                "withdrawDebtRequested",
                "withdrawDebtSucceed",
                "withdrawDebtFailed",
                "hideWithdrawDebtError",
                "removeRelatedItemOrderId",
                "addRelatedItemOrderId",
                "inputChangeRelatedItemValue",
                "resetRelatedOrders",
                "changeRelatedOrderChecked",
                "resetRelatedOrderChecked",
                "swithWithdrawFXApplyModal",
                "setWithdrawFXApplyStep",
                "setWithdrawFXApplyIsReserved",
                "withdrawFXApplyRequested",
                "withdrawFXApplySucceed",
                "withdrawFXApplyFailed",
                "hideWithdrawFXApplyError",
                "resetWithdrawFXApply",
                "isWithdrawErrorPage",
                "getFXWithdrawFeeRequested",
                "getFXWithdrawFeeSucceed",
                "getFXWithdrawFeeFailed",
                "hideGetFXWithdrawFeeError",
                "resetGetFXWithdrawFee",
                "getFXCanRelatedOrderRequested",
                "getFXCanRelatedOrderSucceed",
                "getFXCanRelatedOrderFailed",
                "hideGetFXCanRelatedOrderError",
                "resetGetFXCanRelatedOrder",
                "pushFXCanRelatedOrderRequested",
                "pushFXCanRelatedOrderSucceed",
                "pushFXCanRelatedOrderFailed",
                "swithWithdrawFXReApplyModal",
                "setWithdrawFXReApplyStep",
                "withdrawFXReApplyRequested",
                "withdrawFXReApplySucceed",
                "withdrawFXReApplyFailed",
                "resetWithdrawFXReApply",
                "hideWithdrawFXReApplyError",
                "getWithdrawReApplyItemRequested",
                "getWithdrawReApplyItemSucceed",
                "getWithdrawReApplyItemFailed",
                "resetGetWithdrawReApplyItem",
                "withdrawCheckBothFrozen",
                "withdrawCheckBothFrozenSucceed",
                "withdrawCheckBothFrozenFailed",
                "getFxWithdrawHolderTypeRequested",
                "getFxWithdrawHolderTypeSucceed",
                "getFxWithdrawHolderTypeFailed",
                "withdrawDetailRequested",
                "withdrawDetailSucceed",
                "withdrawDetailFailed",
                "resetWithdrawDetail",
                "withdrawFeeRequested",
                "withdrawFeeSucceed",
                "withdrawFeeFailed",
                "queryAddMaterialInfoRequested",
                "queryAddMaterialInfoSucceed",
                "queryAddMaterialInfoFailed",
                "addMaterialCommitRequested",
                "addMaterialCommitSucceed",
                "addMaterialCommitFailed",
                "resetAddMaterialCommit",
                "cancelFxWithdrawRequested",
                "cancelFxWithdrawSucceed",
                "cancelFxWithdrawFailed",
                "resetCancelFxWithdraw",
                "setCancelFxWithdrawModal",
                "cancelWithdrawRequested",
                "cancelWithdrawSucceed",
                "cancelWithdrawFailed",
                "resetCancelWithdraw",
                "setCancelWithdrawModal",
                "cancelOnGoingTransferRequested",
                "cancelOnGoingTransferSucceed",
                "cancelOnGoingTransferFailed",
                "resetCancelOnGoingTransfer",
                "setCancelOnGoingTransferModal",
                "withdrawSupportCcys",
                "withdrawSupportCcysSucceed",
                "withdrawSupportCcysFailed",
                "transferFeeRequested",
                "transferFeeSucceed",
                "transferFeeFailed",
                "setTransferApplyStep",
                "transferApplyRequested",
                "transferApplySucceed",
                "transferApplyFailed",
                "hideTransferApplyError",
                "resetTransferApply",
                "setTransferStep",
                "queryTransferAddMaterialInfoRequested",
                "queryTransferAddMaterialInfoSucceed",
                "queryTransferAddMaterialInfoFailed",
                "transferAddMaterialCommitRequested",
                "transferAddMaterialCommitSucceed",
                "transferAddMaterialCommitFailed",
                "resetTransferAddMaterialCommit",
                "cancelTransferRequested",
                "cancelTransferSucceed",
                "cancelTransferFailed",
                "resetCancelTransfer",
                "setCancelModal",
                "addCardInfoRequested",
                "addCardInfoSucceed",
                "addCardInfoFailed",
                "querySupportBoostRequested",
                "querySupportBoostSucceed",
                "querySupportBoostFailed",
                "resetQuerySupportBoost",
                "queryCanFastWithdrawWorkRequested",
                "queryCanFastWithdrawWorkFailed",
                "queryCanFastWithdrawWorkSuccess",
                "queryACrossBorderRequested",
                "queryACrossBorderSuccess",
                "queryACrossBorderFailed",
                "getAbRequested",
                "getAbSucceed",
                "getAbFailed"
              ]
            },
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "Index",
              "loc": {
                "start": {
                  "line": 125,
                  "column": 62,
                  "index": 3251
                },
                "end": {
                  "line": 125,
                  "column": 67,
                  "index": 3256
                },
                "identifierName": "Index"
              },
              "actionsMethods": [
                {
                  "name": "withdrawDetailRequested"
                },
                {
                  "name": "push"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "withdrawDetailRequested",
                  "importedName": "withdrawDetailRequested",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "isNamespace": false,
                  "localName": "push",
                  "importedName": "push",
                  "sourceValue": "react-router-redux",
                  "dependencyPath": "react-router-redux"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 36,
                  "column": 6,
                  "index": 714
                },
                "end": {
                  "line": 36,
                  "column": 11,
                  "index": 719
                },
                "identifierName": "Index"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["actions"],
          "objectPropertyMap": {
            "push": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Action/StepOne/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "meActions",
              "sourceValue": "actions/me",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/me.ts",
              "exportNames": [
                "getProfileRequested",
                "getProfileSucceed",
                "getProfileFailed",
                "setProfile",
                "accountRequested",
                "accountSucceed",
                "accountFailed",
                "hideAccountError",
                "userPowerRequested",
                "userPowerSucceed",
                "userPowerFailed",
                "getDepositTodoRequested",
                "getDepositTodoSucceed",
                "getDepositTodoFailed",
                "setXtMethod",
                "setTransferNotice",
                "reset",
                "platformRequested",
                "platformSucceed",
                "platformFailed"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "_BalancePayment",
              "loc": {
                "start": {
                  "line": 156,
                  "column": 86,
                  "index": 4877
                },
                "end": {
                  "line": 156,
                  "column": 101,
                  "index": 4892
                },
                "identifierName": "_BalancePayment"
              },
              "actionsMethods": [],
              "usedActionsDependencies": [],
              "nodeLoc": {
                "start": {
                  "line": 77,
                  "column": 6,
                  "index": 2570
                },
                "end": {
                  "line": 77,
                  "column": 21,
                  "index": 2585
                },
                "identifierName": "_BalancePayment"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["meActions"],
          "objectPropertyMap": {}
        },
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "meActions",
              "sourceValue": "actions/me",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/me.ts",
              "exportNames": [
                "getProfileRequested",
                "getProfileSucceed",
                "getProfileFailed",
                "setProfile",
                "accountRequested",
                "accountSucceed",
                "accountFailed",
                "hideAccountError",
                "userPowerRequested",
                "userPowerSucceed",
                "userPowerFailed",
                "getDepositTodoRequested",
                "getDepositTodoSucceed",
                "getDepositTodoFailed",
                "setXtMethod",
                "setTransferNotice",
                "reset",
                "platformRequested",
                "platformSucceed",
                "platformFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "actions",
              "sourceValue": "actions/earnExchange",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/earnExchange.ts",
              "exportNames": [
                "earnExchangeListRequested",
                "earnExchangeListSucceed",
                "earnExchangeListFailed",
                "hideEarnExchangeListError",
                "setQueryEarnExchangeListType",
                "viewRelatedOrderListRequested",
                "viewRelatedOrderListSucceed",
                "viewRelatedOrderListFailed",
                "hideViewRelatedOrderListError",
                "queryReceiveMoneyOrderListRequested",
                "queryReceiveMoneyOrderListSucceed",
                "queryReceiveMoneyOrderListFailed",
                "hideQueryReceiveMoneyOrderListError",
                "queryReceiveMoneyOrderDetailRequested",
                "queryReceiveMoneyOrderDetailSucceed",
                "queryReceiveMoneyOrderDetailFailed",
                "hideQueryReceiveMoneyOrderDetailError",
                "resetRelateDetail",
                "setHasUpdateOrder",
                "resetSetHasUpdateOrder",
                "switchRelatedOrderModal",
                "earnListDownloadRequested",
                "earnListDownloadSucceed",
                "earnListDownloadFailed",
                "toggleEarnListDownloadModal",
                "resetEarnListDownload",
                "cancelRelateRequested",
                "cancelRelateSucceed",
                "cancelRelateFailed",
                "resetCancelRelate",
                "setCancelRelateModal"
              ]
            },
            {
              "isNamespace": true,
              "localName": "withDrawActions",
              "sourceValue": "actions/withdraw",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts",
              "exportNames": [
                "withdrawListRequested",
                "withdrawListSucceed",
                "withdrawListFailed",
                "hideWithdrawListError",
                "resetWithdrawList",
                "changeTab",
                "switchWithdrawApplyModal",
                "setWithdrawApplyIsReserved",
                "withdrawApplyRequested",
                "withdrawApplySucceed",
                "withdrawApplyFailed",
                "hideWithdrawApplyError",
                "setStep",
                "resetWithdrawApply",
                "withdrawInitRequested",
                "withdrawInitSucceed",
                "withdrawInitFailed",
                "hideWithdrawInitError",
                "withdrawDebtRequested",
                "withdrawDebtSucceed",
                "withdrawDebtFailed",
                "hideWithdrawDebtError",
                "removeRelatedItemOrderId",
                "addRelatedItemOrderId",
                "inputChangeRelatedItemValue",
                "resetRelatedOrders",
                "changeRelatedOrderChecked",
                "resetRelatedOrderChecked",
                "swithWithdrawFXApplyModal",
                "setWithdrawFXApplyStep",
                "setWithdrawFXApplyIsReserved",
                "withdrawFXApplyRequested",
                "withdrawFXApplySucceed",
                "withdrawFXApplyFailed",
                "hideWithdrawFXApplyError",
                "resetWithdrawFXApply",
                "isWithdrawErrorPage",
                "getFXWithdrawFeeRequested",
                "getFXWithdrawFeeSucceed",
                "getFXWithdrawFeeFailed",
                "hideGetFXWithdrawFeeError",
                "resetGetFXWithdrawFee",
                "getFXCanRelatedOrderRequested",
                "getFXCanRelatedOrderSucceed",
                "getFXCanRelatedOrderFailed",
                "hideGetFXCanRelatedOrderError",
                "resetGetFXCanRelatedOrder",
                "pushFXCanRelatedOrderRequested",
                "pushFXCanRelatedOrderSucceed",
                "pushFXCanRelatedOrderFailed",
                "swithWithdrawFXReApplyModal",
                "setWithdrawFXReApplyStep",
                "withdrawFXReApplyRequested",
                "withdrawFXReApplySucceed",
                "withdrawFXReApplyFailed",
                "resetWithdrawFXReApply",
                "hideWithdrawFXReApplyError",
                "getWithdrawReApplyItemRequested",
                "getWithdrawReApplyItemSucceed",
                "getWithdrawReApplyItemFailed",
                "resetGetWithdrawReApplyItem",
                "withdrawCheckBothFrozen",
                "withdrawCheckBothFrozenSucceed",
                "withdrawCheckBothFrozenFailed",
                "getFxWithdrawHolderTypeRequested",
                "getFxWithdrawHolderTypeSucceed",
                "getFxWithdrawHolderTypeFailed",
                "withdrawDetailRequested",
                "withdrawDetailSucceed",
                "withdrawDetailFailed",
                "resetWithdrawDetail",
                "withdrawFeeRequested",
                "withdrawFeeSucceed",
                "withdrawFeeFailed",
                "queryAddMaterialInfoRequested",
                "queryAddMaterialInfoSucceed",
                "queryAddMaterialInfoFailed",
                "addMaterialCommitRequested",
                "addMaterialCommitSucceed",
                "addMaterialCommitFailed",
                "resetAddMaterialCommit",
                "cancelFxWithdrawRequested",
                "cancelFxWithdrawSucceed",
                "cancelFxWithdrawFailed",
                "resetCancelFxWithdraw",
                "setCancelFxWithdrawModal",
                "cancelWithdrawRequested",
                "cancelWithdrawSucceed",
                "cancelWithdrawFailed",
                "resetCancelWithdraw",
                "setCancelWithdrawModal",
                "cancelOnGoingTransferRequested",
                "cancelOnGoingTransferSucceed",
                "cancelOnGoingTransferFailed",
                "resetCancelOnGoingTransfer",
                "setCancelOnGoingTransferModal",
                "withdrawSupportCcys",
                "withdrawSupportCcysSucceed",
                "withdrawSupportCcysFailed",
                "transferFeeRequested",
                "transferFeeSucceed",
                "transferFeeFailed",
                "setTransferApplyStep",
                "transferApplyRequested",
                "transferApplySucceed",
                "transferApplyFailed",
                "hideTransferApplyError",
                "resetTransferApply",
                "setTransferStep",
                "queryTransferAddMaterialInfoRequested",
                "queryTransferAddMaterialInfoSucceed",
                "queryTransferAddMaterialInfoFailed",
                "transferAddMaterialCommitRequested",
                "transferAddMaterialCommitSucceed",
                "transferAddMaterialCommitFailed",
                "resetTransferAddMaterialCommit",
                "cancelTransferRequested",
                "cancelTransferSucceed",
                "cancelTransferFailed",
                "resetCancelTransfer",
                "setCancelModal",
                "addCardInfoRequested",
                "addCardInfoSucceed",
                "addCardInfoFailed",
                "querySupportBoostRequested",
                "querySupportBoostSucceed",
                "querySupportBoostFailed",
                "resetQuerySupportBoost",
                "queryCanFastWithdrawWorkRequested",
                "queryCanFastWithdrawWorkFailed",
                "queryCanFastWithdrawWorkSuccess",
                "queryACrossBorderRequested",
                "queryACrossBorderSuccess",
                "queryACrossBorderFailed",
                "getAbRequested",
                "getAbSucceed",
                "getAbFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "metaActions",
              "sourceValue": "actions/meta",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
              "exportNames": [
                "fetchMetaRequested",
                "fetchMetaSucceed",
                "fetchMetaFailed",
                "resetFetchMeta",
                "hideFetchMetaError"
              ]
            },
            {
              "isNamespace": false,
              "localName": "replace",
              "importedName": "replace",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            },
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "Index",
              "loc": {
                "start": {
                  "line": 515,
                  "column": 85,
                  "index": 14681
                },
                "end": {
                  "line": 515,
                  "column": 90,
                  "index": 14686
                },
                "identifierName": "Index"
              },
              "actionsMethods": [
                {
                  "name": "viewRelatedOrderListRequested"
                },
                {
                  "name": "withdrawDetailRequested"
                },
                {
                  "name": "replace"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "viewRelatedOrderListRequested",
                  "importedName": "viewRelatedOrderListRequested",
                  "sourceValue": "actions/earnExchange",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/earnExchange.ts"
                },
                {
                  "localName": "withdrawDetailRequested",
                  "importedName": "withdrawDetailRequested",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "isNamespace": false,
                  "localName": "replace",
                  "importedName": "replace",
                  "sourceValue": "react-router-redux",
                  "dependencyPath": "react-router-redux"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 190,
                  "column": 6,
                  "index": 5558
                },
                "end": {
                  "line": 190,
                  "column": 11,
                  "index": 5563
                },
                "identifierName": "Index"
              }
            }
          ],
          "warnings": [
            "[Warning] #249 lastArgument.type !== \"Identifier\" (start line: 77, start column: 24, end line: 154",
            ", end column: 2)"
          ],
          "unknownElements": [],
          "spreadElementNames": [
            "meActions",
            "actions",
            "withDrawActions",
            "metaActions"
          ],
          "objectPropertyMap": {
            "replace": "replace",
            "push": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Action/StepTwo/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "Index",
              "loc": {
                "start": {
                  "line": 337,
                  "column": 85,
                  "index": 9217
                },
                "end": {
                  "line": 337,
                  "column": 90,
                  "index": 9222
                },
                "identifierName": "Index"
              },
              "actionsMethods": [],
              "usedActionsDependencies": [],
              "nodeLoc": {
                "start": {
                  "line": 307,
                  "column": 6,
                  "index": 8328
                },
                "end": {
                  "line": 307,
                  "column": 11,
                  "index": 8333
                },
                "identifierName": "Index"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {
            "push": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Action/StepThree/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": false,
              "localName": "initialize",
              "importedName": "initialize",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "Index",
              "loc": {
                "start": {
                  "line": 177,
                  "column": 62,
                  "index": 5244
                },
                "end": {
                  "line": 177,
                  "column": 67,
                  "index": 5249
                },
                "identifierName": "Index"
              },
              "actionsMethods": [],
              "usedActionsDependencies": [],
              "nodeLoc": {
                "start": {
                  "line": 20,
                  "column": 6,
                  "index": 828
                },
                "end": {
                  "line": 20,
                  "column": 11,
                  "index": 833
                },
                "identifierName": "Index"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {
            "initialize": "initialize",
            "push": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Action/StepFour/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "Index",
              "loc": {
                "start": {
                  "line": 31,
                  "column": 62,
                  "index": 750
                },
                "end": {
                  "line": 31,
                  "column": 67,
                  "index": 755
                },
                "identifierName": "Index"
              },
              "actionsMethods": [],
              "usedActionsDependencies": [],
              "nodeLoc": {
                "start": {
                  "line": 11,
                  "column": 6,
                  "index": 273
                },
                "end": {
                  "line": 11,
                  "column": 11,
                  "index": 278
                },
                "identifierName": "Index"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {
            "push": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/PartnerPlanForm/index.jsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "actions",
              "sourceValue": "actions/partner",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/partner.ts",
              "exportNames": [
                "bindInviteCodeRequested",
                "bindInviteCodeSucceed",
                "bindInviteCodeFailed",
                "hideBindInviteCodeError",
                "initInviteCodeRequested",
                "initInviteCodeSucceed",
                "initInviteCodeFailed",
                "hideInitInviteCodeError",
                "togglePartnerEditable",
                "authorizeRequested",
                "authorizeSucceed",
                "authorizeFailed",
                "authorizeRefresh",
                "applyReportRequest",
                "applyReportSucceed",
                "applyReportFailed",
                "downloadReportRequest",
                "downloadReportSucceed",
                "downloadReportFailed",
                "getPartnerInfoRequested",
                "getPartnerInfoSucceed",
                "getPartnerInfoFailed",
                "loadReportMoreRequested",
                "changeTag",
                "loadReportMoreSucceed",
                "loadReportMoreFailed",
                "toggleShowAuditReason",
                "getOtherPartnerInfoRequested",
                "getOtherPartnerInfoSucceed",
                "getOtherPartnerInfoFailed",
                "loadOtherReportMoreRequested",
                "changeOtherReportTag",
                "loadOtherReportMoreSucceed",
                "loadOtherReportMoreFailed",
                "toggleOtherShowAuditReason",
                "updateOtherPartnerStatus",
                "updateOtherPartnerPermission",
                "submitPartnerRequested",
                "submitPartnerSucceed",
                "submitPartnerFailed",
                "updateBankCardValidationStatus",
                "submitPartnerSubAccountRequested",
                "submitPartnerSubAccountSucceed",
                "submitPartnerSubAccountFailed",
                "disablePartnerSubAccountRequested",
                "disablePartnerSubAccountSucceed",
                "disablePartnerSubAccountFailed",
                "permitPartnerSubAccountRequested",
                "permitPartnerSubAccountSucceed",
                "permitPartnerSubAccountFailed",
                "limitPartnerSubAccountRequested",
                "limitPartnerSubAccountSucceed",
                "limitPartnerSubAccountFailed",
                "partnerBindRequested",
                "partnerBindSucceed",
                "partnerBindFailed",
                "partnerBindInit"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 74,
                  "column": 55,
                  "index": 2107
                },
                "end": {
                  "line": 186,
                  "column": 1,
                  "index": 5275
                }
              },
              "actionsMethods": [
                {
                  "name": "bindInviteCodeRequested"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "bindInviteCodeRequested",
                  "importedName": "bindInviteCodeRequested",
                  "sourceValue": "actions/partner",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/partner.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 74,
                  "column": 55,
                  "index": 2107
                },
                "end": {
                  "line": 186,
                  "column": 1,
                  "index": 5275
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["actions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Coupon/index.jsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "actions",
              "sourceValue": "actions/auth",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/auth.ts",
              "exportNames": [
                "oauthRequested",
                "oauthSucceed",
                "logoutRequested",
                "logoutSucceed",
                "unauthorized",
                "signInRequested",
                "signInSucceed",
                "signInFailed",
                "initSignIn",
                "wechatSignInRequested",
                "wechatSignInSucceed",
                "wechatSignInFailed",
                "setWechatSignInSliderData",
                "setWechatSignInSliderError",
                "initWechatSignIn",
                "setWechatSignInState",
                "pollingQRScannedRequested",
                "pollingQRScannedSucceed",
                "pollingQRScannedFailed",
                "pollingQRConfirmedRequested",
                "pollingQRConfirmedSucceed",
                "pollingQRConfirmedFailed",
                "resetQRConfirmed",
                "qrcodeSigninRequested"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 26,
                  "column": 50,
                  "index": 567
                },
                "end": {
                  "line": 70,
                  "column": 1,
                  "index": 1965
                }
              },
              "actionsMethods": [],
              "usedActionsDependencies": [],
              "nodeLoc": {
                "start": {
                  "line": 26,
                  "column": 50,
                  "index": 567
                },
                "end": {
                  "line": 70,
                  "column": 1,
                  "index": 1965
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["actions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Settings/BasicSet/ResultView/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "basicSetActions",
              "sourceValue": "actions/basicSet",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/basicSet.ts",
              "exportNames": [
                "createOrUpdateFirmInfoRequested",
                "createOrUpdateFirmInfoSucceed",
                "createOrUpdateFirmInfoFailed",
                "hideCreateOrUpdateFirmInfoError",
                "resetCreateOrUpdateFirmStepInfo",
                "setNextButtonLoading",
                "setFirmVerificationStep",
                "setFirmVerificationDifferCellsFlag",
                "clearFirmVerificationDifferCellsFlag",
                "toggleOtherArea",
                "updateTargetFirmItem",
                "saveUpdateData"
              ]
            },
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 369,
                  "column": 50,
                  "index": 11001
                },
                "end": {
                  "line": 492,
                  "column": 1,
                  "index": 15371
                }
              },
              "actionsMethods": [
                {
                  "name": "setFirmVerificationStep"
                },
                {
                  "name": "push"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "setFirmVerificationStep",
                  "importedName": "setFirmVerificationStep",
                  "sourceValue": "actions/basicSet",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/basicSet.ts"
                },
                {
                  "isNamespace": false,
                  "localName": "push",
                  "importedName": "push",
                  "sourceValue": "react-router-redux",
                  "dependencyPath": "react-router-redux"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 369,
                  "column": 50,
                  "index": 11001
                },
                "end": {
                  "line": 492,
                  "column": 1,
                  "index": 15371
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["basicSetActions"],
          "objectPropertyMap": {
            "push": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/OperationListQueryForm/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "actions",
              "sourceValue": "actions/meta",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
              "exportNames": [
                "fetchMetaRequested",
                "fetchMetaSucceed",
                "fetchMetaFailed",
                "resetFetchMeta",
                "hideFetchMetaError"
              ]
            },
            {
              "isNamespace": true,
              "localName": "staffActions",
              "sourceValue": "actions/staff",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/staff.ts",
              "exportNames": [
                "staffSuffixRequested",
                "staffSuffixSucceed",
                "staffSuffixFailed",
                "toggleStaffSuffixModal",
                "hideStaffSuffixError",
                "modifyStaffSuffixRequested",
                "modifyStaffSuffixSucceed",
                "modifyStaffSuffixFailed",
                "toggleModifyStaffSuffixModal",
                "resetModifyStaffSuffix",
                "addStaffRequested",
                "addStaffSucceed",
                "addStaffFailed",
                "setAddStaffStep",
                "hideAddStaffError",
                "setAddStaffAccount",
                "resetAddStaff",
                "staffListRequested",
                "staffListSucceed",
                "staffListFailed",
                "setStaffListStatus",
                "resetStaffList",
                "oneStaffInfoRequested",
                "oneStaffInfoSucceed",
                "oneStaffInfoFailed",
                "updateOneStaffRequested",
                "updateOneStaffSucceed",
                "updateOneStaffFailed",
                "hideUpdateOneStaffError",
                "resetUpdateOneStaff",
                "delOneStaffRequested",
                "delOneStaffSucceed",
                "delOneStaffFailed",
                "hideDelOneStaffError",
                "toggleDelOneStaffModal",
                "resetStaffPwRequested",
                "resetStaffPwSucceed",
                "resetStaffPwFailed",
                "genResetStaffPassword",
                "toggleResetStaffPwModal",
                "resetResetStaffPw",
                "assignStaffDepositRequested",
                "assignStaffDepositSucceed",
                "assignStaffDepositFailed",
                "toggleAssignStaffDepositModal",
                "setDepositIdsWaitAssign",
                "addDepositIdsWaitAssign",
                "removeDepositIdsWaitAssign",
                "resetDepositIdsWaitAssign",
                "resetAssignStaffDeposit"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 34,
                  "column": 72,
                  "index": 1155
                },
                "end": {
                  "line": 127,
                  "column": 1,
                  "index": 4143
                }
              },
              "actionsMethods": [
                {
                  "name": "staffListRequested"
                },
                {
                  "name": "fetchMetaRequested",
                  "usage": "EMMetaUsages.OperationRecordsTypes"
                },
                {
                  "name": "fetchMetaRequested",
                  "usage": "EMMetaUsages.OperationRecords"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "staffListRequested",
                  "importedName": "staffListRequested",
                  "sourceValue": "actions/staff",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/staff.ts"
                },
                {
                  "localName": "fetchMetaRequested",
                  "importedName": "fetchMetaRequested",
                  "sourceValue": "actions/meta",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
                  "usage": "EMMetaUsages.OperationRecordsTypes"
                },
                {
                  "localName": "fetchMetaRequested",
                  "importedName": "fetchMetaRequested",
                  "sourceValue": "actions/meta",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
                  "usage": "EMMetaUsages.OperationRecords"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 34,
                  "column": 72,
                  "index": 1155
                },
                "end": {
                  "line": 127,
                  "column": 1,
                  "index": 4143
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["actions", "staffActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/WithdrawFXAddForm/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "fileActions",
              "sourceValue": "actions/file",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/file.ts",
              "exportNames": [
                "uploadFileRequested",
                "uploadFileSucceed",
                "uploadFileFailed",
                "hideUploadFileError",
                "deleteFile",
                "deleteSyncFile",
                "resetFile",
                "resetCreateTransferAccountFile",
                "resetAllFile",
                "fileDownload",
                "getThumbnailRequested",
                "getThumbnailSucceed",
                "getThumbnailFailed",
                "initGetThumbnail",
                "setAnnexeRenameModal",
                "updateAnnexeFileName"
              ]
            },
            {
              "isNamespace": true,
              "localName": "withdrawalsActions",
              "sourceValue": "actions/withdrawals",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts",
              "exportNames": [
                "accountListRequested",
                "accountListSucceed",
                "accountListFailed",
                "hideAccountListError",
                "deleteItemRequested",
                "deleteItemSucceed",
                "deleteItemFailed",
                "swithDeleteItemModal",
                "setDeleteItemId",
                "setDeleteItemType",
                "hideDeleteItemError",
                "historyDetailRequested",
                "historyDetailSucceed",
                "historyDetailFailed",
                "hideHistoryDetailError",
                "createAccountRequested",
                "createAccountSucceed",
                "createAccountFailed",
                "setCreateAccountStep",
                "resetCreateAccount",
                "hideCreateAccountError",
                "withdrawFXAddRequested",
                "withdrawFXAddSucceed",
                "withdrawFXAddFailed",
                "hideWithdrawFXAddError",
                "setWithdrawFXAddStep",
                "resetWithdrawFXAdd",
                "withdrawFXAddVerifyRequested",
                "withdrawFXAddVerifySucceed",
                "withdrawFXAddVerifyFailed",
                "queryBanks",
                "queryBanksSucceed",
                "queryBanksFailed",
                "queryProvinces",
                "queryProvincesSucceed",
                "queryProvincesFailed",
                "getLegalProfile",
                "getLegalProfileSucceed",
                "getLegalProfileFailed",
                "createTransferAccountRequested",
                "createTransferAccountSucceed",
                "createTransferAccountFailed",
                "hideCreateTransferAccountError",
                "setCreateTransferAccountStep",
                "resetCreateTransferAccount",
                "setBeneficiaryNameError",
                "getBeneficiayAccountNoRequested",
                "getBeneficiayAccountNoSucceed",
                "getBeneficiayAccountNoFailed",
                "resetBeneficiayAccountNo",
                "getAccountLimitRequested",
                "getAccountLimitSucceed",
                "getAccountLimitFailed",
                "bindAccountPhoneNoRequested",
                "bindAccountPhoneNoSucceed",
                "bindAccountPhoneNoFailed",
                "bindAccountPhoneNoVerifyFailed",
                "swithBindPhoneNoModal",
                "getBeneficiayPhoneNoRequested",
                "getBeneficiayPhoneNoSucceed",
                "getBeneficiayPhoneNoFailed",
                "resetBeneficiayPhoneNo",
                "getFXPrivateAgreementRequested",
                "getFXPrivateAgreementSucceed",
                "getFXPrivateAgreementFailed",
                "getFXPublicAgreementRequested",
                "getFXPublicAgreementSucceed",
                "getFXPublicAgreementFailed",
                "getTransferPublicAgreementRequested",
                "getTransferPublicAgreementSucceed",
                "getTransferPublicAgreementFailed",
                "getWithdrawNormalAgreementRequested",
                "getWithdrawNormalAgreementSucceed",
                "getWithdrawNormalAgreementFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "securityActions",
              "sourceValue": "actions/security",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/security.ts",
              "exportNames": [
                "checkABVType",
                "openABVPanel",
                "closeABVPanel",
                "validateCaptchaRequested",
                "validateCaptchaSucceed",
                "validateCaptchaFailed",
                "initValidateCaptcha",
                "setABVVeriType",
                "logSliderVeriInfo",
                "updateXRateLimitRoute"
              ]
            },
            {
              "isNamespace": true,
              "localName": "vcodeActions",
              "sourceValue": "actions/vcode",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/vcode.ts",
              "exportNames": [
                "updateCountDownSeconds",
                "stopVcodeCountDown",
                "sendVcodeMessage",
                "sendVcodeMessageSucceed",
                "sendVcodeMessageFailed",
                "hideVcodeTip"
              ]
            },
            {
              "isNamespace": true,
              "localName": "modalActions",
              "sourceValue": "actions/modal",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/modal.ts",
              "exportNames": [
                "toggleModalStatus",
                "toggleModalWithCallback",
                "toggleGlobalPriorityModalStatus"
              ]
            },
            {
              "isNamespace": true,
              "localName": "userActions",
              "sourceValue": "actions/user",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts",
              "exportNames": [
                "getUserFlowId",
                "getUserFlowIdAndCaptcha",
                "getUserFlowIdSucceed",
                "getUserFlowIdFailed",
                "initUserFlowId",
                "getUserCaptcha",
                "getUserCaptchaSucceed",
                "getUserCaptchaFailed",
                "initUserCaptcha",
                "verifyMfaRequested",
                "verifyMfaSucceed",
                "verifyMfaFailed",
                "initVerifyMfa",
                "setAuthId",
                "resetAuthId",
                "executeAuthIdCallBackRequested",
                "executeAuthIdCallBackSucceed",
                "executeAuthIdCallBackFailed",
                "sendMfaMessageRequested",
                "getMfaCaptchaRequested",
                "getMfaCaptchaSucceed",
                "getMfaCaptchaFailed",
                "initMfaCaptcha",
                "getWhiteListRequested",
                "getWhiteListSucceed",
                "getWhiteListFailed",
                "getWhiteListInit",
                "setMfaJson",
                "resetMfaJson",
                "queryIndustryRequested",
                "queryIndustrySucceed",
                "queryIndustryFailed",
                "queryRestrictionList",
                "queryRestrictionListSucceed",
                "queryRestrictionListFailed"
              ]
            },
            {
              "isNamespace": false,
              "localName": "reset",
              "importedName": "reset",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "touch",
              "importedName": "touch",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            },
            {
              "isNamespace": false,
              "localName": "change",
              "importedName": "change",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 306,
                  "column": 57,
                  "index": 9316
                },
                "end": {
                  "line": 1348,
                  "column": 1,
                  "index": 43100
                }
              },
              "actionsMethods": [
                {
                  "name": "exchangeStaffListRequest"
                },
                {
                  "name": "querySupplierCardsReq"
                },
                {
                  "name": "getUserFlowId",
                  "usage": ""
                },
                {
                  "name": "queryBanks"
                },
                {
                  "name": "getLegalProfile"
                },
                {
                  "name": "historyDetailRequested"
                },
                {
                  "name": "change"
                },
                {
                  "name": "setWithdrawFXAddStep"
                },
                {
                  "name": "uploadFileRequested"
                },
                {
                  "name": "deleteFile",
                  "usageVariable": "usage"
                },
                {
                  "name": "reset"
                },
                {
                  "name": "resetFile",
                  "usage": "BankAccountPowerOfAttorney"
                },
                {
                  "name": "resetWithdrawFXAdd"
                },
                {
                  "name": "getFXPrivateAgreementRequested"
                },
                {
                  "name": "getFXPublicAgreementRequested"
                },
                {
                  "name": "touch"
                },
                {
                  "name": "hideWithdrawFXAddError"
                },
                {
                  "name": "withdrawFXAddVerifyRequested"
                },
                {
                  "name": "withdrawFXAddRequested"
                },
                {
                  "name": "sendVcodeMessage",
                  "usage": ""
                },
                {
                  "name": "checkABVType",
                  "usage": ""
                },
                {
                  "name": "toggleModalStatus",
                  "usage": "EMModalUsages.FXLackResistPermit"
                },
                {
                  "name": "push"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "getUserFlowId",
                  "importedName": "getUserFlowId",
                  "sourceValue": "actions/user",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts",
                  "usage": ""
                },
                {
                  "localName": "queryBanks",
                  "importedName": "queryBanks",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts"
                },
                {
                  "localName": "getLegalProfile",
                  "importedName": "getLegalProfile",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts"
                },
                {
                  "localName": "historyDetailRequested",
                  "importedName": "historyDetailRequested",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts"
                },
                {
                  "isNamespace": false,
                  "localName": "change",
                  "importedName": "change",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                },
                {
                  "localName": "setWithdrawFXAddStep",
                  "importedName": "setWithdrawFXAddStep",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts"
                },
                {
                  "localName": "uploadFileRequested",
                  "importedName": "uploadFileRequested",
                  "sourceValue": "actions/file",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/file.ts"
                },
                {
                  "localName": "deleteFile",
                  "importedName": "deleteFile",
                  "sourceValue": "actions/file",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/file.ts",
                  "usageVariable": "usage"
                },
                {
                  "isNamespace": false,
                  "localName": "reset",
                  "importedName": "reset",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                },
                {
                  "localName": "resetFile",
                  "importedName": "resetFile",
                  "sourceValue": "actions/file",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/file.ts",
                  "usage": "BankAccountPowerOfAttorney"
                },
                {
                  "localName": "resetWithdrawFXAdd",
                  "importedName": "resetWithdrawFXAdd",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts"
                },
                {
                  "localName": "getFXPrivateAgreementRequested",
                  "importedName": "getFXPrivateAgreementRequested",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts"
                },
                {
                  "localName": "getFXPublicAgreementRequested",
                  "importedName": "getFXPublicAgreementRequested",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts"
                },
                {
                  "isNamespace": false,
                  "localName": "touch",
                  "importedName": "touch",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                },
                {
                  "localName": "hideWithdrawFXAddError",
                  "importedName": "hideWithdrawFXAddError",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts"
                },
                {
                  "localName": "withdrawFXAddVerifyRequested",
                  "importedName": "withdrawFXAddVerifyRequested",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts"
                },
                {
                  "localName": "withdrawFXAddRequested",
                  "importedName": "withdrawFXAddRequested",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts"
                },
                {
                  "localName": "sendVcodeMessage",
                  "importedName": "sendVcodeMessage",
                  "sourceValue": "actions/vcode",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/vcode.ts",
                  "usage": ""
                },
                {
                  "localName": "checkABVType",
                  "importedName": "checkABVType",
                  "sourceValue": "actions/security",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/security.ts",
                  "usage": ""
                },
                {
                  "localName": "toggleModalStatus",
                  "importedName": "toggleModalStatus",
                  "sourceValue": "actions/modal",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/modal.ts",
                  "usage": "EMModalUsages.FXLackResistPermit"
                },
                {
                  "isNamespace": false,
                  "localName": "push",
                  "importedName": "push",
                  "sourceValue": "react-router-redux",
                  "dependencyPath": "react-router-redux"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 306,
                  "column": 57,
                  "index": 9316
                },
                "end": {
                  "line": 1348,
                  "column": 1,
                  "index": 43100
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [
            "fileActions",
            "withdrawalsActions",
            "securityActions",
            "vcodeActions",
            "modalActions",
            "userActions"
          ],
          "objectPropertyMap": {
            "reset": "reset",
            "touch": "touch",
            "push": "push",
            "change": "change"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/AddWithdrawalAccount/StepOne.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "actions",
              "sourceValue": "actions/withdrawals",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts",
              "exportNames": [
                "accountListRequested",
                "accountListSucceed",
                "accountListFailed",
                "hideAccountListError",
                "deleteItemRequested",
                "deleteItemSucceed",
                "deleteItemFailed",
                "swithDeleteItemModal",
                "setDeleteItemId",
                "setDeleteItemType",
                "hideDeleteItemError",
                "historyDetailRequested",
                "historyDetailSucceed",
                "historyDetailFailed",
                "hideHistoryDetailError",
                "createAccountRequested",
                "createAccountSucceed",
                "createAccountFailed",
                "setCreateAccountStep",
                "resetCreateAccount",
                "hideCreateAccountError",
                "withdrawFXAddRequested",
                "withdrawFXAddSucceed",
                "withdrawFXAddFailed",
                "hideWithdrawFXAddError",
                "setWithdrawFXAddStep",
                "resetWithdrawFXAdd",
                "withdrawFXAddVerifyRequested",
                "withdrawFXAddVerifySucceed",
                "withdrawFXAddVerifyFailed",
                "queryBanks",
                "queryBanksSucceed",
                "queryBanksFailed",
                "queryProvinces",
                "queryProvincesSucceed",
                "queryProvincesFailed",
                "getLegalProfile",
                "getLegalProfileSucceed",
                "getLegalProfileFailed",
                "createTransferAccountRequested",
                "createTransferAccountSucceed",
                "createTransferAccountFailed",
                "hideCreateTransferAccountError",
                "setCreateTransferAccountStep",
                "resetCreateTransferAccount",
                "setBeneficiaryNameError",
                "getBeneficiayAccountNoRequested",
                "getBeneficiayAccountNoSucceed",
                "getBeneficiayAccountNoFailed",
                "resetBeneficiayAccountNo",
                "getAccountLimitRequested",
                "getAccountLimitSucceed",
                "getAccountLimitFailed",
                "bindAccountPhoneNoRequested",
                "bindAccountPhoneNoSucceed",
                "bindAccountPhoneNoFailed",
                "bindAccountPhoneNoVerifyFailed",
                "swithBindPhoneNoModal",
                "getBeneficiayPhoneNoRequested",
                "getBeneficiayPhoneNoSucceed",
                "getBeneficiayPhoneNoFailed",
                "resetBeneficiayPhoneNo",
                "getFXPrivateAgreementRequested",
                "getFXPrivateAgreementSucceed",
                "getFXPrivateAgreementFailed",
                "getFXPublicAgreementRequested",
                "getFXPublicAgreementSucceed",
                "getFXPublicAgreementFailed",
                "getTransferPublicAgreementRequested",
                "getTransferPublicAgreementSucceed",
                "getTransferPublicAgreementFailed",
                "getWithdrawNormalAgreementRequested",
                "getWithdrawNormalAgreementSucceed",
                "getWithdrawNormalAgreementFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "fileActions",
              "sourceValue": "actions/file",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/file.ts",
              "exportNames": [
                "uploadFileRequested",
                "uploadFileSucceed",
                "uploadFileFailed",
                "hideUploadFileError",
                "deleteFile",
                "deleteSyncFile",
                "resetFile",
                "resetCreateTransferAccountFile",
                "resetAllFile",
                "fileDownload",
                "getThumbnailRequested",
                "getThumbnailSucceed",
                "getThumbnailFailed",
                "initGetThumbnail",
                "setAnnexeRenameModal",
                "updateAnnexeFileName"
              ]
            },
            {
              "isNamespace": true,
              "localName": "utilActions",
              "sourceValue": "actions/util",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/util.ts",
              "exportNames": [
                "pubKeyRequested",
                "pubKeySucceed",
                "pubKeyFailed",
                "toggleOrderAnnexUpload",
                "setIsMobile",
                "getFirmStatusRequested",
                "getFirmStatusSucceed",
                "getFirmStatusFailed",
                "setPreviewPageId",
                "setCountrys",
                "setProvinces",
                "setLoadAddress",
                "getLocationRequested",
                "getLocationSucceed",
                "getLocationFailed",
                "touchAndChangeAddressFields",
                "resetAddressFieldsThenSetCountry"
              ]
            },
            {
              "isNamespace": true,
              "localName": "metaActions",
              "sourceValue": "actions/meta",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
              "exportNames": [
                "fetchMetaRequested",
                "fetchMetaSucceed",
                "fetchMetaFailed",
                "resetFetchMeta",
                "hideFetchMetaError"
              ]
            },
            {
              "isNamespace": false,
              "localName": "initialize",
              "importedName": "initialize",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "reset",
              "importedName": "reset",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "change",
              "importedName": "change",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 276,
                  "column": 77,
                  "index": 10704
                },
                "end": {
                  "line": 708,
                  "column": 1,
                  "index": 23862
                }
              },
              "actionsMethods": [
                {
                  "name": "resetFetchMeta",
                  "usage": "EMMetaUsages.GetCountryBlackList"
                },
                {
                  "name": "setBeneficiaryNameError",
                  "usage": "normal"
                },
                {
                  "name": "getLocationRequested",
                  "usage": "country"
                },
                {
                  "name": "change"
                },
                {
                  "name": "deleteFile",
                  "usageVariable": "usage"
                },
                {
                  "name": "touchAndChangeAddressFields"
                },
                {
                  "name": "setCreateAccountStep"
                },
                {
                  "name": "fetchMetaRequested",
                  "usage": "EMMetaUsages.GetCountryBlackList"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "resetFetchMeta",
                  "importedName": "resetFetchMeta",
                  "sourceValue": "actions/meta",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
                  "usage": "EMMetaUsages.GetCountryBlackList"
                },
                {
                  "localName": "setBeneficiaryNameError",
                  "importedName": "setBeneficiaryNameError",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts",
                  "usage": "normal"
                },
                {
                  "localName": "getLocationRequested",
                  "importedName": "getLocationRequested",
                  "sourceValue": "actions/util",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/util.ts",
                  "usage": "country"
                },
                {
                  "isNamespace": false,
                  "localName": "change",
                  "importedName": "change",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                },
                {
                  "localName": "deleteFile",
                  "importedName": "deleteFile",
                  "sourceValue": "actions/file",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/file.ts",
                  "usageVariable": "usage"
                },
                {
                  "localName": "touchAndChangeAddressFields",
                  "importedName": "touchAndChangeAddressFields",
                  "sourceValue": "actions/util",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/util.ts"
                },
                {
                  "localName": "setCreateAccountStep",
                  "importedName": "setCreateAccountStep",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts"
                },
                {
                  "localName": "fetchMetaRequested",
                  "importedName": "fetchMetaRequested",
                  "sourceValue": "actions/meta",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
                  "usage": "EMMetaUsages.GetCountryBlackList"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 276,
                  "column": 77,
                  "index": 10704
                },
                "end": {
                  "line": 708,
                  "column": 1,
                  "index": 23862
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["actions", "fileActions", "utilActions", "metaActions"],
          "objectPropertyMap": {
            "initialize": "initialize",
            "reset": "reset",
            "change": "change"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/AddWithdrawalAccount/StepTwo.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "actions",
              "sourceValue": "actions/withdrawals",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts",
              "exportNames": [
                "accountListRequested",
                "accountListSucceed",
                "accountListFailed",
                "hideAccountListError",
                "deleteItemRequested",
                "deleteItemSucceed",
                "deleteItemFailed",
                "swithDeleteItemModal",
                "setDeleteItemId",
                "setDeleteItemType",
                "hideDeleteItemError",
                "historyDetailRequested",
                "historyDetailSucceed",
                "historyDetailFailed",
                "hideHistoryDetailError",
                "createAccountRequested",
                "createAccountSucceed",
                "createAccountFailed",
                "setCreateAccountStep",
                "resetCreateAccount",
                "hideCreateAccountError",
                "withdrawFXAddRequested",
                "withdrawFXAddSucceed",
                "withdrawFXAddFailed",
                "hideWithdrawFXAddError",
                "setWithdrawFXAddStep",
                "resetWithdrawFXAdd",
                "withdrawFXAddVerifyRequested",
                "withdrawFXAddVerifySucceed",
                "withdrawFXAddVerifyFailed",
                "queryBanks",
                "queryBanksSucceed",
                "queryBanksFailed",
                "queryProvinces",
                "queryProvincesSucceed",
                "queryProvincesFailed",
                "getLegalProfile",
                "getLegalProfileSucceed",
                "getLegalProfileFailed",
                "createTransferAccountRequested",
                "createTransferAccountSucceed",
                "createTransferAccountFailed",
                "hideCreateTransferAccountError",
                "setCreateTransferAccountStep",
                "resetCreateTransferAccount",
                "setBeneficiaryNameError",
                "getBeneficiayAccountNoRequested",
                "getBeneficiayAccountNoSucceed",
                "getBeneficiayAccountNoFailed",
                "resetBeneficiayAccountNo",
                "getAccountLimitRequested",
                "getAccountLimitSucceed",
                "getAccountLimitFailed",
                "bindAccountPhoneNoRequested",
                "bindAccountPhoneNoSucceed",
                "bindAccountPhoneNoFailed",
                "bindAccountPhoneNoVerifyFailed",
                "swithBindPhoneNoModal",
                "getBeneficiayPhoneNoRequested",
                "getBeneficiayPhoneNoSucceed",
                "getBeneficiayPhoneNoFailed",
                "resetBeneficiayPhoneNo",
                "getFXPrivateAgreementRequested",
                "getFXPrivateAgreementSucceed",
                "getFXPrivateAgreementFailed",
                "getFXPublicAgreementRequested",
                "getFXPublicAgreementSucceed",
                "getFXPublicAgreementFailed",
                "getTransferPublicAgreementRequested",
                "getTransferPublicAgreementSucceed",
                "getTransferPublicAgreementFailed",
                "getWithdrawNormalAgreementRequested",
                "getWithdrawNormalAgreementSucceed",
                "getWithdrawNormalAgreementFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "fileActions",
              "sourceValue": "actions/file",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/file.ts",
              "exportNames": [
                "uploadFileRequested",
                "uploadFileSucceed",
                "uploadFileFailed",
                "hideUploadFileError",
                "deleteFile",
                "deleteSyncFile",
                "resetFile",
                "resetCreateTransferAccountFile",
                "resetAllFile",
                "fileDownload",
                "getThumbnailRequested",
                "getThumbnailSucceed",
                "getThumbnailFailed",
                "initGetThumbnail",
                "setAnnexeRenameModal",
                "updateAnnexeFileName"
              ]
            },
            {
              "isNamespace": true,
              "localName": "submitActions",
              "sourceValue": "actions/submit",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/submit.ts",
              "exportNames": [
                "submitRequested",
                "submitSucceed",
                "submitFailed",
                "resetSubmit"
              ]
            },
            {
              "isNamespace": true,
              "localName": "withdrawActions",
              "sourceValue": "actions/withdrawals",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts",
              "exportNames": [
                "accountListRequested",
                "accountListSucceed",
                "accountListFailed",
                "hideAccountListError",
                "deleteItemRequested",
                "deleteItemSucceed",
                "deleteItemFailed",
                "swithDeleteItemModal",
                "setDeleteItemId",
                "setDeleteItemType",
                "hideDeleteItemError",
                "historyDetailRequested",
                "historyDetailSucceed",
                "historyDetailFailed",
                "hideHistoryDetailError",
                "createAccountRequested",
                "createAccountSucceed",
                "createAccountFailed",
                "setCreateAccountStep",
                "resetCreateAccount",
                "hideCreateAccountError",
                "withdrawFXAddRequested",
                "withdrawFXAddSucceed",
                "withdrawFXAddFailed",
                "hideWithdrawFXAddError",
                "setWithdrawFXAddStep",
                "resetWithdrawFXAdd",
                "withdrawFXAddVerifyRequested",
                "withdrawFXAddVerifySucceed",
                "withdrawFXAddVerifyFailed",
                "queryBanks",
                "queryBanksSucceed",
                "queryBanksFailed",
                "queryProvinces",
                "queryProvincesSucceed",
                "queryProvincesFailed",
                "getLegalProfile",
                "getLegalProfileSucceed",
                "getLegalProfileFailed",
                "createTransferAccountRequested",
                "createTransferAccountSucceed",
                "createTransferAccountFailed",
                "hideCreateTransferAccountError",
                "setCreateTransferAccountStep",
                "resetCreateTransferAccount",
                "setBeneficiaryNameError",
                "getBeneficiayAccountNoRequested",
                "getBeneficiayAccountNoSucceed",
                "getBeneficiayAccountNoFailed",
                "resetBeneficiayAccountNo",
                "getAccountLimitRequested",
                "getAccountLimitSucceed",
                "getAccountLimitFailed",
                "bindAccountPhoneNoRequested",
                "bindAccountPhoneNoSucceed",
                "bindAccountPhoneNoFailed",
                "bindAccountPhoneNoVerifyFailed",
                "swithBindPhoneNoModal",
                "getBeneficiayPhoneNoRequested",
                "getBeneficiayPhoneNoSucceed",
                "getBeneficiayPhoneNoFailed",
                "resetBeneficiayPhoneNo",
                "getFXPrivateAgreementRequested",
                "getFXPrivateAgreementSucceed",
                "getFXPrivateAgreementFailed",
                "getFXPublicAgreementRequested",
                "getFXPublicAgreementSucceed",
                "getFXPublicAgreementFailed",
                "getTransferPublicAgreementRequested",
                "getTransferPublicAgreementSucceed",
                "getTransferPublicAgreementFailed",
                "getWithdrawNormalAgreementRequested",
                "getWithdrawNormalAgreementSucceed",
                "getWithdrawNormalAgreementFailed"
              ]
            },
            {
              "isNamespace": false,
              "localName": "reset",
              "importedName": "reset",
              "sourceValue": "redux-form",
              "dependencyPath": "redux-form"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 129,
                  "column": 80,
                  "index": 4258
                },
                "end": {
                  "line": 383,
                  "column": 1,
                  "index": 12224
                }
              },
              "actionsMethods": [
                {
                  "name": "reset"
                },
                {
                  "name": "getWithdrawNormalAgreementRequested"
                },
                {
                  "name": "createAccountRequested"
                },
                {
                  "name": "setCreateAccountStep"
                }
              ],
              "usedActionsDependencies": [
                {
                  "isNamespace": false,
                  "localName": "reset",
                  "importedName": "reset",
                  "sourceValue": "redux-form",
                  "dependencyPath": "redux-form"
                },
                {
                  "localName": "getWithdrawNormalAgreementRequested",
                  "importedName": "getWithdrawNormalAgreementRequested",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts"
                },
                {
                  "localName": "createAccountRequested",
                  "importedName": "createAccountRequested",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts"
                },
                {
                  "localName": "setCreateAccountStep",
                  "importedName": "setCreateAccountStep",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 129,
                  "column": 80,
                  "index": 4258
                },
                "end": {
                  "line": 383,
                  "column": 1,
                  "index": 12224
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [
            "actions",
            "fileActions",
            "submitActions",
            "withdrawActions"
          ],
          "objectPropertyMap": {
            "reset": "reset"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/AddTransferAccount/StepOne.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "actions",
              "sourceValue": "actions/withdrawals",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts",
              "exportNames": [
                "accountListRequested",
                "accountListSucceed",
                "accountListFailed",
                "hideAccountListError",
                "deleteItemRequested",
                "deleteItemSucceed",
                "deleteItemFailed",
                "swithDeleteItemModal",
                "setDeleteItemId",
                "setDeleteItemType",
                "hideDeleteItemError",
                "historyDetailRequested",
                "historyDetailSucceed",
                "historyDetailFailed",
                "hideHistoryDetailError",
                "createAccountRequested",
                "createAccountSucceed",
                "createAccountFailed",
                "setCreateAccountStep",
                "resetCreateAccount",
                "hideCreateAccountError",
                "withdrawFXAddRequested",
                "withdrawFXAddSucceed",
                "withdrawFXAddFailed",
                "hideWithdrawFXAddError",
                "setWithdrawFXAddStep",
                "resetWithdrawFXAdd",
                "withdrawFXAddVerifyRequested",
                "withdrawFXAddVerifySucceed",
                "withdrawFXAddVerifyFailed",
                "queryBanks",
                "queryBanksSucceed",
                "queryBanksFailed",
                "queryProvinces",
                "queryProvincesSucceed",
                "queryProvincesFailed",
                "getLegalProfile",
                "getLegalProfileSucceed",
                "getLegalProfileFailed",
                "createTransferAccountRequested",
                "createTransferAccountSucceed",
                "createTransferAccountFailed",
                "hideCreateTransferAccountError",
                "setCreateTransferAccountStep",
                "resetCreateTransferAccount",
                "setBeneficiaryNameError",
                "getBeneficiayAccountNoRequested",
                "getBeneficiayAccountNoSucceed",
                "getBeneficiayAccountNoFailed",
                "resetBeneficiayAccountNo",
                "getAccountLimitRequested",
                "getAccountLimitSucceed",
                "getAccountLimitFailed",
                "bindAccountPhoneNoRequested",
                "bindAccountPhoneNoSucceed",
                "bindAccountPhoneNoFailed",
                "bindAccountPhoneNoVerifyFailed",
                "swithBindPhoneNoModal",
                "getBeneficiayPhoneNoRequested",
                "getBeneficiayPhoneNoSucceed",
                "getBeneficiayPhoneNoFailed",
                "resetBeneficiayPhoneNo",
                "getFXPrivateAgreementRequested",
                "getFXPrivateAgreementSucceed",
                "getFXPrivateAgreementFailed",
                "getFXPublicAgreementRequested",
                "getFXPublicAgreementSucceed",
                "getFXPublicAgreementFailed",
                "getTransferPublicAgreementRequested",
                "getTransferPublicAgreementSucceed",
                "getTransferPublicAgreementFailed",
                "getWithdrawNormalAgreementRequested",
                "getWithdrawNormalAgreementSucceed",
                "getWithdrawNormalAgreementFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "fileActions",
              "sourceValue": "actions/file",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/file.ts",
              "exportNames": [
                "uploadFileRequested",
                "uploadFileSucceed",
                "uploadFileFailed",
                "hideUploadFileError",
                "deleteFile",
                "deleteSyncFile",
                "resetFile",
                "resetCreateTransferAccountFile",
                "resetAllFile",
                "fileDownload",
                "getThumbnailRequested",
                "getThumbnailSucceed",
                "getThumbnailFailed",
                "initGetThumbnail",
                "setAnnexeRenameModal",
                "updateAnnexeFileName"
              ]
            },
            {
              "isNamespace": true,
              "localName": "utilActions",
              "sourceValue": "actions/util",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/util.ts",
              "exportNames": [
                "pubKeyRequested",
                "pubKeySucceed",
                "pubKeyFailed",
                "toggleOrderAnnexUpload",
                "setIsMobile",
                "getFirmStatusRequested",
                "getFirmStatusSucceed",
                "getFirmStatusFailed",
                "setPreviewPageId",
                "setCountrys",
                "setProvinces",
                "setLoadAddress",
                "getLocationRequested",
                "getLocationSucceed",
                "getLocationFailed",
                "touchAndChangeAddressFields",
                "resetAddressFieldsThenSetCountry"
              ]
            },
            {
              "isNamespace": true,
              "localName": "metaActions",
              "sourceValue": "actions/meta",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
              "exportNames": [
                "fetchMetaRequested",
                "fetchMetaSucceed",
                "fetchMetaFailed",
                "resetFetchMeta",
                "hideFetchMetaError"
              ]
            },
            {
              "isNamespace": false,
              "localName": "touch",
              "importedName": "touch",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "change",
              "importedName": "change",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "initialize",
              "importedName": "initialize",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 342,
                  "column": 60,
                  "index": 12790
                },
                "end": {
                  "line": 1084,
                  "column": 1,
                  "index": 38501
                }
              },
              "actionsMethods": [
                {
                  "name": "resetFetchMeta",
                  "usage": "EMMetaUsages.GetCountryBlackList"
                },
                {
                  "name": "setBeneficiaryNameError",
                  "usage": "transfer"
                },
                {
                  "name": "getLocationRequested",
                  "usage": "country"
                },
                {
                  "name": "change"
                },
                {
                  "name": "uploadFileRequested"
                },
                {
                  "name": "deleteFile",
                  "usageVariable": "usage"
                },
                {
                  "name": "uploadFileFailed",
                  "usage": "usages.TRANSFER_RELATED"
                },
                {
                  "name": "setCreateTransferAccountStep"
                },
                {
                  "name": "touchAndChangeAddressFields"
                },
                {
                  "name": "fetchMetaRequested",
                  "usage": "EMMetaUsages.GetCountryBlackList"
                },
                {
                  "name": "push"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "resetFetchMeta",
                  "importedName": "resetFetchMeta",
                  "sourceValue": "actions/meta",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
                  "usage": "EMMetaUsages.GetCountryBlackList"
                },
                {
                  "localName": "setBeneficiaryNameError",
                  "importedName": "setBeneficiaryNameError",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts",
                  "usage": "transfer"
                },
                {
                  "localName": "getLocationRequested",
                  "importedName": "getLocationRequested",
                  "sourceValue": "actions/util",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/util.ts",
                  "usage": "country"
                },
                {
                  "isNamespace": false,
                  "localName": "change",
                  "importedName": "change",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                },
                {
                  "localName": "uploadFileRequested",
                  "importedName": "uploadFileRequested",
                  "sourceValue": "actions/file",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/file.ts"
                },
                {
                  "localName": "deleteFile",
                  "importedName": "deleteFile",
                  "sourceValue": "actions/file",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/file.ts",
                  "usageVariable": "usage"
                },
                {
                  "localName": "uploadFileFailed",
                  "importedName": "uploadFileFailed",
                  "sourceValue": "actions/file",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/file.ts",
                  "usage": "usages.TRANSFER_RELATED"
                },
                {
                  "localName": "setCreateTransferAccountStep",
                  "importedName": "setCreateTransferAccountStep",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts"
                },
                {
                  "localName": "touchAndChangeAddressFields",
                  "importedName": "touchAndChangeAddressFields",
                  "sourceValue": "actions/util",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/util.ts"
                },
                {
                  "localName": "fetchMetaRequested",
                  "importedName": "fetchMetaRequested",
                  "sourceValue": "actions/meta",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
                  "usage": "EMMetaUsages.GetCountryBlackList"
                },
                {
                  "isNamespace": false,
                  "localName": "push",
                  "importedName": "push",
                  "sourceValue": "react-router-redux",
                  "dependencyPath": "react-router-redux"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 342,
                  "column": 60,
                  "index": 12790
                },
                "end": {
                  "line": 1084,
                  "column": 1,
                  "index": 38501
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["actions", "fileActions", "utilActions", "metaActions"],
          "objectPropertyMap": {
            "touch": "touch",
            "change": "change",
            "initialize": "initialize",
            "push": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/AddTransferAccount/StepTwo.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "actions",
              "sourceValue": "actions/withdrawals",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts",
              "exportNames": [
                "accountListRequested",
                "accountListSucceed",
                "accountListFailed",
                "hideAccountListError",
                "deleteItemRequested",
                "deleteItemSucceed",
                "deleteItemFailed",
                "swithDeleteItemModal",
                "setDeleteItemId",
                "setDeleteItemType",
                "hideDeleteItemError",
                "historyDetailRequested",
                "historyDetailSucceed",
                "historyDetailFailed",
                "hideHistoryDetailError",
                "createAccountRequested",
                "createAccountSucceed",
                "createAccountFailed",
                "setCreateAccountStep",
                "resetCreateAccount",
                "hideCreateAccountError",
                "withdrawFXAddRequested",
                "withdrawFXAddSucceed",
                "withdrawFXAddFailed",
                "hideWithdrawFXAddError",
                "setWithdrawFXAddStep",
                "resetWithdrawFXAdd",
                "withdrawFXAddVerifyRequested",
                "withdrawFXAddVerifySucceed",
                "withdrawFXAddVerifyFailed",
                "queryBanks",
                "queryBanksSucceed",
                "queryBanksFailed",
                "queryProvinces",
                "queryProvincesSucceed",
                "queryProvincesFailed",
                "getLegalProfile",
                "getLegalProfileSucceed",
                "getLegalProfileFailed",
                "createTransferAccountRequested",
                "createTransferAccountSucceed",
                "createTransferAccountFailed",
                "hideCreateTransferAccountError",
                "setCreateTransferAccountStep",
                "resetCreateTransferAccount",
                "setBeneficiaryNameError",
                "getBeneficiayAccountNoRequested",
                "getBeneficiayAccountNoSucceed",
                "getBeneficiayAccountNoFailed",
                "resetBeneficiayAccountNo",
                "getAccountLimitRequested",
                "getAccountLimitSucceed",
                "getAccountLimitFailed",
                "bindAccountPhoneNoRequested",
                "bindAccountPhoneNoSucceed",
                "bindAccountPhoneNoFailed",
                "bindAccountPhoneNoVerifyFailed",
                "swithBindPhoneNoModal",
                "getBeneficiayPhoneNoRequested",
                "getBeneficiayPhoneNoSucceed",
                "getBeneficiayPhoneNoFailed",
                "resetBeneficiayPhoneNo",
                "getFXPrivateAgreementRequested",
                "getFXPrivateAgreementSucceed",
                "getFXPrivateAgreementFailed",
                "getFXPublicAgreementRequested",
                "getFXPublicAgreementSucceed",
                "getFXPublicAgreementFailed",
                "getTransferPublicAgreementRequested",
                "getTransferPublicAgreementSucceed",
                "getTransferPublicAgreementFailed",
                "getWithdrawNormalAgreementRequested",
                "getWithdrawNormalAgreementSucceed",
                "getWithdrawNormalAgreementFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "fileActions",
              "sourceValue": "actions/file",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/file.ts",
              "exportNames": [
                "uploadFileRequested",
                "uploadFileSucceed",
                "uploadFileFailed",
                "hideUploadFileError",
                "deleteFile",
                "deleteSyncFile",
                "resetFile",
                "resetCreateTransferAccountFile",
                "resetAllFile",
                "fileDownload",
                "getThumbnailRequested",
                "getThumbnailSucceed",
                "getThumbnailFailed",
                "initGetThumbnail",
                "setAnnexeRenameModal",
                "updateAnnexeFileName"
              ]
            },
            {
              "isNamespace": true,
              "localName": "userActions",
              "sourceValue": "actions/user",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts",
              "exportNames": [
                "getUserFlowId",
                "getUserFlowIdAndCaptcha",
                "getUserFlowIdSucceed",
                "getUserFlowIdFailed",
                "initUserFlowId",
                "getUserCaptcha",
                "getUserCaptchaSucceed",
                "getUserCaptchaFailed",
                "initUserCaptcha",
                "verifyMfaRequested",
                "verifyMfaSucceed",
                "verifyMfaFailed",
                "initVerifyMfa",
                "setAuthId",
                "resetAuthId",
                "executeAuthIdCallBackRequested",
                "executeAuthIdCallBackSucceed",
                "executeAuthIdCallBackFailed",
                "sendMfaMessageRequested",
                "getMfaCaptchaRequested",
                "getMfaCaptchaSucceed",
                "getMfaCaptchaFailed",
                "initMfaCaptcha",
                "getWhiteListRequested",
                "getWhiteListSucceed",
                "getWhiteListFailed",
                "getWhiteListInit",
                "setMfaJson",
                "resetMfaJson",
                "queryIndustryRequested",
                "queryIndustrySucceed",
                "queryIndustryFailed",
                "queryRestrictionList",
                "queryRestrictionListSucceed",
                "queryRestrictionListFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "submitActions",
              "sourceValue": "actions/submit",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/submit.ts",
              "exportNames": [
                "submitRequested",
                "submitSucceed",
                "submitFailed",
                "resetSubmit"
              ]
            },
            {
              "isNamespace": false,
              "localName": "reset",
              "importedName": "reset",
              "sourceValue": "redux-form",
              "dependencyPath": "redux-form"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 129,
                  "column": 57,
                  "index": 4041
                },
                "end": {
                  "line": 434,
                  "column": 1,
                  "index": 15545
                }
              },
              "actionsMethods": [
                {
                  "name": "hideCreateTransferAccountError"
                },
                {
                  "name": "reset"
                },
                {
                  "name": "getUserFlowId",
                  "usage": "EMGetUserFlowIdUsages.UpdateTransAcct"
                },
                {
                  "name": "getUserFlowId",
                  "usage": "EMGetUserFlowIdUsages.AddMaterial"
                },
                {
                  "name": "getUserFlowId",
                  "usage": "EMGetUserFlowIdUsages.TransBindAcct"
                },
                {
                  "name": "getTransferPublicAgreementRequested"
                },
                {
                  "name": "createTransferAccountRequested"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "hideCreateTransferAccountError",
                  "importedName": "hideCreateTransferAccountError",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts"
                },
                {
                  "isNamespace": false,
                  "localName": "reset",
                  "importedName": "reset",
                  "sourceValue": "redux-form",
                  "dependencyPath": "redux-form"
                },
                {
                  "localName": "getUserFlowId",
                  "importedName": "getUserFlowId",
                  "sourceValue": "actions/user",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts",
                  "usage": "EMGetUserFlowIdUsages.UpdateTransAcct"
                },
                {
                  "localName": "getUserFlowId",
                  "importedName": "getUserFlowId",
                  "sourceValue": "actions/user",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts",
                  "usage": "EMGetUserFlowIdUsages.AddMaterial"
                },
                {
                  "localName": "getUserFlowId",
                  "importedName": "getUserFlowId",
                  "sourceValue": "actions/user",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts",
                  "usage": "EMGetUserFlowIdUsages.TransBindAcct"
                },
                {
                  "localName": "getTransferPublicAgreementRequested",
                  "importedName": "getTransferPublicAgreementRequested",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts"
                },
                {
                  "localName": "createTransferAccountRequested",
                  "importedName": "createTransferAccountRequested",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 129,
                  "column": 57,
                  "index": 4041
                },
                "end": {
                  "line": 434,
                  "column": 1,
                  "index": 15545
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [
            "actions",
            "fileActions",
            "userActions",
            "submitActions"
          ],
          "objectPropertyMap": {
            "reset": "reset"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/BindPhoneForm/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "userActions",
              "sourceValue": "actions/user",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts",
              "exportNames": [
                "getUserFlowId",
                "getUserFlowIdAndCaptcha",
                "getUserFlowIdSucceed",
                "getUserFlowIdFailed",
                "initUserFlowId",
                "getUserCaptcha",
                "getUserCaptchaSucceed",
                "getUserCaptchaFailed",
                "initUserCaptcha",
                "verifyMfaRequested",
                "verifyMfaSucceed",
                "verifyMfaFailed",
                "initVerifyMfa",
                "setAuthId",
                "resetAuthId",
                "executeAuthIdCallBackRequested",
                "executeAuthIdCallBackSucceed",
                "executeAuthIdCallBackFailed",
                "sendMfaMessageRequested",
                "getMfaCaptchaRequested",
                "getMfaCaptchaSucceed",
                "getMfaCaptchaFailed",
                "initMfaCaptcha",
                "getWhiteListRequested",
                "getWhiteListSucceed",
                "getWhiteListFailed",
                "getWhiteListInit",
                "setMfaJson",
                "resetMfaJson",
                "queryIndustryRequested",
                "queryIndustrySucceed",
                "queryIndustryFailed",
                "queryRestrictionList",
                "queryRestrictionListSucceed",
                "queryRestrictionListFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "vcodeActions",
              "sourceValue": "actions/vcode",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/vcode.ts",
              "exportNames": [
                "updateCountDownSeconds",
                "stopVcodeCountDown",
                "sendVcodeMessage",
                "sendVcodeMessageSucceed",
                "sendVcodeMessageFailed",
                "hideVcodeTip"
              ]
            },
            {
              "isNamespace": true,
              "localName": "securityActions",
              "sourceValue": "actions/security",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/security.ts",
              "exportNames": [
                "checkABVType",
                "openABVPanel",
                "closeABVPanel",
                "validateCaptchaRequested",
                "validateCaptchaSucceed",
                "validateCaptchaFailed",
                "initValidateCaptcha",
                "setABVVeriType",
                "logSliderVeriInfo",
                "updateXRateLimitRoute"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "CallExpression",
              "loc": {
                "start": {
                  "line": 67,
                  "column": 1,
                  "index": 1897
                },
                "end": {
                  "line": 167,
                  "column": 2,
                  "index": 5389
                }
              },
              "actionsMethods": [
                {
                  "name": "getUserFlowId",
                  "usage": "EMGetUserFlowIdUsages.AddMobileToAccount"
                },
                {
                  "name": "checkABVType",
                  "usage": "EMGetUserCaptchaUsages.AddMobileToAccount"
                },
                {
                  "name": "sendVcodeMessage",
                  "usage": "EMGetUserCaptchaUsages.AddMobileToAccount"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "getUserFlowId",
                  "importedName": "getUserFlowId",
                  "sourceValue": "actions/user",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts",
                  "usage": "EMGetUserFlowIdUsages.AddMobileToAccount"
                },
                {
                  "localName": "checkABVType",
                  "importedName": "checkABVType",
                  "sourceValue": "actions/security",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/security.ts",
                  "usage": "EMGetUserCaptchaUsages.AddMobileToAccount"
                },
                {
                  "localName": "sendVcodeMessage",
                  "importedName": "sendVcodeMessage",
                  "sourceValue": "actions/vcode",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/vcode.ts",
                  "usage": "EMGetUserCaptchaUsages.AddMobileToAccount"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 67,
                  "column": 1,
                  "index": 1897
                },
                "end": {
                  "line": 167,
                  "column": 2,
                  "index": 5389
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["userActions", "vcodeActions", "securityActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/MessageItem/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "actions",
              "sourceValue": "actions/auth",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/auth.ts",
              "exportNames": [
                "oauthRequested",
                "oauthSucceed",
                "logoutRequested",
                "logoutSucceed",
                "unauthorized",
                "signInRequested",
                "signInSucceed",
                "signInFailed",
                "initSignIn",
                "wechatSignInRequested",
                "wechatSignInSucceed",
                "wechatSignInFailed",
                "setWechatSignInSliderData",
                "setWechatSignInSliderError",
                "initWechatSignIn",
                "setWechatSignInState",
                "pollingQRScannedRequested",
                "pollingQRScannedSucceed",
                "pollingQRScannedFailed",
                "pollingQRConfirmedRequested",
                "pollingQRConfirmedSucceed",
                "pollingQRConfirmedFailed",
                "resetQRConfirmed",
                "qrcodeSigninRequested"
              ]
            },
            {
              "isNamespace": true,
              "localName": "messageActions",
              "sourceValue": "actions/message",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/message.ts",
              "exportNames": [
                "preQuery",
                "queryData",
                "querySucceed",
                "queryFailed",
                "queryUnread",
                "queryUnreadSucceed",
                "queryUnreadFailed",
                "markLocalAllReaded",
                "markServerAllReaded",
                "markAllReadedSucceed",
                "markAllReadedFailed",
                "markLocalSingleReaded",
                "markServerSingleReaded",
                "markServerSingleReadedSucceed",
                "markServerSingleReadedFailed"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "MessageItem",
              "loc": {
                "start": {
                  "line": 2658,
                  "column": 2,
                  "index": 71108
                },
                "end": {
                  "line": 2658,
                  "column": 13,
                  "index": 71119
                },
                "identifierName": "MessageItem"
              },
              "actionsMethods": [
                {
                  "name": "markServerSingleReaded"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "markServerSingleReaded",
                  "importedName": "markServerSingleReaded",
                  "sourceValue": "actions/message",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/message.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 2615,
                  "column": 6,
                  "index": 69968
                },
                "end": {
                  "line": 2615,
                  "column": 17,
                  "index": 69979
                },
                "identifierName": "MessageItem"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["actions", "messageActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/SwapRecordsQueryListForm/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "fundSwapActions",
              "sourceValue": "actions/fundSwap",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fundSwap.ts",
              "exportNames": [
                "setTradeStep",
                "getRateRequested",
                "getRateSucceed",
                "getRateFailed",
                "hideGetRateError",
                "rateReset",
                "tradeRequested",
                "tradeSucceed",
                "tradeFailed",
                "resetTrade",
                "hideTradeFailed",
                "tradeListRequested",
                "tradeListSucceed",
                "tradeListFailed",
                "hideTradeListFailed",
                "updateStatus",
                "setSeconds",
                "stopSeconds",
                "getBalance",
                "getBalanceSucceed",
                "getBalanceFailed",
                "resetBalance",
                "getFxDetail",
                "getFxDetailSucceed",
                "getFxDetailFailed",
                "spotfxMeta",
                "spotfxMetaSucceed",
                "spotfxMetaFailed",
                "resetSpotFxMeta",
                "changeExchangeWay",
                "entrustRequested",
                "entrustSucceed",
                "entrustFailed",
                "hideEntrustError",
                "resetEntrust",
                "entrustRateRequested",
                "entrustRateSucceed",
                "entrustRateFailed",
                "hideEntrustRateError",
                "resetEntrustRate",
                "billExportDownloadRequested",
                "billExportDownloadSucceed",
                "billExportDownloadFailed",
                "toggleBillExportDownloadModal",
                "resetBillExportDownload",
                "enterAccountRequested",
                "enterAccountSucceed",
                "enterAccountFailed",
                "cancelEntrustRequested",
                "cancelEntrustSucceed",
                "cancelEntrustFailed",
                "hideCancelEntrustError",
                "resetCancelEntrust",
                "toggleCancelEntrustPwdModal",
                "tradeMoreListRequested",
                "tradeMoreListSucceed",
                "tradeMoreListFailed",
                "clearMore",
                "queryExchangeArrivalRequested",
                "queryExchangeArrivalSucceed",
                "queryExchangeArrivalFailed",
                "initExchangeArrival",
                "spotBuyRateRequested",
                "spotBuyRateSucceed",
                "spotBuyRateFailed",
                "spotApplyRequested",
                "spotApplySucceed",
                "spotApplyFailed",
                "spotResultRequested",
                "spotResultSucceed",
                "spotResultFailed",
                "spotResultInit"
              ]
            },
            {
              "isNamespace": true,
              "localName": "withdrawActions",
              "sourceValue": "actions/withdraw",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts",
              "exportNames": [
                "withdrawListRequested",
                "withdrawListSucceed",
                "withdrawListFailed",
                "hideWithdrawListError",
                "resetWithdrawList",
                "changeTab",
                "switchWithdrawApplyModal",
                "setWithdrawApplyIsReserved",
                "withdrawApplyRequested",
                "withdrawApplySucceed",
                "withdrawApplyFailed",
                "hideWithdrawApplyError",
                "setStep",
                "resetWithdrawApply",
                "withdrawInitRequested",
                "withdrawInitSucceed",
                "withdrawInitFailed",
                "hideWithdrawInitError",
                "withdrawDebtRequested",
                "withdrawDebtSucceed",
                "withdrawDebtFailed",
                "hideWithdrawDebtError",
                "removeRelatedItemOrderId",
                "addRelatedItemOrderId",
                "inputChangeRelatedItemValue",
                "resetRelatedOrders",
                "changeRelatedOrderChecked",
                "resetRelatedOrderChecked",
                "swithWithdrawFXApplyModal",
                "setWithdrawFXApplyStep",
                "setWithdrawFXApplyIsReserved",
                "withdrawFXApplyRequested",
                "withdrawFXApplySucceed",
                "withdrawFXApplyFailed",
                "hideWithdrawFXApplyError",
                "resetWithdrawFXApply",
                "isWithdrawErrorPage",
                "getFXWithdrawFeeRequested",
                "getFXWithdrawFeeSucceed",
                "getFXWithdrawFeeFailed",
                "hideGetFXWithdrawFeeError",
                "resetGetFXWithdrawFee",
                "getFXCanRelatedOrderRequested",
                "getFXCanRelatedOrderSucceed",
                "getFXCanRelatedOrderFailed",
                "hideGetFXCanRelatedOrderError",
                "resetGetFXCanRelatedOrder",
                "pushFXCanRelatedOrderRequested",
                "pushFXCanRelatedOrderSucceed",
                "pushFXCanRelatedOrderFailed",
                "swithWithdrawFXReApplyModal",
                "setWithdrawFXReApplyStep",
                "withdrawFXReApplyRequested",
                "withdrawFXReApplySucceed",
                "withdrawFXReApplyFailed",
                "resetWithdrawFXReApply",
                "hideWithdrawFXReApplyError",
                "getWithdrawReApplyItemRequested",
                "getWithdrawReApplyItemSucceed",
                "getWithdrawReApplyItemFailed",
                "resetGetWithdrawReApplyItem",
                "withdrawCheckBothFrozen",
                "withdrawCheckBothFrozenSucceed",
                "withdrawCheckBothFrozenFailed",
                "getFxWithdrawHolderTypeRequested",
                "getFxWithdrawHolderTypeSucceed",
                "getFxWithdrawHolderTypeFailed",
                "withdrawDetailRequested",
                "withdrawDetailSucceed",
                "withdrawDetailFailed",
                "resetWithdrawDetail",
                "withdrawFeeRequested",
                "withdrawFeeSucceed",
                "withdrawFeeFailed",
                "queryAddMaterialInfoRequested",
                "queryAddMaterialInfoSucceed",
                "queryAddMaterialInfoFailed",
                "addMaterialCommitRequested",
                "addMaterialCommitSucceed",
                "addMaterialCommitFailed",
                "resetAddMaterialCommit",
                "cancelFxWithdrawRequested",
                "cancelFxWithdrawSucceed",
                "cancelFxWithdrawFailed",
                "resetCancelFxWithdraw",
                "setCancelFxWithdrawModal",
                "cancelWithdrawRequested",
                "cancelWithdrawSucceed",
                "cancelWithdrawFailed",
                "resetCancelWithdraw",
                "setCancelWithdrawModal",
                "cancelOnGoingTransferRequested",
                "cancelOnGoingTransferSucceed",
                "cancelOnGoingTransferFailed",
                "resetCancelOnGoingTransfer",
                "setCancelOnGoingTransferModal",
                "withdrawSupportCcys",
                "withdrawSupportCcysSucceed",
                "withdrawSupportCcysFailed",
                "transferFeeRequested",
                "transferFeeSucceed",
                "transferFeeFailed",
                "setTransferApplyStep",
                "transferApplyRequested",
                "transferApplySucceed",
                "transferApplyFailed",
                "hideTransferApplyError",
                "resetTransferApply",
                "setTransferStep",
                "queryTransferAddMaterialInfoRequested",
                "queryTransferAddMaterialInfoSucceed",
                "queryTransferAddMaterialInfoFailed",
                "transferAddMaterialCommitRequested",
                "transferAddMaterialCommitSucceed",
                "transferAddMaterialCommitFailed",
                "resetTransferAddMaterialCommit",
                "cancelTransferRequested",
                "cancelTransferSucceed",
                "cancelTransferFailed",
                "resetCancelTransfer",
                "setCancelModal",
                "addCardInfoRequested",
                "addCardInfoSucceed",
                "addCardInfoFailed",
                "querySupportBoostRequested",
                "querySupportBoostSucceed",
                "querySupportBoostFailed",
                "resetQuerySupportBoost",
                "queryCanFastWithdrawWorkRequested",
                "queryCanFastWithdrawWorkFailed",
                "queryCanFastWithdrawWorkSuccess",
                "queryACrossBorderRequested",
                "queryACrossBorderSuccess",
                "queryACrossBorderFailed",
                "getAbRequested",
                "getAbSucceed",
                "getAbFailed"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 42,
                  "column": 64,
                  "index": 1134
                },
                "end": {
                  "line": 177,
                  "column": 1,
                  "index": 5146
                }
              },
              "actionsMethods": [
                {
                  "name": "tradeListRequested"
                },
                {
                  "name": "toggleBillExportDownloadModal"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "tradeListRequested",
                  "importedName": "tradeListRequested",
                  "sourceValue": "actions/fundSwap",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fundSwap.ts"
                },
                {
                  "localName": "toggleBillExportDownloadModal",
                  "importedName": "toggleBillExportDownloadModal",
                  "sourceValue": "actions/fundSwap",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fundSwap.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 42,
                  "column": 64,
                  "index": 1134
                },
                "end": {
                  "line": 177,
                  "column": 1,
                  "index": 5146
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["fundSwapActions", "withdrawActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Swap/SwapTable/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "actions",
              "sourceValue": "actions/fundSwap",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fundSwap.ts",
              "exportNames": [
                "setTradeStep",
                "getRateRequested",
                "getRateSucceed",
                "getRateFailed",
                "hideGetRateError",
                "rateReset",
                "tradeRequested",
                "tradeSucceed",
                "tradeFailed",
                "resetTrade",
                "hideTradeFailed",
                "tradeListRequested",
                "tradeListSucceed",
                "tradeListFailed",
                "hideTradeListFailed",
                "updateStatus",
                "setSeconds",
                "stopSeconds",
                "getBalance",
                "getBalanceSucceed",
                "getBalanceFailed",
                "resetBalance",
                "getFxDetail",
                "getFxDetailSucceed",
                "getFxDetailFailed",
                "spotfxMeta",
                "spotfxMetaSucceed",
                "spotfxMetaFailed",
                "resetSpotFxMeta",
                "changeExchangeWay",
                "entrustRequested",
                "entrustSucceed",
                "entrustFailed",
                "hideEntrustError",
                "resetEntrust",
                "entrustRateRequested",
                "entrustRateSucceed",
                "entrustRateFailed",
                "hideEntrustRateError",
                "resetEntrustRate",
                "billExportDownloadRequested",
                "billExportDownloadSucceed",
                "billExportDownloadFailed",
                "toggleBillExportDownloadModal",
                "resetBillExportDownload",
                "enterAccountRequested",
                "enterAccountSucceed",
                "enterAccountFailed",
                "cancelEntrustRequested",
                "cancelEntrustSucceed",
                "cancelEntrustFailed",
                "hideCancelEntrustError",
                "resetCancelEntrust",
                "toggleCancelEntrustPwdModal",
                "tradeMoreListRequested",
                "tradeMoreListSucceed",
                "tradeMoreListFailed",
                "clearMore",
                "queryExchangeArrivalRequested",
                "queryExchangeArrivalSucceed",
                "queryExchangeArrivalFailed",
                "initExchangeArrival",
                "spotBuyRateRequested",
                "spotBuyRateSucceed",
                "spotBuyRateFailed",
                "spotApplyRequested",
                "spotApplySucceed",
                "spotApplyFailed",
                "spotResultRequested",
                "spotResultSucceed",
                "spotResultFailed",
                "spotResultInit"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 81,
                  "column": 49,
                  "index": 2827
                },
                "end": {
                  "line": 165,
                  "column": 1,
                  "index": 5358
                }
              },
              "actionsMethods": [
                {
                  "name": "tradeListRequested"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "tradeListRequested",
                  "importedName": "tradeListRequested",
                  "sourceValue": "actions/fundSwap",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fundSwap.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 81,
                  "column": 49,
                  "index": 2827
                },
                "end": {
                  "line": 165,
                  "column": 1,
                  "index": 5358
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["actions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/ExrecordDownloadForm/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "fundSwapActions",
              "sourceValue": "actions/fundSwap",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fundSwap.ts",
              "exportNames": [
                "setTradeStep",
                "getRateRequested",
                "getRateSucceed",
                "getRateFailed",
                "hideGetRateError",
                "rateReset",
                "tradeRequested",
                "tradeSucceed",
                "tradeFailed",
                "resetTrade",
                "hideTradeFailed",
                "tradeListRequested",
                "tradeListSucceed",
                "tradeListFailed",
                "hideTradeListFailed",
                "updateStatus",
                "setSeconds",
                "stopSeconds",
                "getBalance",
                "getBalanceSucceed",
                "getBalanceFailed",
                "resetBalance",
                "getFxDetail",
                "getFxDetailSucceed",
                "getFxDetailFailed",
                "spotfxMeta",
                "spotfxMetaSucceed",
                "spotfxMetaFailed",
                "resetSpotFxMeta",
                "changeExchangeWay",
                "entrustRequested",
                "entrustSucceed",
                "entrustFailed",
                "hideEntrustError",
                "resetEntrust",
                "entrustRateRequested",
                "entrustRateSucceed",
                "entrustRateFailed",
                "hideEntrustRateError",
                "resetEntrustRate",
                "billExportDownloadRequested",
                "billExportDownloadSucceed",
                "billExportDownloadFailed",
                "toggleBillExportDownloadModal",
                "resetBillExportDownload",
                "enterAccountRequested",
                "enterAccountSucceed",
                "enterAccountFailed",
                "cancelEntrustRequested",
                "cancelEntrustSucceed",
                "cancelEntrustFailed",
                "hideCancelEntrustError",
                "resetCancelEntrust",
                "toggleCancelEntrustPwdModal",
                "tradeMoreListRequested",
                "tradeMoreListSucceed",
                "tradeMoreListFailed",
                "clearMore",
                "queryExchangeArrivalRequested",
                "queryExchangeArrivalSucceed",
                "queryExchangeArrivalFailed",
                "initExchangeArrival",
                "spotBuyRateRequested",
                "spotBuyRateSucceed",
                "spotBuyRateFailed",
                "spotApplyRequested",
                "spotApplySucceed",
                "spotApplyFailed",
                "spotResultRequested",
                "spotResultSucceed",
                "spotResultFailed",
                "spotResultInit"
              ]
            },
            {
              "isNamespace": false,
              "localName": "change",
              "importedName": "change",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 61,
                  "column": 60,
                  "index": 1577
                },
                "end": {
                  "line": 186,
                  "column": 1,
                  "index": 5510
                }
              },
              "actionsMethods": [
                {
                  "name": "billExportDownloadRequested"
                },
                {
                  "name": "change"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "billExportDownloadRequested",
                  "importedName": "billExportDownloadRequested",
                  "sourceValue": "actions/fundSwap",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fundSwap.ts"
                },
                {
                  "isNamespace": false,
                  "localName": "change",
                  "importedName": "change",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 61,
                  "column": 60,
                  "index": 1577
                },
                "end": {
                  "line": 186,
                  "column": 1,
                  "index": 5510
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["fundSwapActions"],
          "objectPropertyMap": {
            "change": "change"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/SwapExchangeForm/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "actions",
              "sourceValue": "actions/fundSwap",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fundSwap.ts",
              "exportNames": [
                "setTradeStep",
                "getRateRequested",
                "getRateSucceed",
                "getRateFailed",
                "hideGetRateError",
                "rateReset",
                "tradeRequested",
                "tradeSucceed",
                "tradeFailed",
                "resetTrade",
                "hideTradeFailed",
                "tradeListRequested",
                "tradeListSucceed",
                "tradeListFailed",
                "hideTradeListFailed",
                "updateStatus",
                "setSeconds",
                "stopSeconds",
                "getBalance",
                "getBalanceSucceed",
                "getBalanceFailed",
                "resetBalance",
                "getFxDetail",
                "getFxDetailSucceed",
                "getFxDetailFailed",
                "spotfxMeta",
                "spotfxMetaSucceed",
                "spotfxMetaFailed",
                "resetSpotFxMeta",
                "changeExchangeWay",
                "entrustRequested",
                "entrustSucceed",
                "entrustFailed",
                "hideEntrustError",
                "resetEntrust",
                "entrustRateRequested",
                "entrustRateSucceed",
                "entrustRateFailed",
                "hideEntrustRateError",
                "resetEntrustRate",
                "billExportDownloadRequested",
                "billExportDownloadSucceed",
                "billExportDownloadFailed",
                "toggleBillExportDownloadModal",
                "resetBillExportDownload",
                "enterAccountRequested",
                "enterAccountSucceed",
                "enterAccountFailed",
                "cancelEntrustRequested",
                "cancelEntrustSucceed",
                "cancelEntrustFailed",
                "hideCancelEntrustError",
                "resetCancelEntrust",
                "toggleCancelEntrustPwdModal",
                "tradeMoreListRequested",
                "tradeMoreListSucceed",
                "tradeMoreListFailed",
                "clearMore",
                "queryExchangeArrivalRequested",
                "queryExchangeArrivalSucceed",
                "queryExchangeArrivalFailed",
                "initExchangeArrival",
                "spotBuyRateRequested",
                "spotBuyRateSucceed",
                "spotBuyRateFailed",
                "spotApplyRequested",
                "spotApplySucceed",
                "spotApplyFailed",
                "spotResultRequested",
                "spotResultSucceed",
                "spotResultFailed",
                "spotResultInit"
              ]
            },
            {
              "isNamespace": true,
              "localName": "trendActions",
              "sourceValue": "actions/trend",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/trend.ts",
              "exportNames": [
                "rateTrendRequested",
                "rateTrendSucceed",
                "rateTrendFailed",
                "resetRateTrend",
                "setRateTrendRange"
              ]
            },
            {
              "isNamespace": false,
              "localName": "queryRestrictionList",
              "importedName": "queryRestrictionList",
              "sourceValue": "actions/user",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts"
            },
            {
              "isNamespace": false,
              "localName": "change",
              "importedName": "change",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "touch",
              "importedName": "touch",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 103,
                  "column": 41,
                  "index": 3696
                },
                "end": {
                  "line": 1147,
                  "column": 1,
                  "index": 38811
                }
              },
              "actionsMethods": [
                {
                  "name": "queryRestrictionList"
                },
                {
                  "name": "change"
                },
                {
                  "name": "setRateTrendRange"
                },
                {
                  "name": "entrustRateRequested"
                },
                {
                  "name": "rateTrendRequested"
                },
                {
                  "name": "getRateRequested"
                },
                {
                  "name": "setTradeStep"
                },
                {
                  "name": "stopSeconds"
                },
                {
                  "name": "touch"
                },
                {
                  "name": "hideTradeFailed"
                },
                {
                  "name": "tradeSucceed"
                },
                {
                  "name": "entrustSucceed"
                },
                {
                  "name": "tradeFailed"
                },
                {
                  "name": "entrustFailed"
                },
                {
                  "name": "tradeRequested",
                  "usage": "EMGetUserFlowIdUsages.spotFxOrder"
                },
                {
                  "name": "entrustRequested",
                  "usage": "EMGetUserFlowIdUsages.spotFxPricingOrder"
                }
              ],
              "usedActionsDependencies": [
                {
                  "isNamespace": false,
                  "localName": "queryRestrictionList",
                  "importedName": "queryRestrictionList",
                  "sourceValue": "actions/user",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts"
                },
                {
                  "isNamespace": false,
                  "localName": "change",
                  "importedName": "change",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                },
                {
                  "localName": "setRateTrendRange",
                  "importedName": "setRateTrendRange",
                  "sourceValue": "actions/trend",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/trend.ts"
                },
                {
                  "localName": "entrustRateRequested",
                  "importedName": "entrustRateRequested",
                  "sourceValue": "actions/fundSwap",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fundSwap.ts"
                },
                {
                  "localName": "rateTrendRequested",
                  "importedName": "rateTrendRequested",
                  "sourceValue": "actions/trend",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/trend.ts"
                },
                {
                  "localName": "getRateRequested",
                  "importedName": "getRateRequested",
                  "sourceValue": "actions/fundSwap",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fundSwap.ts"
                },
                {
                  "localName": "setTradeStep",
                  "importedName": "setTradeStep",
                  "sourceValue": "actions/fundSwap",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fundSwap.ts"
                },
                {
                  "localName": "stopSeconds",
                  "importedName": "stopSeconds",
                  "sourceValue": "actions/fundSwap",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fundSwap.ts"
                },
                {
                  "isNamespace": false,
                  "localName": "touch",
                  "importedName": "touch",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                },
                {
                  "localName": "hideTradeFailed",
                  "importedName": "hideTradeFailed",
                  "sourceValue": "actions/fundSwap",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fundSwap.ts"
                },
                {
                  "localName": "tradeSucceed",
                  "importedName": "tradeSucceed",
                  "sourceValue": "actions/fundSwap",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fundSwap.ts"
                },
                {
                  "localName": "entrustSucceed",
                  "importedName": "entrustSucceed",
                  "sourceValue": "actions/fundSwap",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fundSwap.ts"
                },
                {
                  "localName": "tradeFailed",
                  "importedName": "tradeFailed",
                  "sourceValue": "actions/fundSwap",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fundSwap.ts"
                },
                {
                  "localName": "entrustFailed",
                  "importedName": "entrustFailed",
                  "sourceValue": "actions/fundSwap",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fundSwap.ts"
                },
                {
                  "localName": "tradeRequested",
                  "importedName": "tradeRequested",
                  "sourceValue": "actions/fundSwap",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fundSwap.ts",
                  "usage": "EMGetUserFlowIdUsages.spotFxOrder"
                },
                {
                  "localName": "entrustRequested",
                  "importedName": "entrustRequested",
                  "sourceValue": "actions/fundSwap",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fundSwap.ts",
                  "usage": "EMGetUserFlowIdUsages.spotFxPricingOrder"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 103,
                  "column": 41,
                  "index": 3696
                },
                "end": {
                  "line": 1147,
                  "column": 1,
                  "index": 38811
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["actions", "trendActions"],
          "objectPropertyMap": {
            "queryRestrictionList": "queryRestrictionList",
            "change": "change",
            "touch": "touch"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Swap/SwapExchange/helper.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "actions",
              "sourceValue": "actions/fundSwap",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fundSwap.ts",
              "exportNames": [
                "setTradeStep",
                "getRateRequested",
                "getRateSucceed",
                "getRateFailed",
                "hideGetRateError",
                "rateReset",
                "tradeRequested",
                "tradeSucceed",
                "tradeFailed",
                "resetTrade",
                "hideTradeFailed",
                "tradeListRequested",
                "tradeListSucceed",
                "tradeListFailed",
                "hideTradeListFailed",
                "updateStatus",
                "setSeconds",
                "stopSeconds",
                "getBalance",
                "getBalanceSucceed",
                "getBalanceFailed",
                "resetBalance",
                "getFxDetail",
                "getFxDetailSucceed",
                "getFxDetailFailed",
                "spotfxMeta",
                "spotfxMetaSucceed",
                "spotfxMetaFailed",
                "resetSpotFxMeta",
                "changeExchangeWay",
                "entrustRequested",
                "entrustSucceed",
                "entrustFailed",
                "hideEntrustError",
                "resetEntrust",
                "entrustRateRequested",
                "entrustRateSucceed",
                "entrustRateFailed",
                "hideEntrustRateError",
                "resetEntrustRate",
                "billExportDownloadRequested",
                "billExportDownloadSucceed",
                "billExportDownloadFailed",
                "toggleBillExportDownloadModal",
                "resetBillExportDownload",
                "enterAccountRequested",
                "enterAccountSucceed",
                "enterAccountFailed",
                "cancelEntrustRequested",
                "cancelEntrustSucceed",
                "cancelEntrustFailed",
                "hideCancelEntrustError",
                "resetCancelEntrust",
                "toggleCancelEntrustPwdModal",
                "tradeMoreListRequested",
                "tradeMoreListSucceed",
                "tradeMoreListFailed",
                "clearMore",
                "queryExchangeArrivalRequested",
                "queryExchangeArrivalSucceed",
                "queryExchangeArrivalFailed",
                "initExchangeArrival",
                "spotBuyRateRequested",
                "spotBuyRateSucceed",
                "spotBuyRateFailed",
                "spotApplyRequested",
                "spotApplySucceed",
                "spotApplyFailed",
                "spotResultRequested",
                "spotResultSucceed",
                "spotResultFailed",
                "spotResultInit"
              ]
            },
            {
              "isNamespace": true,
              "localName": "countdownActions",
              "sourceValue": "actions/countdown",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/countdown.ts",
              "exportNames": ["setCountDown", "setSeconds", "stopSeconds"]
            },
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 35,
                  "column": 47,
                  "index": 1104
                },
                "end": {
                  "line": 203,
                  "column": 1,
                  "index": 6268
                }
              },
              "actionsMethods": [
                {
                  "name": "setCountDown",
                  "usage": "exchange"
                },
                {
                  "name": "queryExchangeArrivalRequested",
                  "usage": "exchange"
                },
                {
                  "name": "initExchangeArrival"
                },
                {
                  "name": "stopSeconds",
                  "usage": "exchange"
                },
                {
                  "name": "push"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "setCountDown",
                  "importedName": "setCountDown",
                  "sourceValue": "actions/countdown",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/countdown.ts",
                  "usage": "exchange"
                },
                {
                  "localName": "queryExchangeArrivalRequested",
                  "importedName": "queryExchangeArrivalRequested",
                  "sourceValue": "actions/fundSwap",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fundSwap.ts",
                  "usage": "exchange"
                },
                {
                  "localName": "initExchangeArrival",
                  "importedName": "initExchangeArrival",
                  "sourceValue": "actions/fundSwap",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fundSwap.ts"
                },
                {
                  "localName": "stopSeconds",
                  "importedName": "stopSeconds",
                  "sourceValue": "actions/fundSwap",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fundSwap.ts",
                  "usage": "exchange"
                },
                {
                  "isNamespace": false,
                  "localName": "push",
                  "importedName": "push",
                  "sourceValue": "react-router-redux",
                  "dependencyPath": "react-router-redux"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 35,
                  "column": 47,
                  "index": 1104
                },
                "end": {
                  "line": 203,
                  "column": 1,
                  "index": 6268
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["actions", "countdownActions"],
          "objectPropertyMap": {
            "push": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XTPartner/XTPartnerTransfer/XTPartnerTransferApply/components/TransferConfirm/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "withdrawActions",
              "sourceValue": "actions/withdraw",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts",
              "exportNames": [
                "withdrawListRequested",
                "withdrawListSucceed",
                "withdrawListFailed",
                "hideWithdrawListError",
                "resetWithdrawList",
                "changeTab",
                "switchWithdrawApplyModal",
                "setWithdrawApplyIsReserved",
                "withdrawApplyRequested",
                "withdrawApplySucceed",
                "withdrawApplyFailed",
                "hideWithdrawApplyError",
                "setStep",
                "resetWithdrawApply",
                "withdrawInitRequested",
                "withdrawInitSucceed",
                "withdrawInitFailed",
                "hideWithdrawInitError",
                "withdrawDebtRequested",
                "withdrawDebtSucceed",
                "withdrawDebtFailed",
                "hideWithdrawDebtError",
                "removeRelatedItemOrderId",
                "addRelatedItemOrderId",
                "inputChangeRelatedItemValue",
                "resetRelatedOrders",
                "changeRelatedOrderChecked",
                "resetRelatedOrderChecked",
                "swithWithdrawFXApplyModal",
                "setWithdrawFXApplyStep",
                "setWithdrawFXApplyIsReserved",
                "withdrawFXApplyRequested",
                "withdrawFXApplySucceed",
                "withdrawFXApplyFailed",
                "hideWithdrawFXApplyError",
                "resetWithdrawFXApply",
                "isWithdrawErrorPage",
                "getFXWithdrawFeeRequested",
                "getFXWithdrawFeeSucceed",
                "getFXWithdrawFeeFailed",
                "hideGetFXWithdrawFeeError",
                "resetGetFXWithdrawFee",
                "getFXCanRelatedOrderRequested",
                "getFXCanRelatedOrderSucceed",
                "getFXCanRelatedOrderFailed",
                "hideGetFXCanRelatedOrderError",
                "resetGetFXCanRelatedOrder",
                "pushFXCanRelatedOrderRequested",
                "pushFXCanRelatedOrderSucceed",
                "pushFXCanRelatedOrderFailed",
                "swithWithdrawFXReApplyModal",
                "setWithdrawFXReApplyStep",
                "withdrawFXReApplyRequested",
                "withdrawFXReApplySucceed",
                "withdrawFXReApplyFailed",
                "resetWithdrawFXReApply",
                "hideWithdrawFXReApplyError",
                "getWithdrawReApplyItemRequested",
                "getWithdrawReApplyItemSucceed",
                "getWithdrawReApplyItemFailed",
                "resetGetWithdrawReApplyItem",
                "withdrawCheckBothFrozen",
                "withdrawCheckBothFrozenSucceed",
                "withdrawCheckBothFrozenFailed",
                "getFxWithdrawHolderTypeRequested",
                "getFxWithdrawHolderTypeSucceed",
                "getFxWithdrawHolderTypeFailed",
                "withdrawDetailRequested",
                "withdrawDetailSucceed",
                "withdrawDetailFailed",
                "resetWithdrawDetail",
                "withdrawFeeRequested",
                "withdrawFeeSucceed",
                "withdrawFeeFailed",
                "queryAddMaterialInfoRequested",
                "queryAddMaterialInfoSucceed",
                "queryAddMaterialInfoFailed",
                "addMaterialCommitRequested",
                "addMaterialCommitSucceed",
                "addMaterialCommitFailed",
                "resetAddMaterialCommit",
                "cancelFxWithdrawRequested",
                "cancelFxWithdrawSucceed",
                "cancelFxWithdrawFailed",
                "resetCancelFxWithdraw",
                "setCancelFxWithdrawModal",
                "cancelWithdrawRequested",
                "cancelWithdrawSucceed",
                "cancelWithdrawFailed",
                "resetCancelWithdraw",
                "setCancelWithdrawModal",
                "cancelOnGoingTransferRequested",
                "cancelOnGoingTransferSucceed",
                "cancelOnGoingTransferFailed",
                "resetCancelOnGoingTransfer",
                "setCancelOnGoingTransferModal",
                "withdrawSupportCcys",
                "withdrawSupportCcysSucceed",
                "withdrawSupportCcysFailed",
                "transferFeeRequested",
                "transferFeeSucceed",
                "transferFeeFailed",
                "setTransferApplyStep",
                "transferApplyRequested",
                "transferApplySucceed",
                "transferApplyFailed",
                "hideTransferApplyError",
                "resetTransferApply",
                "setTransferStep",
                "queryTransferAddMaterialInfoRequested",
                "queryTransferAddMaterialInfoSucceed",
                "queryTransferAddMaterialInfoFailed",
                "transferAddMaterialCommitRequested",
                "transferAddMaterialCommitSucceed",
                "transferAddMaterialCommitFailed",
                "resetTransferAddMaterialCommit",
                "cancelTransferRequested",
                "cancelTransferSucceed",
                "cancelTransferFailed",
                "resetCancelTransfer",
                "setCancelModal",
                "addCardInfoRequested",
                "addCardInfoSucceed",
                "addCardInfoFailed",
                "querySupportBoostRequested",
                "querySupportBoostSucceed",
                "querySupportBoostFailed",
                "resetQuerySupportBoost",
                "queryCanFastWithdrawWorkRequested",
                "queryCanFastWithdrawWorkFailed",
                "queryCanFastWithdrawWorkSuccess",
                "queryACrossBorderRequested",
                "queryACrossBorderSuccess",
                "queryACrossBorderFailed",
                "getAbRequested",
                "getAbSucceed",
                "getAbFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "xptransferActions",
              "sourceValue": "actions/xpTransfer",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xpTransfer.ts",
              "exportNames": [
                "pendingSpotsRequested",
                "pendingSpotsSucceed",
                "pendingSpotsFailed",
                "supportCurrencyRequested",
                "supportCurrencySucceed",
                "supportCurrencyFailed",
                "pricingListRequested",
                "pricingListSucceed",
                "pricingListFailed",
                "innerTransferApplyRequested",
                "innerTransferApplySucceed",
                "innerTransferApplyFailed",
                "initInnerTransferApply",
                "setXPTransferApplyStep",
                "innerTransferDetailRequested",
                "innerTransferDetailSucceed",
                "innerTransferDetailFailed",
                "innerTransferListRequested",
                "innerTransferListSucceed",
                "innerTransferListFailed",
                "exportTransferRequested",
                "exportTransferSucceed",
                "exportTransferFailed",
                "setTransferModal",
                "updateApplyCheckList",
                "initApplyCheckList"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 58,
                  "column": 40,
                  "index": 1400
                },
                "end": {
                  "line": 219,
                  "column": 1,
                  "index": 6026
                }
              },
              "actionsMethods": [
                {
                  "name": "getFXCanRelatedOrderRequested"
                },
                {
                  "name": "innerTransferApplySucceed"
                },
                {
                  "name": "innerTransferApplyFailed"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "getFXCanRelatedOrderRequested",
                  "importedName": "getFXCanRelatedOrderRequested",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "localName": "innerTransferApplySucceed",
                  "importedName": "innerTransferApplySucceed",
                  "sourceValue": "actions/xpTransfer",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xpTransfer.ts"
                },
                {
                  "localName": "innerTransferApplyFailed",
                  "importedName": "innerTransferApplyFailed",
                  "sourceValue": "actions/xpTransfer",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xpTransfer.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 58,
                  "column": 40,
                  "index": 1400
                },
                "end": {
                  "line": 219,
                  "column": 1,
                  "index": 6026
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["withdrawActions", "xptransferActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XTPartner/XTPartnerTransfer/XTPartnerTransferApply/components/TransferInformation/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "withdrawActions",
              "sourceValue": "actions/withdraw",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts",
              "exportNames": [
                "withdrawListRequested",
                "withdrawListSucceed",
                "withdrawListFailed",
                "hideWithdrawListError",
                "resetWithdrawList",
                "changeTab",
                "switchWithdrawApplyModal",
                "setWithdrawApplyIsReserved",
                "withdrawApplyRequested",
                "withdrawApplySucceed",
                "withdrawApplyFailed",
                "hideWithdrawApplyError",
                "setStep",
                "resetWithdrawApply",
                "withdrawInitRequested",
                "withdrawInitSucceed",
                "withdrawInitFailed",
                "hideWithdrawInitError",
                "withdrawDebtRequested",
                "withdrawDebtSucceed",
                "withdrawDebtFailed",
                "hideWithdrawDebtError",
                "removeRelatedItemOrderId",
                "addRelatedItemOrderId",
                "inputChangeRelatedItemValue",
                "resetRelatedOrders",
                "changeRelatedOrderChecked",
                "resetRelatedOrderChecked",
                "swithWithdrawFXApplyModal",
                "setWithdrawFXApplyStep",
                "setWithdrawFXApplyIsReserved",
                "withdrawFXApplyRequested",
                "withdrawFXApplySucceed",
                "withdrawFXApplyFailed",
                "hideWithdrawFXApplyError",
                "resetWithdrawFXApply",
                "isWithdrawErrorPage",
                "getFXWithdrawFeeRequested",
                "getFXWithdrawFeeSucceed",
                "getFXWithdrawFeeFailed",
                "hideGetFXWithdrawFeeError",
                "resetGetFXWithdrawFee",
                "getFXCanRelatedOrderRequested",
                "getFXCanRelatedOrderSucceed",
                "getFXCanRelatedOrderFailed",
                "hideGetFXCanRelatedOrderError",
                "resetGetFXCanRelatedOrder",
                "pushFXCanRelatedOrderRequested",
                "pushFXCanRelatedOrderSucceed",
                "pushFXCanRelatedOrderFailed",
                "swithWithdrawFXReApplyModal",
                "setWithdrawFXReApplyStep",
                "withdrawFXReApplyRequested",
                "withdrawFXReApplySucceed",
                "withdrawFXReApplyFailed",
                "resetWithdrawFXReApply",
                "hideWithdrawFXReApplyError",
                "getWithdrawReApplyItemRequested",
                "getWithdrawReApplyItemSucceed",
                "getWithdrawReApplyItemFailed",
                "resetGetWithdrawReApplyItem",
                "withdrawCheckBothFrozen",
                "withdrawCheckBothFrozenSucceed",
                "withdrawCheckBothFrozenFailed",
                "getFxWithdrawHolderTypeRequested",
                "getFxWithdrawHolderTypeSucceed",
                "getFxWithdrawHolderTypeFailed",
                "withdrawDetailRequested",
                "withdrawDetailSucceed",
                "withdrawDetailFailed",
                "resetWithdrawDetail",
                "withdrawFeeRequested",
                "withdrawFeeSucceed",
                "withdrawFeeFailed",
                "queryAddMaterialInfoRequested",
                "queryAddMaterialInfoSucceed",
                "queryAddMaterialInfoFailed",
                "addMaterialCommitRequested",
                "addMaterialCommitSucceed",
                "addMaterialCommitFailed",
                "resetAddMaterialCommit",
                "cancelFxWithdrawRequested",
                "cancelFxWithdrawSucceed",
                "cancelFxWithdrawFailed",
                "resetCancelFxWithdraw",
                "setCancelFxWithdrawModal",
                "cancelWithdrawRequested",
                "cancelWithdrawSucceed",
                "cancelWithdrawFailed",
                "resetCancelWithdraw",
                "setCancelWithdrawModal",
                "cancelOnGoingTransferRequested",
                "cancelOnGoingTransferSucceed",
                "cancelOnGoingTransferFailed",
                "resetCancelOnGoingTransfer",
                "setCancelOnGoingTransferModal",
                "withdrawSupportCcys",
                "withdrawSupportCcysSucceed",
                "withdrawSupportCcysFailed",
                "transferFeeRequested",
                "transferFeeSucceed",
                "transferFeeFailed",
                "setTransferApplyStep",
                "transferApplyRequested",
                "transferApplySucceed",
                "transferApplyFailed",
                "hideTransferApplyError",
                "resetTransferApply",
                "setTransferStep",
                "queryTransferAddMaterialInfoRequested",
                "queryTransferAddMaterialInfoSucceed",
                "queryTransferAddMaterialInfoFailed",
                "transferAddMaterialCommitRequested",
                "transferAddMaterialCommitSucceed",
                "transferAddMaterialCommitFailed",
                "resetTransferAddMaterialCommit",
                "cancelTransferRequested",
                "cancelTransferSucceed",
                "cancelTransferFailed",
                "resetCancelTransfer",
                "setCancelModal",
                "addCardInfoRequested",
                "addCardInfoSucceed",
                "addCardInfoFailed",
                "querySupportBoostRequested",
                "querySupportBoostSucceed",
                "querySupportBoostFailed",
                "resetQuerySupportBoost",
                "queryCanFastWithdrawWorkRequested",
                "queryCanFastWithdrawWorkFailed",
                "queryCanFastWithdrawWorkSuccess",
                "queryACrossBorderRequested",
                "queryACrossBorderSuccess",
                "queryACrossBorderFailed",
                "getAbRequested",
                "getAbSucceed",
                "getAbFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "userActions",
              "sourceValue": "actions/user",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts",
              "exportNames": [
                "getUserFlowId",
                "getUserFlowIdAndCaptcha",
                "getUserFlowIdSucceed",
                "getUserFlowIdFailed",
                "initUserFlowId",
                "getUserCaptcha",
                "getUserCaptchaSucceed",
                "getUserCaptchaFailed",
                "initUserCaptcha",
                "verifyMfaRequested",
                "verifyMfaSucceed",
                "verifyMfaFailed",
                "initVerifyMfa",
                "setAuthId",
                "resetAuthId",
                "executeAuthIdCallBackRequested",
                "executeAuthIdCallBackSucceed",
                "executeAuthIdCallBackFailed",
                "sendMfaMessageRequested",
                "getMfaCaptchaRequested",
                "getMfaCaptchaSucceed",
                "getMfaCaptchaFailed",
                "initMfaCaptcha",
                "getWhiteListRequested",
                "getWhiteListSucceed",
                "getWhiteListFailed",
                "getWhiteListInit",
                "setMfaJson",
                "resetMfaJson",
                "queryIndustryRequested",
                "queryIndustrySucceed",
                "queryIndustryFailed",
                "queryRestrictionList",
                "queryRestrictionListSucceed",
                "queryRestrictionListFailed"
              ]
            },
            {
              "isNamespace": false,
              "localName": "change",
              "importedName": "change",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 130,
                  "column": 59,
                  "index": 4944
                },
                "end": {
                  "line": 373,
                  "column": 1,
                  "index": 13135
                }
              },
              "actionsMethods": [],
              "usedActionsDependencies": [],
              "nodeLoc": {
                "start": {
                  "line": 130,
                  "column": 59,
                  "index": 4944
                },
                "end": {
                  "line": 373,
                  "column": 1,
                  "index": 13135
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["withdrawActions", "userActions"],
          "objectPropertyMap": {
            "change": "change"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XTPartner/XTPartnerRefund/XTPartnerRefundApply/components/RefundInformation/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "withdrawActions",
              "sourceValue": "actions/withdraw",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts",
              "exportNames": [
                "withdrawListRequested",
                "withdrawListSucceed",
                "withdrawListFailed",
                "hideWithdrawListError",
                "resetWithdrawList",
                "changeTab",
                "switchWithdrawApplyModal",
                "setWithdrawApplyIsReserved",
                "withdrawApplyRequested",
                "withdrawApplySucceed",
                "withdrawApplyFailed",
                "hideWithdrawApplyError",
                "setStep",
                "resetWithdrawApply",
                "withdrawInitRequested",
                "withdrawInitSucceed",
                "withdrawInitFailed",
                "hideWithdrawInitError",
                "withdrawDebtRequested",
                "withdrawDebtSucceed",
                "withdrawDebtFailed",
                "hideWithdrawDebtError",
                "removeRelatedItemOrderId",
                "addRelatedItemOrderId",
                "inputChangeRelatedItemValue",
                "resetRelatedOrders",
                "changeRelatedOrderChecked",
                "resetRelatedOrderChecked",
                "swithWithdrawFXApplyModal",
                "setWithdrawFXApplyStep",
                "setWithdrawFXApplyIsReserved",
                "withdrawFXApplyRequested",
                "withdrawFXApplySucceed",
                "withdrawFXApplyFailed",
                "hideWithdrawFXApplyError",
                "resetWithdrawFXApply",
                "isWithdrawErrorPage",
                "getFXWithdrawFeeRequested",
                "getFXWithdrawFeeSucceed",
                "getFXWithdrawFeeFailed",
                "hideGetFXWithdrawFeeError",
                "resetGetFXWithdrawFee",
                "getFXCanRelatedOrderRequested",
                "getFXCanRelatedOrderSucceed",
                "getFXCanRelatedOrderFailed",
                "hideGetFXCanRelatedOrderError",
                "resetGetFXCanRelatedOrder",
                "pushFXCanRelatedOrderRequested",
                "pushFXCanRelatedOrderSucceed",
                "pushFXCanRelatedOrderFailed",
                "swithWithdrawFXReApplyModal",
                "setWithdrawFXReApplyStep",
                "withdrawFXReApplyRequested",
                "withdrawFXReApplySucceed",
                "withdrawFXReApplyFailed",
                "resetWithdrawFXReApply",
                "hideWithdrawFXReApplyError",
                "getWithdrawReApplyItemRequested",
                "getWithdrawReApplyItemSucceed",
                "getWithdrawReApplyItemFailed",
                "resetGetWithdrawReApplyItem",
                "withdrawCheckBothFrozen",
                "withdrawCheckBothFrozenSucceed",
                "withdrawCheckBothFrozenFailed",
                "getFxWithdrawHolderTypeRequested",
                "getFxWithdrawHolderTypeSucceed",
                "getFxWithdrawHolderTypeFailed",
                "withdrawDetailRequested",
                "withdrawDetailSucceed",
                "withdrawDetailFailed",
                "resetWithdrawDetail",
                "withdrawFeeRequested",
                "withdrawFeeSucceed",
                "withdrawFeeFailed",
                "queryAddMaterialInfoRequested",
                "queryAddMaterialInfoSucceed",
                "queryAddMaterialInfoFailed",
                "addMaterialCommitRequested",
                "addMaterialCommitSucceed",
                "addMaterialCommitFailed",
                "resetAddMaterialCommit",
                "cancelFxWithdrawRequested",
                "cancelFxWithdrawSucceed",
                "cancelFxWithdrawFailed",
                "resetCancelFxWithdraw",
                "setCancelFxWithdrawModal",
                "cancelWithdrawRequested",
                "cancelWithdrawSucceed",
                "cancelWithdrawFailed",
                "resetCancelWithdraw",
                "setCancelWithdrawModal",
                "cancelOnGoingTransferRequested",
                "cancelOnGoingTransferSucceed",
                "cancelOnGoingTransferFailed",
                "resetCancelOnGoingTransfer",
                "setCancelOnGoingTransferModal",
                "withdrawSupportCcys",
                "withdrawSupportCcysSucceed",
                "withdrawSupportCcysFailed",
                "transferFeeRequested",
                "transferFeeSucceed",
                "transferFeeFailed",
                "setTransferApplyStep",
                "transferApplyRequested",
                "transferApplySucceed",
                "transferApplyFailed",
                "hideTransferApplyError",
                "resetTransferApply",
                "setTransferStep",
                "queryTransferAddMaterialInfoRequested",
                "queryTransferAddMaterialInfoSucceed",
                "queryTransferAddMaterialInfoFailed",
                "transferAddMaterialCommitRequested",
                "transferAddMaterialCommitSucceed",
                "transferAddMaterialCommitFailed",
                "resetTransferAddMaterialCommit",
                "cancelTransferRequested",
                "cancelTransferSucceed",
                "cancelTransferFailed",
                "resetCancelTransfer",
                "setCancelModal",
                "addCardInfoRequested",
                "addCardInfoSucceed",
                "addCardInfoFailed",
                "querySupportBoostRequested",
                "querySupportBoostSucceed",
                "querySupportBoostFailed",
                "resetQuerySupportBoost",
                "queryCanFastWithdrawWorkRequested",
                "queryCanFastWithdrawWorkFailed",
                "queryCanFastWithdrawWorkSuccess",
                "queryACrossBorderRequested",
                "queryACrossBorderSuccess",
                "queryACrossBorderFailed",
                "getAbRequested",
                "getAbSucceed",
                "getAbFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "userActions",
              "sourceValue": "actions/user",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts",
              "exportNames": [
                "getUserFlowId",
                "getUserFlowIdAndCaptcha",
                "getUserFlowIdSucceed",
                "getUserFlowIdFailed",
                "initUserFlowId",
                "getUserCaptcha",
                "getUserCaptchaSucceed",
                "getUserCaptchaFailed",
                "initUserCaptcha",
                "verifyMfaRequested",
                "verifyMfaSucceed",
                "verifyMfaFailed",
                "initVerifyMfa",
                "setAuthId",
                "resetAuthId",
                "executeAuthIdCallBackRequested",
                "executeAuthIdCallBackSucceed",
                "executeAuthIdCallBackFailed",
                "sendMfaMessageRequested",
                "getMfaCaptchaRequested",
                "getMfaCaptchaSucceed",
                "getMfaCaptchaFailed",
                "initMfaCaptcha",
                "getWhiteListRequested",
                "getWhiteListSucceed",
                "getWhiteListFailed",
                "getWhiteListInit",
                "setMfaJson",
                "resetMfaJson",
                "queryIndustryRequested",
                "queryIndustrySucceed",
                "queryIndustryFailed",
                "queryRestrictionList",
                "queryRestrictionListSucceed",
                "queryRestrictionListFailed"
              ]
            },
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            },
            {
              "isNamespace": false,
              "localName": "change",
              "importedName": "change",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "touch",
              "importedName": "touch",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 73,
                  "column": 59,
                  "index": 1888
                },
                "end": {
                  "line": 156,
                  "column": 1,
                  "index": 4120
                }
              },
              "actionsMethods": [],
              "usedActionsDependencies": [],
              "nodeLoc": {
                "start": {
                  "line": 73,
                  "column": 59,
                  "index": 1888
                },
                "end": {
                  "line": 156,
                  "column": 1,
                  "index": 4120
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["withdrawActions", "userActions"],
          "objectPropertyMap": {
            "push": "push",
            "change": "change",
            "touch": "touch"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/PartnerLoginForm/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "securityActions",
              "sourceValue": "actions/security",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/security.ts",
              "exportNames": [
                "checkABVType",
                "openABVPanel",
                "closeABVPanel",
                "validateCaptchaRequested",
                "validateCaptchaSucceed",
                "validateCaptchaFailed",
                "initValidateCaptcha",
                "setABVVeriType",
                "logSliderVeriInfo",
                "updateXRateLimitRoute"
              ]
            },
            {
              "isNamespace": true,
              "localName": "submitActions",
              "sourceValue": "actions/submit",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/submit.ts",
              "exportNames": [
                "submitRequested",
                "submitSucceed",
                "submitFailed",
                "resetSubmit"
              ]
            },
            {
              "isNamespace": true,
              "localName": "userActions",
              "sourceValue": "actions/user",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts",
              "exportNames": [
                "getUserFlowId",
                "getUserFlowIdAndCaptcha",
                "getUserFlowIdSucceed",
                "getUserFlowIdFailed",
                "initUserFlowId",
                "getUserCaptcha",
                "getUserCaptchaSucceed",
                "getUserCaptchaFailed",
                "initUserCaptcha",
                "verifyMfaRequested",
                "verifyMfaSucceed",
                "verifyMfaFailed",
                "initVerifyMfa",
                "setAuthId",
                "resetAuthId",
                "executeAuthIdCallBackRequested",
                "executeAuthIdCallBackSucceed",
                "executeAuthIdCallBackFailed",
                "sendMfaMessageRequested",
                "getMfaCaptchaRequested",
                "getMfaCaptchaSucceed",
                "getMfaCaptchaFailed",
                "initMfaCaptcha",
                "getWhiteListRequested",
                "getWhiteListSucceed",
                "getWhiteListFailed",
                "getWhiteListInit",
                "setMfaJson",
                "resetMfaJson",
                "queryIndustryRequested",
                "queryIndustrySucceed",
                "queryIndustryFailed",
                "queryRestrictionList",
                "queryRestrictionListSucceed",
                "queryRestrictionListFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "vcodeActions",
              "sourceValue": "actions/vcode",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/vcode.ts",
              "exportNames": [
                "updateCountDownSeconds",
                "stopVcodeCountDown",
                "sendVcodeMessage",
                "sendVcodeMessageSucceed",
                "sendVcodeMessageFailed",
                "hideVcodeTip"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 66,
                  "column": 54,
                  "index": 2647
                },
                "end": {
                  "line": 171,
                  "column": 1,
                  "index": 5759
                }
              },
              "actionsMethods": [
                {
                  "name": "getUserFlowId",
                  "usage": "EMGetUserFlowIdUsages.PartnerSignIn"
                },
                {
                  "name": "checkABVType",
                  "usage": "EMGetUserCaptchaUsages.PartnerSignIn"
                },
                {
                  "name": "sendVcodeMessage"
                },
                {
                  "name": "submitRequested",
                  "usage": "EMSubmitUsages.PartnerSignIn"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "getUserFlowId",
                  "importedName": "getUserFlowId",
                  "sourceValue": "actions/user",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts",
                  "usage": "EMGetUserFlowIdUsages.PartnerSignIn"
                },
                {
                  "localName": "checkABVType",
                  "importedName": "checkABVType",
                  "sourceValue": "actions/security",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/security.ts",
                  "usage": "EMGetUserCaptchaUsages.PartnerSignIn"
                },
                {
                  "localName": "sendVcodeMessage",
                  "importedName": "sendVcodeMessage",
                  "sourceValue": "actions/vcode",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/vcode.ts"
                },
                {
                  "localName": "submitRequested",
                  "importedName": "submitRequested",
                  "sourceValue": "actions/submit",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/submit.ts",
                  "usage": "EMSubmitUsages.PartnerSignIn"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 66,
                  "column": 54,
                  "index": 2647
                },
                "end": {
                  "line": 171,
                  "column": 1,
                  "index": 5759
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [
            "securityActions",
            "submitActions",
            "userActions",
            "vcodeActions"
          ],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XtBean/components/XtBeanSpend/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": false,
              "localName": "replace",
              "importedName": "replace",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "XtBeanSpend",
              "loc": {
                "start": {
                  "line": 357,
                  "column": 13,
                  "index": 11116
                },
                "end": {
                  "line": 357,
                  "column": 24,
                  "index": 11127
                },
                "identifierName": "XtBeanSpend"
              },
              "actionsMethods": [
                {
                  "name": "replace"
                }
              ],
              "usedActionsDependencies": [
                {
                  "isNamespace": false,
                  "localName": "replace",
                  "importedName": "replace",
                  "sourceValue": "react-router-redux",
                  "dependencyPath": "react-router-redux"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 52,
                  "column": 6,
                  "index": 2035
                },
                "end": {
                  "line": 52,
                  "column": 17,
                  "index": 2046
                },
                "identifierName": "XtBeanSpend"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {
            "replace": "replace"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Settings/GrantFxWithdraw/OrderExchangeStep/StepOne/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": false,
              "localName": "getUserFlowId",
              "importedName": "getUserFlowId",
              "sourceValue": "actions/user",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts"
            },
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [],
          "warnings": [
            "[Warning] #230 lastArguments.length !== 1 (start line: 178, start column: 18, end line: 178",
            ", end column: 62)"
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {
            "getUserFlowId": "getUserFlowId",
            "push": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Settings/GrantFxWithdraw/OrderExchangeStep/StepThree/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "StepThree",
              "loc": {
                "start": {
                  "line": 69,
                  "column": 2,
                  "index": 1814
                },
                "end": {
                  "line": 69,
                  "column": 11,
                  "index": 1823
                },
                "identifierName": "StepThree"
              },
              "actionsMethods": [
                {
                  "name": "isFaceverifiedStop"
                },
                {
                  "name": "push"
                },
                {
                  "name": "isFaceverifiedCleared"
                }
              ],
              "usedActionsDependencies": [
                {
                  "isNamespace": false,
                  "localName": "push",
                  "importedName": "push",
                  "sourceValue": "react-router-redux",
                  "dependencyPath": "react-router-redux"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 18,
                  "column": 6,
                  "index": 550
                },
                "end": {
                  "line": 18,
                  "column": 35,
                  "index": 579
                },
                "identifierName": "StepThree"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {
            "push": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Settings/GrantFxWithdraw/OrderExchangeStep/StepTwo/index.tsx",
      "localConnect": "connect",
      "localCompose": "compose",
      "groups": [
        {
          "actionsDependencies": [],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "StepTwo",
              "loc": {
                "start": {
                  "line": 210,
                  "column": 2,
                  "index": 5452
                },
                "end": {
                  "line": 210,
                  "column": 9,
                  "index": 5459
                },
                "identifierName": "StepTwo"
              },
              "actionsMethods": [
                {
                  "name": "isFaceverifiedReq"
                },
                {
                  "name": "isFaceverifiedStop"
                },
                {
                  "name": "isFaceverifiedClear"
                },
                {
                  "name": "faceVerifyChallengeReq"
                }
              ],
              "usedActionsDependencies": [],
              "nodeLoc": {
                "start": {
                  "line": 27,
                  "column": 6,
                  "index": 947
                },
                "end": {
                  "line": 27,
                  "column": 25,
                  "index": 966
                },
                "identifierName": "StepTwo"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/WithdrawEasyFXApplyForm/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "withdrawActions",
              "sourceValue": "actions/withdraw",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts",
              "exportNames": [
                "withdrawListRequested",
                "withdrawListSucceed",
                "withdrawListFailed",
                "hideWithdrawListError",
                "resetWithdrawList",
                "changeTab",
                "switchWithdrawApplyModal",
                "setWithdrawApplyIsReserved",
                "withdrawApplyRequested",
                "withdrawApplySucceed",
                "withdrawApplyFailed",
                "hideWithdrawApplyError",
                "setStep",
                "resetWithdrawApply",
                "withdrawInitRequested",
                "withdrawInitSucceed",
                "withdrawInitFailed",
                "hideWithdrawInitError",
                "withdrawDebtRequested",
                "withdrawDebtSucceed",
                "withdrawDebtFailed",
                "hideWithdrawDebtError",
                "removeRelatedItemOrderId",
                "addRelatedItemOrderId",
                "inputChangeRelatedItemValue",
                "resetRelatedOrders",
                "changeRelatedOrderChecked",
                "resetRelatedOrderChecked",
                "swithWithdrawFXApplyModal",
                "setWithdrawFXApplyStep",
                "setWithdrawFXApplyIsReserved",
                "withdrawFXApplyRequested",
                "withdrawFXApplySucceed",
                "withdrawFXApplyFailed",
                "hideWithdrawFXApplyError",
                "resetWithdrawFXApply",
                "isWithdrawErrorPage",
                "getFXWithdrawFeeRequested",
                "getFXWithdrawFeeSucceed",
                "getFXWithdrawFeeFailed",
                "hideGetFXWithdrawFeeError",
                "resetGetFXWithdrawFee",
                "getFXCanRelatedOrderRequested",
                "getFXCanRelatedOrderSucceed",
                "getFXCanRelatedOrderFailed",
                "hideGetFXCanRelatedOrderError",
                "resetGetFXCanRelatedOrder",
                "pushFXCanRelatedOrderRequested",
                "pushFXCanRelatedOrderSucceed",
                "pushFXCanRelatedOrderFailed",
                "swithWithdrawFXReApplyModal",
                "setWithdrawFXReApplyStep",
                "withdrawFXReApplyRequested",
                "withdrawFXReApplySucceed",
                "withdrawFXReApplyFailed",
                "resetWithdrawFXReApply",
                "hideWithdrawFXReApplyError",
                "getWithdrawReApplyItemRequested",
                "getWithdrawReApplyItemSucceed",
                "getWithdrawReApplyItemFailed",
                "resetGetWithdrawReApplyItem",
                "withdrawCheckBothFrozen",
                "withdrawCheckBothFrozenSucceed",
                "withdrawCheckBothFrozenFailed",
                "getFxWithdrawHolderTypeRequested",
                "getFxWithdrawHolderTypeSucceed",
                "getFxWithdrawHolderTypeFailed",
                "withdrawDetailRequested",
                "withdrawDetailSucceed",
                "withdrawDetailFailed",
                "resetWithdrawDetail",
                "withdrawFeeRequested",
                "withdrawFeeSucceed",
                "withdrawFeeFailed",
                "queryAddMaterialInfoRequested",
                "queryAddMaterialInfoSucceed",
                "queryAddMaterialInfoFailed",
                "addMaterialCommitRequested",
                "addMaterialCommitSucceed",
                "addMaterialCommitFailed",
                "resetAddMaterialCommit",
                "cancelFxWithdrawRequested",
                "cancelFxWithdrawSucceed",
                "cancelFxWithdrawFailed",
                "resetCancelFxWithdraw",
                "setCancelFxWithdrawModal",
                "cancelWithdrawRequested",
                "cancelWithdrawSucceed",
                "cancelWithdrawFailed",
                "resetCancelWithdraw",
                "setCancelWithdrawModal",
                "cancelOnGoingTransferRequested",
                "cancelOnGoingTransferSucceed",
                "cancelOnGoingTransferFailed",
                "resetCancelOnGoingTransfer",
                "setCancelOnGoingTransferModal",
                "withdrawSupportCcys",
                "withdrawSupportCcysSucceed",
                "withdrawSupportCcysFailed",
                "transferFeeRequested",
                "transferFeeSucceed",
                "transferFeeFailed",
                "setTransferApplyStep",
                "transferApplyRequested",
                "transferApplySucceed",
                "transferApplyFailed",
                "hideTransferApplyError",
                "resetTransferApply",
                "setTransferStep",
                "queryTransferAddMaterialInfoRequested",
                "queryTransferAddMaterialInfoSucceed",
                "queryTransferAddMaterialInfoFailed",
                "transferAddMaterialCommitRequested",
                "transferAddMaterialCommitSucceed",
                "transferAddMaterialCommitFailed",
                "resetTransferAddMaterialCommit",
                "cancelTransferRequested",
                "cancelTransferSucceed",
                "cancelTransferFailed",
                "resetCancelTransfer",
                "setCancelModal",
                "addCardInfoRequested",
                "addCardInfoSucceed",
                "addCardInfoFailed",
                "querySupportBoostRequested",
                "querySupportBoostSucceed",
                "querySupportBoostFailed",
                "resetQuerySupportBoost",
                "queryCanFastWithdrawWorkRequested",
                "queryCanFastWithdrawWorkFailed",
                "queryCanFastWithdrawWorkSuccess",
                "queryACrossBorderRequested",
                "queryACrossBorderSuccess",
                "queryACrossBorderFailed",
                "getAbRequested",
                "getAbSucceed",
                "getAbFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "withdrawalsActions",
              "sourceValue": "actions/withdrawals",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts",
              "exportNames": [
                "accountListRequested",
                "accountListSucceed",
                "accountListFailed",
                "hideAccountListError",
                "deleteItemRequested",
                "deleteItemSucceed",
                "deleteItemFailed",
                "swithDeleteItemModal",
                "setDeleteItemId",
                "setDeleteItemType",
                "hideDeleteItemError",
                "historyDetailRequested",
                "historyDetailSucceed",
                "historyDetailFailed",
                "hideHistoryDetailError",
                "createAccountRequested",
                "createAccountSucceed",
                "createAccountFailed",
                "setCreateAccountStep",
                "resetCreateAccount",
                "hideCreateAccountError",
                "withdrawFXAddRequested",
                "withdrawFXAddSucceed",
                "withdrawFXAddFailed",
                "hideWithdrawFXAddError",
                "setWithdrawFXAddStep",
                "resetWithdrawFXAdd",
                "withdrawFXAddVerifyRequested",
                "withdrawFXAddVerifySucceed",
                "withdrawFXAddVerifyFailed",
                "queryBanks",
                "queryBanksSucceed",
                "queryBanksFailed",
                "queryProvinces",
                "queryProvincesSucceed",
                "queryProvincesFailed",
                "getLegalProfile",
                "getLegalProfileSucceed",
                "getLegalProfileFailed",
                "createTransferAccountRequested",
                "createTransferAccountSucceed",
                "createTransferAccountFailed",
                "hideCreateTransferAccountError",
                "setCreateTransferAccountStep",
                "resetCreateTransferAccount",
                "setBeneficiaryNameError",
                "getBeneficiayAccountNoRequested",
                "getBeneficiayAccountNoSucceed",
                "getBeneficiayAccountNoFailed",
                "resetBeneficiayAccountNo",
                "getAccountLimitRequested",
                "getAccountLimitSucceed",
                "getAccountLimitFailed",
                "bindAccountPhoneNoRequested",
                "bindAccountPhoneNoSucceed",
                "bindAccountPhoneNoFailed",
                "bindAccountPhoneNoVerifyFailed",
                "swithBindPhoneNoModal",
                "getBeneficiayPhoneNoRequested",
                "getBeneficiayPhoneNoSucceed",
                "getBeneficiayPhoneNoFailed",
                "resetBeneficiayPhoneNo",
                "getFXPrivateAgreementRequested",
                "getFXPrivateAgreementSucceed",
                "getFXPrivateAgreementFailed",
                "getFXPublicAgreementRequested",
                "getFXPublicAgreementSucceed",
                "getFXPublicAgreementFailed",
                "getTransferPublicAgreementRequested",
                "getTransferPublicAgreementSucceed",
                "getTransferPublicAgreementFailed",
                "getWithdrawNormalAgreementRequested",
                "getWithdrawNormalAgreementSucceed",
                "getWithdrawNormalAgreementFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "metaActions",
              "sourceValue": "actions/meta",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
              "exportNames": [
                "fetchMetaRequested",
                "fetchMetaSucceed",
                "fetchMetaFailed",
                "resetFetchMeta",
                "hideFetchMetaError"
              ]
            },
            {
              "isNamespace": true,
              "localName": "xptransferActions",
              "sourceValue": "actions/xpTransfer",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xpTransfer.ts",
              "exportNames": [
                "pendingSpotsRequested",
                "pendingSpotsSucceed",
                "pendingSpotsFailed",
                "supportCurrencyRequested",
                "supportCurrencySucceed",
                "supportCurrencyFailed",
                "pricingListRequested",
                "pricingListSucceed",
                "pricingListFailed",
                "innerTransferApplyRequested",
                "innerTransferApplySucceed",
                "innerTransferApplyFailed",
                "initInnerTransferApply",
                "setXPTransferApplyStep",
                "innerTransferDetailRequested",
                "innerTransferDetailSucceed",
                "innerTransferDetailFailed",
                "innerTransferListRequested",
                "innerTransferListSucceed",
                "innerTransferListFailed",
                "exportTransferRequested",
                "exportTransferSucceed",
                "exportTransferFailed",
                "setTransferModal",
                "updateApplyCheckList",
                "initApplyCheckList"
              ]
            },
            {
              "isNamespace": true,
              "localName": "submitActions",
              "sourceValue": "actions/submit",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/submit.ts",
              "exportNames": [
                "submitRequested",
                "submitSucceed",
                "submitFailed",
                "resetSubmit"
              ]
            },
            {
              "isNamespace": true,
              "localName": "fundActions",
              "sourceValue": "actions/fund",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fund.ts",
              "exportNames": [
                "getFrozenListRequested",
                "getFrozenListSucceed",
                "getFrozenListFailed",
                "initFrozenList",
                "getWithDrawSpeedFlagRequested",
                "getWithDrawSpeedFlagSucceed",
                "getWithDrawSpeedFlagFailed",
                "getWithDrawDateRequested",
                "getWithDrawDateSucceed",
                "getWithDrawDateFailed",
                "getBankCardInfoRequested",
                "getBankCardInfoSucceed",
                "getBankCardInfoFailed",
                "resetBankCardInfo"
              ]
            },
            {
              "isNamespace": false,
              "localName": "reset",
              "importedName": "reset",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            },
            {
              "isNamespace": false,
              "localName": "touch",
              "importedName": "touch",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "change",
              "importedName": "change",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "toggleModalStatus",
              "importedName": "toggleModalStatus",
              "sourceValue": "actions/modal",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/modal.ts"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 103,
                  "column": 58,
                  "index": 3718
                },
                "end": {
                  "line": 416,
                  "column": 1,
                  "index": 12659
                }
              },
              "actionsMethods": [
                {
                  "name": "change"
                },
                {
                  "name": "submitRequested",
                  "usage": "EMSubmitUsages.ProtocolSign"
                },
                {
                  "name": "toggleModalStatus",
                  "usage": "EMModalUsages.OrderAddMaterialModal"
                },
                {
                  "name": "getLegalProfile"
                },
                {
                  "name": "queryBanks"
                },
                {
                  "name": "initApplyCheckList"
                },
                {
                  "name": "touch"
                },
                {
                  "name": "setWithdrawFXApplyStep"
                },
                {
                  "name": "resetWithdrawFXApply"
                },
                {
                  "name": "reset"
                },
                {
                  "name": "resetGetFXWithdrawFee"
                },
                {
                  "name": "resetRelatedOrders"
                },
                {
                  "name": "withdrawFXApplySucceed"
                },
                {
                  "name": "withdrawFXApplyFailed"
                },
                {
                  "name": "withdrawFXApplyRequested",
                  "usage": "EMGetUserFlowIdUsages.withdrawCrossBorderAOrder"
                },
                {
                  "name": "fetchMetaRequested",
                  "usage": "EMMetaUsages.OrderSupplementaryMaterials"
                }
              ],
              "usedActionsDependencies": [
                {
                  "isNamespace": false,
                  "localName": "change",
                  "importedName": "change",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                },
                {
                  "localName": "submitRequested",
                  "importedName": "submitRequested",
                  "sourceValue": "actions/submit",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/submit.ts",
                  "usage": "EMSubmitUsages.ProtocolSign"
                },
                {
                  "isNamespace": false,
                  "localName": "toggleModalStatus",
                  "importedName": "toggleModalStatus",
                  "sourceValue": "actions/modal",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/modal.ts"
                },
                {
                  "localName": "getLegalProfile",
                  "importedName": "getLegalProfile",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts"
                },
                {
                  "localName": "queryBanks",
                  "importedName": "queryBanks",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts"
                },
                {
                  "localName": "initApplyCheckList",
                  "importedName": "initApplyCheckList",
                  "sourceValue": "actions/xpTransfer",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xpTransfer.ts"
                },
                {
                  "isNamespace": false,
                  "localName": "touch",
                  "importedName": "touch",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                },
                {
                  "localName": "setWithdrawFXApplyStep",
                  "importedName": "setWithdrawFXApplyStep",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "localName": "resetWithdrawFXApply",
                  "importedName": "resetWithdrawFXApply",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "isNamespace": false,
                  "localName": "reset",
                  "importedName": "reset",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                },
                {
                  "localName": "resetGetFXWithdrawFee",
                  "importedName": "resetGetFXWithdrawFee",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "localName": "resetRelatedOrders",
                  "importedName": "resetRelatedOrders",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "localName": "withdrawFXApplySucceed",
                  "importedName": "withdrawFXApplySucceed",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "localName": "withdrawFXApplyFailed",
                  "importedName": "withdrawFXApplyFailed",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts"
                },
                {
                  "localName": "withdrawFXApplyRequested",
                  "importedName": "withdrawFXApplyRequested",
                  "sourceValue": "actions/withdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts",
                  "usage": "EMGetUserFlowIdUsages.withdrawCrossBorderAOrder"
                },
                {
                  "localName": "fetchMetaRequested",
                  "importedName": "fetchMetaRequested",
                  "sourceValue": "actions/meta",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
                  "usage": "EMMetaUsages.OrderSupplementaryMaterials"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 103,
                  "column": 58,
                  "index": 3718
                },
                "end": {
                  "line": 416,
                  "column": 1,
                  "index": 12659
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [
            "withdrawActions",
            "withdrawalsActions",
            "metaActions",
            "xptransferActions",
            "submitActions",
            "fundActions"
          ],
          "objectPropertyMap": {
            "reset": "reset",
            "push": "push",
            "touch": "touch",
            "change": "change",
            "toggleModalStatus": "toggleModalStatus"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/containers/LoanWithdraw/StepTwo.tsx",
      "localConnect": "connect",
      "localCompose": "compose",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": false,
              "localName": "change",
              "importedName": "change",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "destroy",
              "importedName": "destroy",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "StepTwo",
              "loc": {
                "start": {
                  "line": 242,
                  "column": 2,
                  "index": 7145
                },
                "end": {
                  "line": 242,
                  "column": 9,
                  "index": 7152
                },
                "identifierName": "StepTwo"
              },
              "actionsMethods": [
                {
                  "name": "contractQuery"
                },
                {
                  "name": "pledgeRate"
                },
                {
                  "name": "destroyForm"
                },
                {
                  "name": "stepTwoCheckedChange"
                }
              ],
              "usedActionsDependencies": [
                {
                  "isNamespace": false,
                  "localName": "destroy",
                  "importedName": "destroy",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 46,
                  "column": 6,
                  "index": 1896
                },
                "end": {
                  "line": 46,
                  "column": 31,
                  "index": 1921
                },
                "identifierName": "StepTwo"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {
            "changeFormValue": "change",
            "destroyForm": "destroy"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/SliderVerification/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "authActions",
              "sourceValue": "actions/auth",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/auth.ts",
              "exportNames": [
                "oauthRequested",
                "oauthSucceed",
                "logoutRequested",
                "logoutSucceed",
                "unauthorized",
                "signInRequested",
                "signInSucceed",
                "signInFailed",
                "initSignIn",
                "wechatSignInRequested",
                "wechatSignInSucceed",
                "wechatSignInFailed",
                "setWechatSignInSliderData",
                "setWechatSignInSliderError",
                "initWechatSignIn",
                "setWechatSignInState",
                "pollingQRScannedRequested",
                "pollingQRScannedSucceed",
                "pollingQRScannedFailed",
                "pollingQRConfirmedRequested",
                "pollingQRConfirmedSucceed",
                "pollingQRConfirmedFailed",
                "resetQRConfirmed",
                "qrcodeSigninRequested"
              ]
            },
            {
              "isNamespace": true,
              "localName": "userActions",
              "sourceValue": "actions/user",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts",
              "exportNames": [
                "getUserFlowId",
                "getUserFlowIdAndCaptcha",
                "getUserFlowIdSucceed",
                "getUserFlowIdFailed",
                "initUserFlowId",
                "getUserCaptcha",
                "getUserCaptchaSucceed",
                "getUserCaptchaFailed",
                "initUserCaptcha",
                "verifyMfaRequested",
                "verifyMfaSucceed",
                "verifyMfaFailed",
                "initVerifyMfa",
                "setAuthId",
                "resetAuthId",
                "executeAuthIdCallBackRequested",
                "executeAuthIdCallBackSucceed",
                "executeAuthIdCallBackFailed",
                "sendMfaMessageRequested",
                "getMfaCaptchaRequested",
                "getMfaCaptchaSucceed",
                "getMfaCaptchaFailed",
                "initMfaCaptcha",
                "getWhiteListRequested",
                "getWhiteListSucceed",
                "getWhiteListFailed",
                "getWhiteListInit",
                "setMfaJson",
                "resetMfaJson",
                "queryIndustryRequested",
                "queryIndustrySucceed",
                "queryIndustryFailed",
                "queryRestrictionList",
                "queryRestrictionListSucceed",
                "queryRestrictionListFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "errorActions",
              "sourceValue": "actions/error",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/error.ts",
              "exportNames": ["specificSpotError"]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 31,
                  "column": 58,
                  "index": 723
                },
                "end": {
                  "line": 128,
                  "column": 1,
                  "index": 3362
                }
              },
              "actionsMethods": [
                {
                  "name": "getMfaCaptchaRequested"
                },
                {
                  "name": "getUserCaptcha"
                },
                {
                  "name": "specificSpotError"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "getMfaCaptchaRequested",
                  "importedName": "getMfaCaptchaRequested",
                  "sourceValue": "actions/user",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts"
                },
                {
                  "localName": "getUserCaptcha",
                  "importedName": "getUserCaptcha",
                  "sourceValue": "actions/user",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts"
                },
                {
                  "localName": "specificSpotError",
                  "importedName": "specificSpotError",
                  "sourceValue": "actions/error",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/error.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 31,
                  "column": 58,
                  "index": 723
                },
                "end": {
                  "line": 128,
                  "column": 1,
                  "index": 3362
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["authActions", "userActions", "errorActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/SliderTencent/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "authActions",
              "sourceValue": "actions/auth",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/auth.ts",
              "exportNames": [
                "oauthRequested",
                "oauthSucceed",
                "logoutRequested",
                "logoutSucceed",
                "unauthorized",
                "signInRequested",
                "signInSucceed",
                "signInFailed",
                "initSignIn",
                "wechatSignInRequested",
                "wechatSignInSucceed",
                "wechatSignInFailed",
                "setWechatSignInSliderData",
                "setWechatSignInSliderError",
                "initWechatSignIn",
                "setWechatSignInState",
                "pollingQRScannedRequested",
                "pollingQRScannedSucceed",
                "pollingQRScannedFailed",
                "pollingQRConfirmedRequested",
                "pollingQRConfirmedSucceed",
                "pollingQRConfirmedFailed",
                "resetQRConfirmed",
                "qrcodeSigninRequested"
              ]
            },
            {
              "isNamespace": true,
              "localName": "userActions",
              "sourceValue": "actions/user",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts",
              "exportNames": [
                "getUserFlowId",
                "getUserFlowIdAndCaptcha",
                "getUserFlowIdSucceed",
                "getUserFlowIdFailed",
                "initUserFlowId",
                "getUserCaptcha",
                "getUserCaptchaSucceed",
                "getUserCaptchaFailed",
                "initUserCaptcha",
                "verifyMfaRequested",
                "verifyMfaSucceed",
                "verifyMfaFailed",
                "initVerifyMfa",
                "setAuthId",
                "resetAuthId",
                "executeAuthIdCallBackRequested",
                "executeAuthIdCallBackSucceed",
                "executeAuthIdCallBackFailed",
                "sendMfaMessageRequested",
                "getMfaCaptchaRequested",
                "getMfaCaptchaSucceed",
                "getMfaCaptchaFailed",
                "initMfaCaptcha",
                "getWhiteListRequested",
                "getWhiteListSucceed",
                "getWhiteListFailed",
                "getWhiteListInit",
                "setMfaJson",
                "resetMfaJson",
                "queryIndustryRequested",
                "queryIndustrySucceed",
                "queryIndustryFailed",
                "queryRestrictionList",
                "queryRestrictionListSucceed",
                "queryRestrictionListFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "securityActions",
              "sourceValue": "actions/security",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/security.ts",
              "exportNames": [
                "checkABVType",
                "openABVPanel",
                "closeABVPanel",
                "validateCaptchaRequested",
                "validateCaptchaSucceed",
                "validateCaptchaFailed",
                "initValidateCaptcha",
                "setABVVeriType",
                "logSliderVeriInfo",
                "updateXRateLimitRoute"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 48,
                  "column": 104,
                  "index": 1297
                },
                "end": {
                  "line": 140,
                  "column": 1,
                  "index": 3580
                }
              },
              "actionsMethods": [
                {
                  "name": "closeABVPanel",
                  "usageVariable": "usage"
                },
                {
                  "name": "getMfaCaptchaRequested"
                },
                {
                  "name": "getUserCaptcha"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "closeABVPanel",
                  "importedName": "closeABVPanel",
                  "sourceValue": "actions/security",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/security.ts",
                  "usageVariable": "usage"
                },
                {
                  "localName": "getMfaCaptchaRequested",
                  "importedName": "getMfaCaptchaRequested",
                  "sourceValue": "actions/user",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts"
                },
                {
                  "localName": "getUserCaptcha",
                  "importedName": "getUserCaptcha",
                  "sourceValue": "actions/user",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 48,
                  "column": 104,
                  "index": 1297
                },
                "end": {
                  "line": 140,
                  "column": 1,
                  "index": 3580
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["authActions", "userActions", "securityActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/RegisterForm/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "actions",
              "sourceValue": "actions/register",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/register.ts",
              "exportNames": [
                "registerStepOneRequested",
                "registerStepOneSucceed",
                "registerStepOneFailed",
                "hideRegisterStepOneError",
                "registerStepTwoRequested",
                "registerStepTwoSucceed",
                "registerStepTwoFailed",
                "hideRegisterStepTwoError",
                "setRegisterStep",
                "resetRegister"
              ]
            },
            {
              "isNamespace": true,
              "localName": "pwStrengthActions",
              "sourceValue": "actions/pwStrength",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/pwStrength.ts",
              "exportNames": ["setPwStrength", "resetPwStrength"]
            },
            {
              "isNamespace": true,
              "localName": "userActions",
              "sourceValue": "actions/user",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts",
              "exportNames": [
                "getUserFlowId",
                "getUserFlowIdAndCaptcha",
                "getUserFlowIdSucceed",
                "getUserFlowIdFailed",
                "initUserFlowId",
                "getUserCaptcha",
                "getUserCaptchaSucceed",
                "getUserCaptchaFailed",
                "initUserCaptcha",
                "verifyMfaRequested",
                "verifyMfaSucceed",
                "verifyMfaFailed",
                "initVerifyMfa",
                "setAuthId",
                "resetAuthId",
                "executeAuthIdCallBackRequested",
                "executeAuthIdCallBackSucceed",
                "executeAuthIdCallBackFailed",
                "sendMfaMessageRequested",
                "getMfaCaptchaRequested",
                "getMfaCaptchaSucceed",
                "getMfaCaptchaFailed",
                "initMfaCaptcha",
                "getWhiteListRequested",
                "getWhiteListSucceed",
                "getWhiteListFailed",
                "getWhiteListInit",
                "setMfaJson",
                "resetMfaJson",
                "queryIndustryRequested",
                "queryIndustrySucceed",
                "queryIndustryFailed",
                "queryRestrictionList",
                "queryRestrictionListSucceed",
                "queryRestrictionListFailed"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 88,
                  "column": 52,
                  "index": 2360
                },
                "end": {
                  "line": 136,
                  "column": 1,
                  "index": 4071
                }
              },
              "actionsMethods": [
                {
                  "name": "getUserFlowId",
                  "usage": "EMGetUserFlowIdUsages.SignUp"
                },
                {
                  "name": "initUserCaptcha",
                  "usage": "EMGetUserFlowIdUsages.SignUp"
                },
                {
                  "name": "resetRegister"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "getUserFlowId",
                  "importedName": "getUserFlowId",
                  "sourceValue": "actions/user",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts",
                  "usage": "EMGetUserFlowIdUsages.SignUp"
                },
                {
                  "localName": "initUserCaptcha",
                  "importedName": "initUserCaptcha",
                  "sourceValue": "actions/user",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts",
                  "usage": "EMGetUserFlowIdUsages.SignUp"
                },
                {
                  "localName": "resetRegister",
                  "importedName": "resetRegister",
                  "sourceValue": "actions/register",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/register.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 88,
                  "column": 52,
                  "index": 2360
                },
                "end": {
                  "line": 136,
                  "column": 1,
                  "index": 4071
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["actions", "pwStrengthActions", "userActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/containers/OrderLoan/BeforeAssign.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "BeforeAssign",
              "loc": {
                "start": {
                  "line": 126,
                  "column": 3,
                  "index": 3415
                },
                "end": {
                  "line": 126,
                  "column": 15,
                  "index": 3427
                },
                "identifierName": "BeforeAssign"
              },
              "actionsMethods": [
                {
                  "name": "push"
                },
                {
                  "name": "initialProdInfoReq"
                }
              ],
              "usedActionsDependencies": [
                {
                  "isNamespace": false,
                  "localName": "push",
                  "importedName": "push",
                  "sourceValue": "react-router-redux",
                  "dependencyPath": "react-router-redux"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 25,
                  "column": 6,
                  "index": 963
                },
                "end": {
                  "line": 25,
                  "column": 41,
                  "index": 998
                },
                "identifierName": "BeforeAssign"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {
            "push": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/containers/OrderLoan/AfterAssign.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "AfterAssign",
              "loc": {
                "start": {
                  "line": 89,
                  "column": 106,
                  "index": 2489
                },
                "end": {
                  "line": 89,
                  "column": 117,
                  "index": 2500
                },
                "identifierName": "AfterAssign"
              },
              "actionsMethods": [
                {
                  "name": "requestQuota"
                },
                {
                  "name": "applyRule"
                }
              ],
              "usedActionsDependencies": [],
              "nodeLoc": {
                "start": {
                  "line": 19,
                  "column": 6,
                  "index": 647
                },
                "end": {
                  "line": 19,
                  "column": 39,
                  "index": 680
                },
                "identifierName": "AfterAssign"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/containers/MyLoans/BalanceInfo.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "BalanceInfo",
              "loc": {
                "start": {
                  "line": 98,
                  "column": 2,
                  "index": 2622
                },
                "end": {
                  "line": 98,
                  "column": 13,
                  "index": 2633
                },
                "identifierName": "BalanceInfo"
              },
              "actionsMethods": [
                {
                  "name": "repaymentAccount"
                }
              ],
              "usedActionsDependencies": [],
              "nodeLoc": {
                "start": {
                  "line": 17,
                  "column": 6,
                  "index": 503
                },
                "end": {
                  "line": 17,
                  "column": 45,
                  "index": 542
                },
                "identifierName": "BalanceInfo"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/containers/LoanWithdraw/StepFour.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": false,
              "localName": "clearForms",
              "importedName": "clearForms",
              "sourceValue": "enterpriseFinancing/actions/loanWithdraw",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/actions/loanWithdraw.ts"
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "StepFour",
              "loc": {
                "start": {
                  "line": 128,
                  "column": 2,
                  "index": 3233
                },
                "end": {
                  "line": 128,
                  "column": 10,
                  "index": 3241
                },
                "identifierName": "StepFour"
              },
              "actionsMethods": [
                {
                  "name": "clearForms"
                },
                {
                  "name": "withdrawResultRequest"
                }
              ],
              "usedActionsDependencies": [
                {
                  "isNamespace": false,
                  "localName": "clearForms",
                  "importedName": "clearForms",
                  "sourceValue": "enterpriseFinancing/actions/loanWithdraw",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/actions/loanWithdraw.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 23,
                  "column": 6,
                  "index": 756
                },
                "end": {
                  "line": 23,
                  "column": 33,
                  "index": 783
                },
                "identifierName": "StepFour"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {
            "clearForms": "clearForms"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/containers/LoanWithdraw/StepOne.tsx",
      "localConnect": "connect",
      "localCompose": "compose",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": false,
              "localName": "queryBanks",
              "importedName": "queryBanks",
              "sourceValue": "actions/withdrawals",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts"
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "StepOne",
              "loc": {
                "start": {
                  "line": 442,
                  "column": 2,
                  "index": 15319
                },
                "end": {
                  "line": 442,
                  "column": 9,
                  "index": 15326
                },
                "identifierName": "StepOne"
              },
              "actionsMethods": [
                {
                  "name": "bankAccountQuery"
                },
                {
                  "name": "productInfoRequest"
                },
                {
                  "name": "queryBanks"
                }
              ],
              "usedActionsDependencies": [
                {
                  "isNamespace": false,
                  "localName": "queryBanks",
                  "importedName": "queryBanks",
                  "sourceValue": "actions/withdrawals",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 49,
                  "column": 6,
                  "index": 1786
                },
                "end": {
                  "line": 49,
                  "column": 13,
                  "index": 1793
                },
                "identifierName": "StepOne"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {
            "queryBanks": "queryBanks"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/containers/LoanWithdraw/StepThree.tsx",
      "localConnect": "connect",
      "localCompose": "compose",
      "groups": [
        {
          "actionsDependencies": [],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "StepThree",
              "loc": {
                "start": {
                  "line": 348,
                  "column": 2,
                  "index": 11432
                },
                "end": {
                  "line": 348,
                  "column": 11,
                  "index": 11441
                },
                "identifierName": "StepThree"
              },
              "actionsMethods": [
                {
                  "name": "applyConfirm"
                },
                {
                  "name": "loanAgmtReq"
                }
              ],
              "usedActionsDependencies": [],
              "nodeLoc": {
                "start": {
                  "line": 41,
                  "column": 6,
                  "index": 1657
                },
                "end": {
                  "line": 41,
                  "column": 35,
                  "index": 1686
                },
                "identifierName": "StepThree"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/containers/OrderLoanApplication/StepOne.tsx",
      "localConnect": "connect",
      "localCompose": "compose",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "securityActions",
              "sourceValue": "actions/security",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/security.ts",
              "exportNames": [
                "checkABVType",
                "openABVPanel",
                "closeABVPanel",
                "validateCaptchaRequested",
                "validateCaptchaSucceed",
                "validateCaptchaFailed",
                "initValidateCaptcha",
                "setABVVeriType",
                "logSliderVeriInfo",
                "updateXRateLimitRoute"
              ]
            },
            {
              "isNamespace": true,
              "localName": "userActions",
              "sourceValue": "actions/user",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts",
              "exportNames": [
                "getUserFlowId",
                "getUserFlowIdAndCaptcha",
                "getUserFlowIdSucceed",
                "getUserFlowIdFailed",
                "initUserFlowId",
                "getUserCaptcha",
                "getUserCaptchaSucceed",
                "getUserCaptchaFailed",
                "initUserCaptcha",
                "verifyMfaRequested",
                "verifyMfaSucceed",
                "verifyMfaFailed",
                "initVerifyMfa",
                "setAuthId",
                "resetAuthId",
                "executeAuthIdCallBackRequested",
                "executeAuthIdCallBackSucceed",
                "executeAuthIdCallBackFailed",
                "sendMfaMessageRequested",
                "getMfaCaptchaRequested",
                "getMfaCaptchaSucceed",
                "getMfaCaptchaFailed",
                "initMfaCaptcha",
                "getWhiteListRequested",
                "getWhiteListSucceed",
                "getWhiteListFailed",
                "getWhiteListInit",
                "setMfaJson",
                "resetMfaJson",
                "queryIndustryRequested",
                "queryIndustrySucceed",
                "queryIndustryFailed",
                "queryRestrictionList",
                "queryRestrictionListSucceed",
                "queryRestrictionListFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "vcodeActions",
              "sourceValue": "actions/vcode",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/vcode.ts",
              "exportNames": [
                "updateCountDownSeconds",
                "stopVcodeCountDown",
                "sendVcodeMessage",
                "sendVcodeMessageSucceed",
                "sendVcodeMessageFailed",
                "hideVcodeTip"
              ]
            },
            {
              "isNamespace": true,
              "localName": "fileActions",
              "sourceValue": "actions/file",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/file.ts",
              "exportNames": [
                "uploadFileRequested",
                "uploadFileSucceed",
                "uploadFileFailed",
                "hideUploadFileError",
                "deleteFile",
                "deleteSyncFile",
                "resetFile",
                "resetCreateTransferAccountFile",
                "resetAllFile",
                "fileDownload",
                "getThumbnailRequested",
                "getThumbnailSucceed",
                "getThumbnailFailed",
                "initGetThumbnail",
                "setAnnexeRenameModal",
                "updateAnnexeFileName"
              ]
            },
            {
              "isNamespace": true,
              "localName": "previewActions",
              "sourceValue": "actions/preview",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/preview.ts",
              "exportNames": [
                "preview",
                "previewLoading",
                "removePreview",
                "resetAllPreview"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "StepOne",
              "loc": {
                "start": {
                  "line": 181,
                  "column": 2,
                  "index": 5928
                },
                "end": {
                  "line": 181,
                  "column": 9,
                  "index": 5935
                },
                "identifierName": "StepOne"
              },
              "actionsMethods": [
                {
                  "name": "infoConfirm"
                },
                {
                  "name": "firmInfoRequested"
                },
                {
                  "name": "creditIsVerifiedReq"
                },
                {
                  "name": "infoConfirmClear"
                }
              ],
              "usedActionsDependencies": [],
              "nodeLoc": {
                "start": {
                  "line": 34,
                  "column": 6,
                  "index": 1509
                },
                "end": {
                  "line": 34,
                  "column": 31,
                  "index": 1534
                },
                "identifierName": "StepOne"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [
            "securityActions",
            "userActions",
            "vcodeActions",
            "fileActions",
            "previewActions"
          ],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/containers/OrderLoanApplication/StepThree.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "StepThree",
              "loc": {
                "start": {
                  "line": 124,
                  "column": 2,
                  "index": 3702
                },
                "end": {
                  "line": 124,
                  "column": 11,
                  "index": 3711
                },
                "identifierName": "StepThree"
              },
              "actionsMethods": [
                {
                  "name": "applyCreditInfo"
                },
                {
                  "name": "creditIsVerifiedStop"
                }
              ],
              "usedActionsDependencies": [],
              "nodeLoc": {
                "start": {
                  "line": 21,
                  "column": 6,
                  "index": 713
                },
                "end": {
                  "line": 21,
                  "column": 35,
                  "index": 742
                },
                "identifierName": "StepThree"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/containers/OrderLoanApplication/StepTwo.tsx",
      "localConnect": "connect",
      "localCompose": "compose",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": false,
              "localName": "applySubmitStart",
              "importedName": "applySubmitStart",
              "sourceValue": "enterpriseFinancing/actions/orderLoan",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/actions/orderLoan.ts"
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "StepTwo",
              "loc": {
                "start": {
                  "line": 199,
                  "column": 2,
                  "index": 5946
                },
                "end": {
                  "line": 199,
                  "column": 9,
                  "index": 5953
                },
                "identifierName": "StepTwo"
              },
              "actionsMethods": [
                {
                  "name": "applySubmitStart"
                },
                {
                  "name": "agreementBrowseUserAuthReq"
                },
                {
                  "name": "agreementBrowseFactoryingContractReq"
                },
                {
                  "name": "creditReChallengeReq"
                },
                {
                  "name": "creditIsVerifiedClear"
                },
                {
                  "name": "creditIsVerifiedReq"
                }
              ],
              "usedActionsDependencies": [
                {
                  "isNamespace": false,
                  "localName": "applySubmitStart",
                  "importedName": "applySubmitStart",
                  "sourceValue": "enterpriseFinancing/actions/orderLoan",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/actions/orderLoan.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 39,
                  "column": 6,
                  "index": 1414
                },
                "end": {
                  "line": 39,
                  "column": 31,
                  "index": 1439
                },
                "identifierName": "StepTwo"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {
            "applySubmitStart": "applySubmitStart"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/containers/Repayment/RepaymentContent.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "ArrowFunctionExpression",
              "loc": {
                "start": {
                  "line": 90,
                  "column": 2,
                  "index": 3225
                },
                "end": {
                  "line": 191,
                  "column": 1,
                  "index": 5594
                }
              },
              "actionsMethods": [],
              "usedActionsDependencies": [],
              "nodeLoc": {
                "start": {
                  "line": 90,
                  "column": 2,
                  "index": 3225
                },
                "end": {
                  "line": 191,
                  "column": 1,
                  "index": 5594
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {
            "push": "push"
          }
        },
        {
          "actionsDependencies": [
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "ArrowFunctionExpression",
              "loc": {
                "start": {
                  "line": 217,
                  "column": 2,
                  "index": 6233
                },
                "end": {
                  "line": 484,
                  "column": 1,
                  "index": 13677
                }
              },
              "actionsMethods": [
                {
                  "name": "repaymentAccount"
                }
              ],
              "usedActionsDependencies": [],
              "nodeLoc": {
                "start": {
                  "line": 217,
                  "column": 2,
                  "index": 6233
                },
                "end": {
                  "line": 484,
                  "column": 1,
                  "index": 13677
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {
            "push": "push"
          }
        },
        {
          "actionsDependencies": [
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "ArrowFunctionExpression",
              "loc": {
                "start": {
                  "line": 512,
                  "column": 2,
                  "index": 14448
                },
                "end": {
                  "line": 774,
                  "column": 1,
                  "index": 21497
                }
              },
              "actionsMethods": [
                {
                  "name": "repaymentPledgesQuery"
                },
                {
                  "name": "exRateCountDownClear"
                }
              ],
              "usedActionsDependencies": [],
              "nodeLoc": {
                "start": {
                  "line": 512,
                  "column": 2,
                  "index": 14448
                },
                "end": {
                  "line": 774,
                  "column": 1,
                  "index": 21497
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {
            "push": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/containers/LegalMobileModify/StepOne.tsx",
      "localConnect": "connect",
      "localCompose": "compose",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "securityActions",
              "sourceValue": "actions/security",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/security.ts",
              "exportNames": [
                "checkABVType",
                "openABVPanel",
                "closeABVPanel",
                "validateCaptchaRequested",
                "validateCaptchaSucceed",
                "validateCaptchaFailed",
                "initValidateCaptcha",
                "setABVVeriType",
                "logSliderVeriInfo",
                "updateXRateLimitRoute"
              ]
            },
            {
              "isNamespace": true,
              "localName": "userActions",
              "sourceValue": "actions/user",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts",
              "exportNames": [
                "getUserFlowId",
                "getUserFlowIdAndCaptcha",
                "getUserFlowIdSucceed",
                "getUserFlowIdFailed",
                "initUserFlowId",
                "getUserCaptcha",
                "getUserCaptchaSucceed",
                "getUserCaptchaFailed",
                "initUserCaptcha",
                "verifyMfaRequested",
                "verifyMfaSucceed",
                "verifyMfaFailed",
                "initVerifyMfa",
                "setAuthId",
                "resetAuthId",
                "executeAuthIdCallBackRequested",
                "executeAuthIdCallBackSucceed",
                "executeAuthIdCallBackFailed",
                "sendMfaMessageRequested",
                "getMfaCaptchaRequested",
                "getMfaCaptchaSucceed",
                "getMfaCaptchaFailed",
                "initMfaCaptcha",
                "getWhiteListRequested",
                "getWhiteListSucceed",
                "getWhiteListFailed",
                "getWhiteListInit",
                "setMfaJson",
                "resetMfaJson",
                "queryIndustryRequested",
                "queryIndustrySucceed",
                "queryIndustryFailed",
                "queryRestrictionList",
                "queryRestrictionListSucceed",
                "queryRestrictionListFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "vcodeActions",
              "sourceValue": "actions/vcode",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/vcode.ts",
              "exportNames": [
                "updateCountDownSeconds",
                "stopVcodeCountDown",
                "sendVcodeMessage",
                "sendVcodeMessageSucceed",
                "sendVcodeMessageFailed",
                "hideVcodeTip"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "StepOne",
              "loc": {
                "start": {
                  "line": 119,
                  "column": 2,
                  "index": 3704
                },
                "end": {
                  "line": 119,
                  "column": 9,
                  "index": 3711
                },
                "identifierName": "StepOne"
              },
              "actionsMethods": [
                {
                  "name": "mobileConfirmReq"
                },
                {
                  "name": "legalMobileResetInitReq"
                },
                {
                  "name": "mobileResetIsVerifiedReq"
                }
              ],
              "usedActionsDependencies": [],
              "nodeLoc": {
                "start": {
                  "line": 27,
                  "column": 6,
                  "index": 1131
                },
                "end": {
                  "line": 27,
                  "column": 31,
                  "index": 1156
                },
                "identifierName": "StepOne"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["securityActions", "userActions", "vcodeActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/containers/LegalMobileModify/StepThree.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "StepThree",
              "loc": {
                "start": {
                  "line": 60,
                  "column": 2,
                  "index": 1467
                },
                "end": {
                  "line": 60,
                  "column": 11,
                  "index": 1476
                },
                "identifierName": "StepThree"
              },
              "actionsMethods": [
                {
                  "name": "mobileResetIsVerifiedStop"
                }
              ],
              "usedActionsDependencies": [],
              "nodeLoc": {
                "start": {
                  "line": 17,
                  "column": 6,
                  "index": 535
                },
                "end": {
                  "line": 17,
                  "column": 35,
                  "index": 564
                },
                "identifierName": "StepThree"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/containers/LegalMobileModify/StepTwo.tsx",
      "localConnect": "connect",
      "localCompose": "compose",
      "groups": [
        {
          "actionsDependencies": [],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "StepTwo",
              "loc": {
                "start": {
                  "line": 129,
                  "column": 2,
                  "index": 3928
                },
                "end": {
                  "line": 129,
                  "column": 9,
                  "index": 3935
                },
                "identifierName": "StepTwo"
              },
              "actionsMethods": [
                {
                  "name": "legalMobileResetSubmit"
                },
                {
                  "name": "legalRepMobileReChallengeReq"
                }
              ],
              "usedActionsDependencies": [],
              "nodeLoc": {
                "start": {
                  "line": 26,
                  "column": 6,
                  "index": 915
                },
                "end": {
                  "line": 26,
                  "column": 31,
                  "index": 940
                },
                "identifierName": "StepTwo"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Steps/BindEmailOrMobileOperate/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "modalActions",
              "sourceValue": "actions/modal",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/modal.ts",
              "exportNames": [
                "toggleModalStatus",
                "toggleModalWithCallback",
                "toggleGlobalPriorityModalStatus"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "BindEmailOrMobileOperate",
              "loc": {
                "start": {
                  "line": 36,
                  "column": 2,
                  "index": 750
                },
                "end": {
                  "line": 36,
                  "column": 26,
                  "index": 774
                },
                "identifierName": "BindEmailOrMobileOperate"
              },
              "actionsMethods": [
                {
                  "name": "toggleModalStatus",
                  "usage": "EMModalUsages.BindEmailOrPhoneModal"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "toggleModalStatus",
                  "importedName": "toggleModalStatus",
                  "sourceValue": "actions/modal",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/modal.ts",
                  "usage": "EMModalUsages.BindEmailOrPhoneModal"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 8,
                  "column": 6,
                  "index": 255
                },
                "end": {
                  "line": 8,
                  "column": 30,
                  "index": 279
                },
                "identifierName": "BindEmailOrMobileOperate"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["modalActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Steps/SetPasswordOperate/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "modalActions",
              "sourceValue": "actions/modal",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/modal.ts",
              "exportNames": [
                "toggleModalStatus",
                "toggleModalWithCallback",
                "toggleGlobalPriorityModalStatus"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "SetPasswordOperate",
              "loc": {
                "start": {
                  "line": 36,
                  "column": 2,
                  "index": 754
                },
                "end": {
                  "line": 36,
                  "column": 20,
                  "index": 772
                },
                "identifierName": "SetPasswordOperate"
              },
              "actionsMethods": [
                {
                  "name": "toggleModalStatus",
                  "usage": "EMModalUsages.SetLoginPasswordModal"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "toggleModalStatus",
                  "importedName": "toggleModalStatus",
                  "sourceValue": "actions/modal",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/modal.ts",
                  "usage": "EMModalUsages.SetLoginPasswordModal"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 8,
                  "column": 6,
                  "index": 255
                },
                "end": {
                  "line": 8,
                  "column": 24,
                  "index": 273
                },
                "identifierName": "SetPasswordOperate"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["modalActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/middlewares/AdvertiseControl.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "contentActions",
              "sourceValue": "actions/content",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/content.ts",
              "exportNames": [
                "getAdvertiseRequested",
                "getAdvertiseSucceed",
                "getAdvertiseFailed",
                "getModuleContentRequested",
                "getModuleContentSucceed",
                "getModuleContentFailed",
                "advertiseEventAfterLogined"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "ModifyedComponent",
              "loc": {
                "start": {
                  "line": 55,
                  "column": 54,
                  "index": 1691
                },
                "end": {
                  "line": 55,
                  "column": 71,
                  "index": 1708
                },
                "identifierName": "ModifyedComponent"
              },
              "actionsMethods": [],
              "usedActionsDependencies": [],
              "nodeLoc": {
                "start": {
                  "line": 12,
                  "column": 8,
                  "index": 401
                },
                "end": {
                  "line": 12,
                  "column": 25,
                  "index": 418
                },
                "identifierName": "ModifyedComponent"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["contentActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Modal/ReplenishModal/ReplenishForm.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "uploadActions",
              "sourceValue": "enterpriseFinancing/actions/upload",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/actions/upload.ts",
              "exportNames": [
                "uploadRequest",
                "uploadSucceed",
                "uploadFailed",
                "uploadInit"
              ]
            },
            {
              "isNamespace": false,
              "localName": "initialize",
              "importedName": "initialize",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "ReplenishForm",
              "loc": {
                "start": {
                  "line": 111,
                  "column": 59,
                  "index": 3020
                },
                "end": {
                  "line": 111,
                  "column": 72,
                  "index": 3033
                },
                "identifierName": "ReplenishForm"
              },
              "actionsMethods": [],
              "usedActionsDependencies": [],
              "nodeLoc": {
                "start": {
                  "line": 32,
                  "column": 6,
                  "index": 903
                },
                "end": {
                  "line": 32,
                  "column": 19,
                  "index": 916
                },
                "identifierName": "ReplenishForm"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["uploadActions"],
          "objectPropertyMap": {
            "initialize": "initialize"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Refund/RefundExchangeModal/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "refundAction",
              "sourceValue": "actions/refund",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/refund.ts",
              "exportNames": [
                "setRefundExchangeModal",
                "refundExchangeRequested",
                "refundExchangeSucceed",
                "refundExchangeFailed",
                "refundExchangeInit",
                "exchangeRateRequested",
                "exchangeRateSucceed",
                "exchangeRateFailed",
                "exchangeRateInit",
                "refundApplyRequested",
                "refundApplySucceed",
                "refundApplyFailed",
                "refundApplyInit",
                "setRefundStep",
                "setFxRequestId",
                "refundExchangeAvailableRequested",
                "refundExchangeAvailableSucceed",
                "refundExchangeAvailableFailed",
                "checkFieldRequested",
                "checkSwiftCodeRequested",
                "checkFieldSucceed",
                "checkFieldFailed",
                "refundReasonRequested",
                "refundReasonSucceed",
                "refundReasonFailed",
                "refundLocCreateRequested",
                "refundLocCreateSucceed",
                "refundLocCreateFailed",
                "beneficiaryMsgRequested",
                "beneficiaryMsgSucceed",
                "beneficiaryMsgFailed"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 32,
                  "column": 59,
                  "index": 848
                },
                "end": {
                  "line": 91,
                  "column": 1,
                  "index": 2728
                }
              },
              "actionsMethods": [
                {
                  "name": "refundExchangeAvailableRequested"
                },
                {
                  "name": "setRefundStep",
                  "usage": "EXCHANGE"
                },
                {
                  "name": "setRefundExchangeModal"
                },
                {
                  "name": "refundExchangeInit"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "refundExchangeAvailableRequested",
                  "importedName": "refundExchangeAvailableRequested",
                  "sourceValue": "actions/refund",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/refund.ts"
                },
                {
                  "localName": "setRefundStep",
                  "importedName": "setRefundStep",
                  "sourceValue": "actions/refund",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/refund.ts",
                  "usage": "EXCHANGE"
                },
                {
                  "localName": "setRefundExchangeModal",
                  "importedName": "setRefundExchangeModal",
                  "sourceValue": "actions/refund",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/refund.ts"
                },
                {
                  "localName": "refundExchangeInit",
                  "importedName": "refundExchangeInit",
                  "sourceValue": "actions/refund",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/refund.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 32,
                  "column": 59,
                  "index": 848
                },
                "end": {
                  "line": 91,
                  "column": 1,
                  "index": 2728
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["refundAction"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Refund/RefundTT/StepOneForm/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "refundAction",
              "sourceValue": "actions/refund",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/refund.ts",
              "exportNames": [
                "setRefundExchangeModal",
                "refundExchangeRequested",
                "refundExchangeSucceed",
                "refundExchangeFailed",
                "refundExchangeInit",
                "exchangeRateRequested",
                "exchangeRateSucceed",
                "exchangeRateFailed",
                "exchangeRateInit",
                "refundApplyRequested",
                "refundApplySucceed",
                "refundApplyFailed",
                "refundApplyInit",
                "setRefundStep",
                "setFxRequestId",
                "refundExchangeAvailableRequested",
                "refundExchangeAvailableSucceed",
                "refundExchangeAvailableFailed",
                "checkFieldRequested",
                "checkSwiftCodeRequested",
                "checkFieldSucceed",
                "checkFieldFailed",
                "refundReasonRequested",
                "refundReasonSucceed",
                "refundReasonFailed",
                "refundLocCreateRequested",
                "refundLocCreateSucceed",
                "refundLocCreateFailed",
                "beneficiaryMsgRequested",
                "beneficiaryMsgSucceed",
                "beneficiaryMsgFailed"
              ]
            },
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            },
            {
              "isNamespace": false,
              "localName": "change",
              "importedName": "change",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 89,
                  "column": 59,
                  "index": 2539
                },
                "end": {
                  "line": 317,
                  "column": 1,
                  "index": 8551
                }
              },
              "actionsMethods": [
                {
                  "name": "push"
                },
                {
                  "name": "setRefundExchangeModal"
                },
                {
                  "name": "setFxRequestId",
                  "usage": "TT"
                }
              ],
              "usedActionsDependencies": [
                {
                  "isNamespace": false,
                  "localName": "push",
                  "importedName": "push",
                  "sourceValue": "react-router-redux",
                  "dependencyPath": "react-router-redux"
                },
                {
                  "localName": "setRefundExchangeModal",
                  "importedName": "setRefundExchangeModal",
                  "sourceValue": "actions/refund",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/refund.ts"
                },
                {
                  "localName": "setFxRequestId",
                  "importedName": "setFxRequestId",
                  "sourceValue": "actions/refund",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/refund.ts",
                  "usage": "TT"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 89,
                  "column": 59,
                  "index": 2539
                },
                "end": {
                  "line": 317,
                  "column": 1,
                  "index": 8551
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["refundAction"],
          "objectPropertyMap": {
            "push": "push",
            "change": "change"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Fields/Annex/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "fileActions",
              "sourceValue": "actions/file",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/file.ts",
              "exportNames": [
                "uploadFileRequested",
                "uploadFileSucceed",
                "uploadFileFailed",
                "hideUploadFileError",
                "deleteFile",
                "deleteSyncFile",
                "resetFile",
                "resetCreateTransferAccountFile",
                "resetAllFile",
                "fileDownload",
                "getThumbnailRequested",
                "getThumbnailSucceed",
                "getThumbnailFailed",
                "initGetThumbnail",
                "setAnnexeRenameModal",
                "updateAnnexeFileName"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 36,
                  "column": 44,
                  "index": 915
                },
                "end": {
                  "line": 103,
                  "column": 1,
                  "index": 3187
                }
              },
              "actionsMethods": [
                {
                  "name": "initGetThumbnail"
                },
                {
                  "name": "getThumbnailRequested"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "initGetThumbnail",
                  "importedName": "initGetThumbnail",
                  "sourceValue": "actions/file",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/file.ts"
                },
                {
                  "localName": "getThumbnailRequested",
                  "importedName": "getThumbnailRequested",
                  "sourceValue": "actions/file",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/file.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 36,
                  "column": 44,
                  "index": 915
                },
                "end": {
                  "line": 103,
                  "column": 1,
                  "index": 3187
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["fileActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Fields/SelectAddressField/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "addrLocsActions",
              "sourceValue": "../../../actions/addressLocations",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/addressLocations.ts",
              "exportNames": [
                "addressLocationsRequested",
                "addressLocationsSucceed",
                "addressLocationsFailed",
                "addressLocationsInitialize",
                "addressLocationsClear",
                "addressLocationsClearList",
                "addressLocationsPreset",
                "addressLocationsCreateRequested",
                "addressLocationsCreateSucceed",
                "addressLocationsCreateFailed",
                "addressLocationsPresetFetchSucceed",
                "stepOneLocCreate",
                "stepTwoLocCreate",
                "queryFullCountriesRequested",
                "queryFullCountriesSucceed",
                "queryFullCountriesFailed",
                "queryEurCountriesRequested",
                "queryEurCountriesSucceed",
                "queryEurCountriesFailed",
                "queryCountriesIfNeeded"
              ]
            },
            {
              "isNamespace": false,
              "localName": "change",
              "importedName": "change",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 71,
                  "column": 103,
                  "index": 2166
                },
                "end": {
                  "line": 445,
                  "column": 1,
                  "index": 12505
                }
              },
              "actionsMethods": [
                {
                  "name": "addressLocationsInitialize"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "addressLocationsInitialize",
                  "importedName": "addressLocationsInitialize",
                  "sourceValue": "../../../actions/addressLocations",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/addressLocations.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 71,
                  "column": 103,
                  "index": 2166
                },
                "end": {
                  "line": 445,
                  "column": 1,
                  "index": 12505
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["addrLocsActions"],
          "objectPropertyMap": {
            "change": "change"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/OrderAddMaterial/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "modalActions",
              "sourceValue": "actions/modal",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/modal.ts",
              "exportNames": [
                "toggleModalStatus",
                "toggleModalWithCallback",
                "toggleGlobalPriorityModalStatus"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "OrderAddMaterial",
              "loc": {
                "start": {
                  "line": 106,
                  "column": 2,
                  "index": 3219
                },
                "end": {
                  "line": 106,
                  "column": 18,
                  "index": 3235
                },
                "identifierName": "OrderAddMaterial"
              },
              "actionsMethods": [
                {
                  "name": "toggleModalStatus",
                  "usage": "EMModalUsages.OrderAddMaterialModal"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "toggleModalStatus",
                  "importedName": "toggleModalStatus",
                  "sourceValue": "actions/modal",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/modal.ts",
                  "usage": "EMModalUsages.OrderAddMaterialModal"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 66,
                  "column": 6,
                  "index": 2106
                },
                "end": {
                  "line": 66,
                  "column": 22,
                  "index": 2122
                },
                "identifierName": "OrderAddMaterial"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["modalActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/WithdrawFXApplyForm/cell.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "withdrawActions",
              "sourceValue": "actions/withdraw",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts",
              "exportNames": [
                "withdrawListRequested",
                "withdrawListSucceed",
                "withdrawListFailed",
                "hideWithdrawListError",
                "resetWithdrawList",
                "changeTab",
                "switchWithdrawApplyModal",
                "setWithdrawApplyIsReserved",
                "withdrawApplyRequested",
                "withdrawApplySucceed",
                "withdrawApplyFailed",
                "hideWithdrawApplyError",
                "setStep",
                "resetWithdrawApply",
                "withdrawInitRequested",
                "withdrawInitSucceed",
                "withdrawInitFailed",
                "hideWithdrawInitError",
                "withdrawDebtRequested",
                "withdrawDebtSucceed",
                "withdrawDebtFailed",
                "hideWithdrawDebtError",
                "removeRelatedItemOrderId",
                "addRelatedItemOrderId",
                "inputChangeRelatedItemValue",
                "resetRelatedOrders",
                "changeRelatedOrderChecked",
                "resetRelatedOrderChecked",
                "swithWithdrawFXApplyModal",
                "setWithdrawFXApplyStep",
                "setWithdrawFXApplyIsReserved",
                "withdrawFXApplyRequested",
                "withdrawFXApplySucceed",
                "withdrawFXApplyFailed",
                "hideWithdrawFXApplyError",
                "resetWithdrawFXApply",
                "isWithdrawErrorPage",
                "getFXWithdrawFeeRequested",
                "getFXWithdrawFeeSucceed",
                "getFXWithdrawFeeFailed",
                "hideGetFXWithdrawFeeError",
                "resetGetFXWithdrawFee",
                "getFXCanRelatedOrderRequested",
                "getFXCanRelatedOrderSucceed",
                "getFXCanRelatedOrderFailed",
                "hideGetFXCanRelatedOrderError",
                "resetGetFXCanRelatedOrder",
                "pushFXCanRelatedOrderRequested",
                "pushFXCanRelatedOrderSucceed",
                "pushFXCanRelatedOrderFailed",
                "swithWithdrawFXReApplyModal",
                "setWithdrawFXReApplyStep",
                "withdrawFXReApplyRequested",
                "withdrawFXReApplySucceed",
                "withdrawFXReApplyFailed",
                "resetWithdrawFXReApply",
                "hideWithdrawFXReApplyError",
                "getWithdrawReApplyItemRequested",
                "getWithdrawReApplyItemSucceed",
                "getWithdrawReApplyItemFailed",
                "resetGetWithdrawReApplyItem",
                "withdrawCheckBothFrozen",
                "withdrawCheckBothFrozenSucceed",
                "withdrawCheckBothFrozenFailed",
                "getFxWithdrawHolderTypeRequested",
                "getFxWithdrawHolderTypeSucceed",
                "getFxWithdrawHolderTypeFailed",
                "withdrawDetailRequested",
                "withdrawDetailSucceed",
                "withdrawDetailFailed",
                "resetWithdrawDetail",
                "withdrawFeeRequested",
                "withdrawFeeSucceed",
                "withdrawFeeFailed",
                "queryAddMaterialInfoRequested",
                "queryAddMaterialInfoSucceed",
                "queryAddMaterialInfoFailed",
                "addMaterialCommitRequested",
                "addMaterialCommitSucceed",
                "addMaterialCommitFailed",
                "resetAddMaterialCommit",
                "cancelFxWithdrawRequested",
                "cancelFxWithdrawSucceed",
                "cancelFxWithdrawFailed",
                "resetCancelFxWithdraw",
                "setCancelFxWithdrawModal",
                "cancelWithdrawRequested",
                "cancelWithdrawSucceed",
                "cancelWithdrawFailed",
                "resetCancelWithdraw",
                "setCancelWithdrawModal",
                "cancelOnGoingTransferRequested",
                "cancelOnGoingTransferSucceed",
                "cancelOnGoingTransferFailed",
                "resetCancelOnGoingTransfer",
                "setCancelOnGoingTransferModal",
                "withdrawSupportCcys",
                "withdrawSupportCcysSucceed",
                "withdrawSupportCcysFailed",
                "transferFeeRequested",
                "transferFeeSucceed",
                "transferFeeFailed",
                "setTransferApplyStep",
                "transferApplyRequested",
                "transferApplySucceed",
                "transferApplyFailed",
                "hideTransferApplyError",
                "resetTransferApply",
                "setTransferStep",
                "queryTransferAddMaterialInfoRequested",
                "queryTransferAddMaterialInfoSucceed",
                "queryTransferAddMaterialInfoFailed",
                "transferAddMaterialCommitRequested",
                "transferAddMaterialCommitSucceed",
                "transferAddMaterialCommitFailed",
                "resetTransferAddMaterialCommit",
                "cancelTransferRequested",
                "cancelTransferSucceed",
                "cancelTransferFailed",
                "resetCancelTransfer",
                "setCancelModal",
                "addCardInfoRequested",
                "addCardInfoSucceed",
                "addCardInfoFailed",
                "querySupportBoostRequested",
                "querySupportBoostSucceed",
                "querySupportBoostFailed",
                "resetQuerySupportBoost",
                "queryCanFastWithdrawWorkRequested",
                "queryCanFastWithdrawWorkFailed",
                "queryCanFastWithdrawWorkSuccess",
                "queryACrossBorderRequested",
                "queryACrossBorderSuccess",
                "queryACrossBorderFailed",
                "getAbRequested",
                "getAbSucceed",
                "getAbFailed"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "Index",
              "loc": {
                "start": {
                  "line": 228,
                  "column": 2,
                  "index": 7754
                },
                "end": {
                  "line": 228,
                  "column": 7,
                  "index": 7759
                },
                "identifierName": "Index"
              },
              "actionsMethods": [],
              "usedActionsDependencies": [],
              "nodeLoc": {
                "start": {
                  "line": 179,
                  "column": 6,
                  "index": 6169
                },
                "end": {
                  "line": 179,
                  "column": 11,
                  "index": 6174
                },
                "identifierName": "Index"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["withdrawActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/NewModal/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": false,
              "localName": "goBack",
              "importedName": "goBack",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 24,
                  "column": 41,
                  "index": 722
                },
                "end": {
                  "line": 53,
                  "column": 1,
                  "index": 1669
                }
              },
              "actionsMethods": [
                {
                  "name": "goBack"
                }
              ],
              "usedActionsDependencies": [
                {
                  "isNamespace": false,
                  "localName": "goBack",
                  "importedName": "goBack",
                  "sourceValue": "react-router-redux",
                  "dependencyPath": "react-router-redux"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 24,
                  "column": 41,
                  "index": 722
                },
                "end": {
                  "line": 53,
                  "column": 1,
                  "index": 1669
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {
            "goBack": "goBack"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/TransferApplyForm/StepOne/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "idsActions",
              "sourceValue": "actions/ids",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/ids.ts",
              "exportNames": ["setIds", "setCurIds", "resetIds"]
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "Index",
              "loc": {
                "start": {
                  "line": 652,
                  "column": 2,
                  "index": 18477
                },
                "end": {
                  "line": 652,
                  "column": 7,
                  "index": 18482
                },
                "identifierName": "Index"
              },
              "actionsMethods": [
                {
                  "name": "setCurIds",
                  "usage": "EMIdsUsages.UsedTicketInBusiness"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "setCurIds",
                  "importedName": "setCurIds",
                  "sourceValue": "actions/ids",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/ids.ts",
                  "usage": "EMIdsUsages.UsedTicketInBusiness"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 42,
                  "column": 13,
                  "index": 1899
                },
                "end": {
                  "line": 42,
                  "column": 18,
                  "index": 1904
                },
                "identifierName": "Index"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["idsActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Modal/ExchangeModal/StepOne/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "countdownAction",
              "sourceValue": "actions/countdown",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/countdown.ts",
              "exportNames": ["setCountDown", "setSeconds", "stopSeconds"]
            },
            {
              "isNamespace": true,
              "localName": "spotAction",
              "sourceValue": "actions/fundSwap",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fundSwap.ts",
              "exportNames": [
                "setTradeStep",
                "getRateRequested",
                "getRateSucceed",
                "getRateFailed",
                "hideGetRateError",
                "rateReset",
                "tradeRequested",
                "tradeSucceed",
                "tradeFailed",
                "resetTrade",
                "hideTradeFailed",
                "tradeListRequested",
                "tradeListSucceed",
                "tradeListFailed",
                "hideTradeListFailed",
                "updateStatus",
                "setSeconds",
                "stopSeconds",
                "getBalance",
                "getBalanceSucceed",
                "getBalanceFailed",
                "resetBalance",
                "getFxDetail",
                "getFxDetailSucceed",
                "getFxDetailFailed",
                "spotfxMeta",
                "spotfxMetaSucceed",
                "spotfxMetaFailed",
                "resetSpotFxMeta",
                "changeExchangeWay",
                "entrustRequested",
                "entrustSucceed",
                "entrustFailed",
                "hideEntrustError",
                "resetEntrust",
                "entrustRateRequested",
                "entrustRateSucceed",
                "entrustRateFailed",
                "hideEntrustRateError",
                "resetEntrustRate",
                "billExportDownloadRequested",
                "billExportDownloadSucceed",
                "billExportDownloadFailed",
                "toggleBillExportDownloadModal",
                "resetBillExportDownload",
                "enterAccountRequested",
                "enterAccountSucceed",
                "enterAccountFailed",
                "cancelEntrustRequested",
                "cancelEntrustSucceed",
                "cancelEntrustFailed",
                "hideCancelEntrustError",
                "resetCancelEntrust",
                "toggleCancelEntrustPwdModal",
                "tradeMoreListRequested",
                "tradeMoreListSucceed",
                "tradeMoreListFailed",
                "clearMore",
                "queryExchangeArrivalRequested",
                "queryExchangeArrivalSucceed",
                "queryExchangeArrivalFailed",
                "initExchangeArrival",
                "spotBuyRateRequested",
                "spotBuyRateSucceed",
                "spotBuyRateFailed",
                "spotApplyRequested",
                "spotApplySucceed",
                "spotApplyFailed",
                "spotResultRequested",
                "spotResultSucceed",
                "spotResultFailed",
                "spotResultInit"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 68,
                  "column": 70,
                  "index": 2103
                },
                "end": {
                  "line": 274,
                  "column": 1,
                  "index": 8435
                }
              },
              "actionsMethods": [
                {
                  "name": "spotApplyRequested"
                },
                {
                  "name": "spotBuyRateRequested"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "spotApplyRequested",
                  "importedName": "spotApplyRequested",
                  "sourceValue": "actions/fundSwap",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fundSwap.ts"
                },
                {
                  "localName": "spotBuyRateRequested",
                  "importedName": "spotBuyRateRequested",
                  "sourceValue": "actions/fundSwap",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fundSwap.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 68,
                  "column": 70,
                  "index": 2103
                },
                "end": {
                  "line": 274,
                  "column": 1,
                  "index": 8435
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["countdownAction", "spotAction"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Modal/ExchangeModal/StepTwo/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "refundAction",
              "sourceValue": "actions/refund",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/refund.ts",
              "exportNames": [
                "setRefundExchangeModal",
                "refundExchangeRequested",
                "refundExchangeSucceed",
                "refundExchangeFailed",
                "refundExchangeInit",
                "exchangeRateRequested",
                "exchangeRateSucceed",
                "exchangeRateFailed",
                "exchangeRateInit",
                "refundApplyRequested",
                "refundApplySucceed",
                "refundApplyFailed",
                "refundApplyInit",
                "setRefundStep",
                "setFxRequestId",
                "refundExchangeAvailableRequested",
                "refundExchangeAvailableSucceed",
                "refundExchangeAvailableFailed",
                "checkFieldRequested",
                "checkSwiftCodeRequested",
                "checkFieldSucceed",
                "checkFieldFailed",
                "refundReasonRequested",
                "refundReasonSucceed",
                "refundReasonFailed",
                "refundLocCreateRequested",
                "refundLocCreateSucceed",
                "refundLocCreateFailed",
                "beneficiaryMsgRequested",
                "beneficiaryMsgSucceed",
                "beneficiaryMsgFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "countdownAction",
              "sourceValue": "actions/countdown",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/countdown.ts",
              "exportNames": ["setCountDown", "setSeconds", "stopSeconds"]
            },
            {
              "isNamespace": true,
              "localName": "fundSwapActions",
              "sourceValue": "actions/fundSwap",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fundSwap.ts",
              "exportNames": [
                "setTradeStep",
                "getRateRequested",
                "getRateSucceed",
                "getRateFailed",
                "hideGetRateError",
                "rateReset",
                "tradeRequested",
                "tradeSucceed",
                "tradeFailed",
                "resetTrade",
                "hideTradeFailed",
                "tradeListRequested",
                "tradeListSucceed",
                "tradeListFailed",
                "hideTradeListFailed",
                "updateStatus",
                "setSeconds",
                "stopSeconds",
                "getBalance",
                "getBalanceSucceed",
                "getBalanceFailed",
                "resetBalance",
                "getFxDetail",
                "getFxDetailSucceed",
                "getFxDetailFailed",
                "spotfxMeta",
                "spotfxMetaSucceed",
                "spotfxMetaFailed",
                "resetSpotFxMeta",
                "changeExchangeWay",
                "entrustRequested",
                "entrustSucceed",
                "entrustFailed",
                "hideEntrustError",
                "resetEntrust",
                "entrustRateRequested",
                "entrustRateSucceed",
                "entrustRateFailed",
                "hideEntrustRateError",
                "resetEntrustRate",
                "billExportDownloadRequested",
                "billExportDownloadSucceed",
                "billExportDownloadFailed",
                "toggleBillExportDownloadModal",
                "resetBillExportDownload",
                "enterAccountRequested",
                "enterAccountSucceed",
                "enterAccountFailed",
                "cancelEntrustRequested",
                "cancelEntrustSucceed",
                "cancelEntrustFailed",
                "hideCancelEntrustError",
                "resetCancelEntrust",
                "toggleCancelEntrustPwdModal",
                "tradeMoreListRequested",
                "tradeMoreListSucceed",
                "tradeMoreListFailed",
                "clearMore",
                "queryExchangeArrivalRequested",
                "queryExchangeArrivalSucceed",
                "queryExchangeArrivalFailed",
                "initExchangeArrival",
                "spotBuyRateRequested",
                "spotBuyRateSucceed",
                "spotBuyRateFailed",
                "spotApplyRequested",
                "spotApplySucceed",
                "spotApplyFailed",
                "spotResultRequested",
                "spotResultSucceed",
                "spotResultFailed",
                "spotResultInit"
              ]
            },
            {
              "isNamespace": true,
              "localName": "stepActions",
              "sourceValue": "actions/step",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/step.ts",
              "exportNames": ["setStep"]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 38,
                  "column": 60,
                  "index": 1188
                },
                "end": {
                  "line": 158,
                  "column": 1,
                  "index": 4567
                }
              },
              "actionsMethods": [
                {
                  "name": "spotResultInit"
                },
                {
                  "name": "stopSeconds",
                  "usage": "EMCountDownUsage.SpotResult"
                },
                {
                  "name": "setStep",
                  "usage": "EMStepUsages.ExchangeModal"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "spotResultInit",
                  "importedName": "spotResultInit",
                  "sourceValue": "actions/fundSwap",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fundSwap.ts"
                },
                {
                  "localName": "stopSeconds",
                  "importedName": "stopSeconds",
                  "sourceValue": "actions/countdown",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/countdown.ts",
                  "usage": "EMCountDownUsage.SpotResult"
                },
                {
                  "localName": "setStep",
                  "importedName": "setStep",
                  "sourceValue": "actions/step",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/step.ts",
                  "usage": "EMStepUsages.ExchangeModal"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 38,
                  "column": 60,
                  "index": 1188
                },
                "end": {
                  "line": 158,
                  "column": 1,
                  "index": 4567
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [
            "refundAction",
            "countdownAction",
            "fundSwapActions",
            "stepActions"
          ],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Action/components/DetailsAndResult/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "Index",
              "loc": {
                "start": {
                  "line": 183,
                  "column": 62,
                  "index": 4289
                },
                "end": {
                  "line": 183,
                  "column": 67,
                  "index": 4294
                },
                "identifierName": "Index"
              },
              "actionsMethods": [],
              "usedActionsDependencies": [],
              "nodeLoc": {
                "start": {
                  "line": 58,
                  "column": 6,
                  "index": 1248
                },
                "end": {
                  "line": 58,
                  "column": 11,
                  "index": 1253
                },
                "identifierName": "Index"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {
            "push": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Settings/BasicSet/BasicSetPreview/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "passwordActions",
              "sourceValue": "actions/password",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/password.ts",
              "exportNames": [
                "modifyTradePasswordRequested",
                "modifyTradePasswordSucceed",
                "modifyTradePasswordFailed",
                "initModifyTradePassword",
                "forgotTradePasswordRequested",
                "forgotTradePasswordSucceed",
                "forgotTradePasswordFailed",
                "initForgotTradePassword",
                "setTradePasswordRequested",
                "setTradePasswordSucceed",
                "setTradePasswordFailed",
                "initSetTradePassword",
                "modifyLoginPasswordRequested",
                "modifyLoginPasswordSucceed",
                "modifyLoginPasswordFailed",
                "setModifyLoginPasswordStep",
                "resetModifyLoginPassword",
                "hideModifyLoginPasswordError",
                "initLoginPasswordRequested",
                "initLoginPasswordSucceed",
                "initLoginPasswordFailed",
                "initInitLoginPassword"
              ]
            },
            {
              "isNamespace": true,
              "localName": "fileActions",
              "sourceValue": "actions/file",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/file.ts",
              "exportNames": [
                "uploadFileRequested",
                "uploadFileSucceed",
                "uploadFileFailed",
                "hideUploadFileError",
                "deleteFile",
                "deleteSyncFile",
                "resetFile",
                "resetCreateTransferAccountFile",
                "resetAllFile",
                "fileDownload",
                "getThumbnailRequested",
                "getThumbnailSucceed",
                "getThumbnailFailed",
                "initGetThumbnail",
                "setAnnexeRenameModal",
                "updateAnnexeFileName"
              ]
            },
            {
              "isNamespace": true,
              "localName": "basicSetActions",
              "sourceValue": "actions/basicSet",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/basicSet.ts",
              "exportNames": [
                "createOrUpdateFirmInfoRequested",
                "createOrUpdateFirmInfoSucceed",
                "createOrUpdateFirmInfoFailed",
                "hideCreateOrUpdateFirmInfoError",
                "resetCreateOrUpdateFirmStepInfo",
                "setNextButtonLoading",
                "setFirmVerificationStep",
                "setFirmVerificationDifferCellsFlag",
                "clearFirmVerificationDifferCellsFlag",
                "toggleOtherArea",
                "updateTargetFirmItem",
                "saveUpdateData"
              ]
            },
            {
              "isNamespace": true,
              "localName": "orderActions",
              "sourceValue": "actions/order",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/order.ts",
              "exportNames": [
                "switchCreateOrderSuccessModal",
                "createOrderRequested",
                "createOrderSucceed",
                "createOrderFailed",
                "hideCreateOrdeError",
                "updateOneOrderRequested",
                "updateOneOrderSucceed",
                "updateOneOrderFailed",
                "updateTabKey",
                "updateContractStatusRequested",
                "updateContractStatusSucceed",
                "updateContractStatusFailed",
                "initialAnnexs4CRM",
                "setCompanyPanel"
              ]
            },
            {
              "isNamespace": true,
              "localName": "infoActions",
              "sourceValue": "actions/info",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/info.ts",
              "exportNames": [
                "fetchTripartiteFirmRequested",
                "fetchTripartiteFirmSucceed",
                "fetchTripartiteFirmFailed",
                "fetchTripartiteUserRequested",
                "fetchTripartiteUserSucceed",
                "fetchTripartiteUserFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "utilActions",
              "sourceValue": "actions/util",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/util.ts",
              "exportNames": [
                "pubKeyRequested",
                "pubKeySucceed",
                "pubKeyFailed",
                "toggleOrderAnnexUpload",
                "setIsMobile",
                "getFirmStatusRequested",
                "getFirmStatusSucceed",
                "getFirmStatusFailed",
                "setPreviewPageId",
                "setCountrys",
                "setProvinces",
                "setLoadAddress",
                "getLocationRequested",
                "getLocationSucceed",
                "getLocationFailed",
                "touchAndChangeAddressFields",
                "resetAddressFieldsThenSetCountry"
              ]
            },
            {
              "isNamespace": true,
              "localName": "metaActions",
              "sourceValue": "actions/meta",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
              "exportNames": [
                "fetchMetaRequested",
                "fetchMetaSucceed",
                "fetchMetaFailed",
                "resetFetchMeta",
                "hideFetchMetaError"
              ]
            },
            {
              "isNamespace": true,
              "localName": "userActions",
              "sourceValue": "actions/user",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts",
              "exportNames": [
                "getUserFlowId",
                "getUserFlowIdAndCaptcha",
                "getUserFlowIdSucceed",
                "getUserFlowIdFailed",
                "initUserFlowId",
                "getUserCaptcha",
                "getUserCaptchaSucceed",
                "getUserCaptchaFailed",
                "initUserCaptcha",
                "verifyMfaRequested",
                "verifyMfaSucceed",
                "verifyMfaFailed",
                "initVerifyMfa",
                "setAuthId",
                "resetAuthId",
                "executeAuthIdCallBackRequested",
                "executeAuthIdCallBackSucceed",
                "executeAuthIdCallBackFailed",
                "sendMfaMessageRequested",
                "getMfaCaptchaRequested",
                "getMfaCaptchaSucceed",
                "getMfaCaptchaFailed",
                "initMfaCaptcha",
                "getWhiteListRequested",
                "getWhiteListSucceed",
                "getWhiteListFailed",
                "getWhiteListInit",
                "setMfaJson",
                "resetMfaJson",
                "queryIndustryRequested",
                "queryIndustrySucceed",
                "queryIndustryFailed",
                "queryRestrictionList",
                "queryRestrictionListSucceed",
                "queryRestrictionListFailed"
              ]
            },
            {
              "isNamespace": false,
              "localName": "change",
              "importedName": "change",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "touch",
              "importedName": "touch",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "fetchMetaRequested",
              "importedName": "fetchMetaRequested",
              "sourceValue": "actions/meta",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 118,
                  "column": 65,
                  "index": 4421
                },
                "end": {
                  "line": 1016,
                  "column": 1,
                  "index": 37117
                }
              },
              "actionsMethods": [
                {
                  "name": "fetchTripartiteFirmRequested"
                },
                {
                  "name": "fetchTripartiteUserRequested"
                },
                {
                  "name": "fetchMetaRequested",
                  "usage": "EMMetaUsages.BeneficaryAddressCountry"
                },
                {
                  "name": "deleteFile",
                  "usageVariable": "usage"
                },
                {
                  "name": "uploadFileRequested"
                },
                {
                  "name": "updateTargetFirmItem"
                },
                {
                  "name": "setFirmVerificationStep"
                },
                {
                  "name": "fileDownload"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "fetchTripartiteFirmRequested",
                  "importedName": "fetchTripartiteFirmRequested",
                  "sourceValue": "actions/info",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/info.ts"
                },
                {
                  "localName": "fetchTripartiteUserRequested",
                  "importedName": "fetchTripartiteUserRequested",
                  "sourceValue": "actions/info",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/info.ts"
                },
                {
                  "localName": "fetchMetaRequested",
                  "importedName": "fetchMetaRequested",
                  "sourceValue": "actions/meta",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
                  "usage": "EMMetaUsages.BeneficaryAddressCountry"
                },
                {
                  "localName": "deleteFile",
                  "importedName": "deleteFile",
                  "sourceValue": "actions/file",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/file.ts",
                  "usageVariable": "usage"
                },
                {
                  "localName": "uploadFileRequested",
                  "importedName": "uploadFileRequested",
                  "sourceValue": "actions/file",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/file.ts"
                },
                {
                  "localName": "updateTargetFirmItem",
                  "importedName": "updateTargetFirmItem",
                  "sourceValue": "actions/basicSet",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/basicSet.ts"
                },
                {
                  "localName": "setFirmVerificationStep",
                  "importedName": "setFirmVerificationStep",
                  "sourceValue": "actions/basicSet",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/basicSet.ts"
                },
                {
                  "localName": "fileDownload",
                  "importedName": "fileDownload",
                  "sourceValue": "actions/file",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/file.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 118,
                  "column": 65,
                  "index": 4421
                },
                "end": {
                  "line": 1016,
                  "column": 1,
                  "index": 37117
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [
            "passwordActions",
            "fileActions",
            "basicSetActions",
            "orderActions",
            "infoActions",
            "utilActions",
            "metaActions",
            "userActions"
          ],
          "objectPropertyMap": {
            "change": "change",
            "touch": "touch",
            "fetchMetaRequested": "fetchMetaRequested"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/SubbranchField/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": false,
              "localName": "change",
              "importedName": "change",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "touch",
              "importedName": "touch",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "SubbranchField",
              "loc": {
                "start": {
                  "line": 104,
                  "column": 102,
                  "index": 2703
                },
                "end": {
                  "line": 104,
                  "column": 116,
                  "index": 2717
                },
                "identifierName": "SubbranchField"
              },
              "actionsMethods": [
                {
                  "name": "change"
                }
              ],
              "usedActionsDependencies": [
                {
                  "isNamespace": false,
                  "localName": "change",
                  "importedName": "change",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 29,
                  "column": 6,
                  "index": 817
                },
                "end": {
                  "line": 29,
                  "column": 20,
                  "index": 831
                },
                "identifierName": "SubbranchField"
              }
            },
            {
              "type": "Identifier",
              "name": "SubbranchField",
              "loc": {
                "start": {
                  "line": 108,
                  "column": 2,
                  "index": 2832
                },
                "end": {
                  "line": 108,
                  "column": 16,
                  "index": 2846
                },
                "identifierName": "SubbranchField"
              },
              "actionsMethods": [
                {
                  "name": "change"
                }
              ],
              "usedActionsDependencies": [
                {
                  "isNamespace": false,
                  "localName": "change",
                  "importedName": "change",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 29,
                  "column": 6,
                  "index": 817
                },
                "end": {
                  "line": 29,
                  "column": 20,
                  "index": 831
                },
                "identifierName": "SubbranchField"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {
            "change": "change",
            "touch": "touch"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/LimitPage/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": false,
              "localName": "depositLimitRequested",
              "importedName": "depositLimitRequested",
              "sourceValue": "actions/collection",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/collection.ts"
            }
          ],
          "actionsComponents": [],
          "warnings": [
            "[Warning] #230 lastArguments.length !== 1 (start line: 52, start column: 18, end line: 52",
            ", end column: 62)"
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {
            "depositLimitRequested": "depositLimitRequested"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XtBean/components/XtBeanAuthModal/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "authActions",
              "sourceValue": "actions/auth",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/auth.ts",
              "exportNames": [
                "oauthRequested",
                "oauthSucceed",
                "logoutRequested",
                "logoutSucceed",
                "unauthorized",
                "signInRequested",
                "signInSucceed",
                "signInFailed",
                "initSignIn",
                "wechatSignInRequested",
                "wechatSignInSucceed",
                "wechatSignInFailed",
                "setWechatSignInSliderData",
                "setWechatSignInSliderError",
                "initWechatSignIn",
                "setWechatSignInState",
                "pollingQRScannedRequested",
                "pollingQRScannedSucceed",
                "pollingQRScannedFailed",
                "pollingQRConfirmedRequested",
                "pollingQRConfirmedSucceed",
                "pollingQRConfirmedFailed",
                "resetQRConfirmed",
                "qrcodeSigninRequested"
              ]
            },
            {
              "isNamespace": true,
              "localName": "securityActions",
              "sourceValue": "actions/security",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/security.ts",
              "exportNames": [
                "checkABVType",
                "openABVPanel",
                "closeABVPanel",
                "validateCaptchaRequested",
                "validateCaptchaSucceed",
                "validateCaptchaFailed",
                "initValidateCaptcha",
                "setABVVeriType",
                "logSliderVeriInfo",
                "updateXRateLimitRoute"
              ]
            },
            {
              "isNamespace": true,
              "localName": "securityActions",
              "sourceValue": "actions/security",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/security.ts",
              "exportNames": [
                "checkABVType",
                "openABVPanel",
                "closeABVPanel",
                "validateCaptchaRequested",
                "validateCaptchaSucceed",
                "validateCaptchaFailed",
                "initValidateCaptcha",
                "setABVVeriType",
                "logSliderVeriInfo",
                "updateXRateLimitRoute"
              ]
            },
            {
              "isNamespace": true,
              "localName": "vcodeActions",
              "sourceValue": "actions/vcode",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/vcode.ts",
              "exportNames": [
                "updateCountDownSeconds",
                "stopVcodeCountDown",
                "sendVcodeMessage",
                "sendVcodeMessageSucceed",
                "sendVcodeMessageFailed",
                "hideVcodeTip"
              ]
            },
            {
              "isNamespace": true,
              "localName": "userActions",
              "sourceValue": "actions/user",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts",
              "exportNames": [
                "getUserFlowId",
                "getUserFlowIdAndCaptcha",
                "getUserFlowIdSucceed",
                "getUserFlowIdFailed",
                "initUserFlowId",
                "getUserCaptcha",
                "getUserCaptchaSucceed",
                "getUserCaptchaFailed",
                "initUserCaptcha",
                "verifyMfaRequested",
                "verifyMfaSucceed",
                "verifyMfaFailed",
                "initVerifyMfa",
                "setAuthId",
                "resetAuthId",
                "executeAuthIdCallBackRequested",
                "executeAuthIdCallBackSucceed",
                "executeAuthIdCallBackFailed",
                "sendMfaMessageRequested",
                "getMfaCaptchaRequested",
                "getMfaCaptchaSucceed",
                "getMfaCaptchaFailed",
                "initMfaCaptcha",
                "getWhiteListRequested",
                "getWhiteListSucceed",
                "getWhiteListFailed",
                "getWhiteListInit",
                "setMfaJson",
                "resetMfaJson",
                "queryIndustryRequested",
                "queryIndustrySucceed",
                "queryIndustryFailed",
                "queryRestrictionList",
                "queryRestrictionListSucceed",
                "queryRestrictionListFailed"
              ]
            },
            {
              "isNamespace": false,
              "localName": "change",
              "importedName": "change",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            },
            {
              "isNamespace": false,
              "localName": "initialize",
              "importedName": "initialize",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "XtBeanAuthModal",
              "loc": {
                "start": {
                  "line": 205,
                  "column": 48,
                  "index": 6545
                },
                "end": {
                  "line": 205,
                  "column": 63,
                  "index": 6560
                },
                "identifierName": "XtBeanAuthModal"
              },
              "actionsMethods": [
                {
                  "name": "sendVcodeMessage"
                },
                {
                  "name": "checkABVType",
                  "usage": ""
                },
                {
                  "name": "getUserFlowId",
                  "usage": "EMGetUserFlowIdUsages.WechatBinding"
                },
                {
                  "name": "getUserFlowId",
                  "usage": "EMGetUserFlowIdUsages.mallWithdrawIdentity"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "sendVcodeMessage",
                  "importedName": "sendVcodeMessage",
                  "sourceValue": "actions/vcode",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/vcode.ts"
                },
                {
                  "localName": "checkABVType",
                  "importedName": "checkABVType",
                  "sourceValue": "actions/security",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/security.ts",
                  "usage": ""
                },
                {
                  "localName": "getUserFlowId",
                  "importedName": "getUserFlowId",
                  "sourceValue": "actions/user",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts",
                  "usage": "EMGetUserFlowIdUsages.WechatBinding"
                },
                {
                  "localName": "getUserFlowId",
                  "importedName": "getUserFlowId",
                  "sourceValue": "actions/user",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts",
                  "usage": "EMGetUserFlowIdUsages.mallWithdrawIdentity"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 35,
                  "column": 6,
                  "index": 1373
                },
                "end": {
                  "line": 35,
                  "column": 21,
                  "index": 1388
                },
                "identifierName": "XtBeanAuthModal"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [
            "authActions",
            "securityActions",
            "securityActions",
            "vcodeActions",
            "userActions"
          ],
          "objectPropertyMap": {
            "change": "change",
            "push": "push",
            "initialize": "initialize"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Benefit/CustomerPlan/components/table/CustomerPackageUsage.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 25,
                  "column": 75,
                  "index": 730
                },
                "end": {
                  "line": 114,
                  "column": 1,
                  "index": 3476
                }
              },
              "actionsMethods": [
                {
                  "name": "push"
                }
              ],
              "usedActionsDependencies": [
                {
                  "isNamespace": false,
                  "localName": "push",
                  "importedName": "push",
                  "sourceValue": "react-router-redux",
                  "dependencyPath": "react-router-redux"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 25,
                  "column": 75,
                  "index": 730
                },
                "end": {
                  "line": 114,
                  "column": 1,
                  "index": 3476
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {
            "push": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Settings/GrantFxWithdraw/component/ExchangeOperation/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "ExchangeOperation",
              "loc": {
                "start": {
                  "line": 384,
                  "column": 3,
                  "index": 10262
                },
                "end": {
                  "line": 384,
                  "column": 20,
                  "index": 10279
                },
                "identifierName": "ExchangeOperation"
              },
              "actionsMethods": [
                {
                  "name": "setShareholdInfo"
                },
                {
                  "name": "push"
                },
                {
                  "name": "exchangeStaffListRequest"
                }
              ],
              "usedActionsDependencies": [
                {
                  "isNamespace": false,
                  "localName": "push",
                  "importedName": "push",
                  "sourceValue": "react-router-redux",
                  "dependencyPath": "react-router-redux"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 40,
                  "column": 6,
                  "index": 1162
                },
                "end": {
                  "line": 40,
                  "column": 23,
                  "index": 1179
                },
                "identifierName": "ExchangeOperation"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {
            "push": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/SettlementProviders/ProvidersForm/components/StepOne.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": false,
              "localName": "change",
              "importedName": "change",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "destroy",
              "importedName": "destroy",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "StepOne",
              "loc": {
                "start": {
                  "line": 367,
                  "column": 3,
                  "index": 10651
                },
                "end": {
                  "line": 367,
                  "column": 10,
                  "index": 10658
                },
                "identifierName": "StepOne"
              },
              "actionsMethods": [
                {
                  "name": "change"
                }
              ],
              "usedActionsDependencies": [
                {
                  "isNamespace": false,
                  "localName": "change",
                  "importedName": "change",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 30,
                  "column": 6,
                  "index": 1268
                },
                "end": {
                  "line": 30,
                  "column": 13,
                  "index": 1275
                },
                "identifierName": "StepOne"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {
            "change": "change",
            "destroy": "destroy"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/SettlementProviders/ProvidersForm/components/StepTwo.tsx",
      "localConnect": "connect",
      "localCompose": "compose",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": false,
              "localName": "setMFAVisible",
              "importedName": "setMFAVisible",
              "sourceValue": "actions/xshield",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xshield.ts"
            },
            {
              "isNamespace": false,
              "localName": "passwdConfirmCb",
              "importedName": "passwdConfirmCb",
              "sourceValue": "actions/exchange",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/exchange.ts"
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "StepTwo",
              "loc": {
                "start": {
                  "line": 131,
                  "column": 2,
                  "index": 4038
                },
                "end": {
                  "line": 131,
                  "column": 9,
                  "index": 4045
                },
                "identifierName": "StepTwo"
              },
              "actionsMethods": [],
              "usedActionsDependencies": [],
              "nodeLoc": {
                "start": {
                  "line": 22,
                  "column": 6,
                  "index": 1037
                },
                "end": {
                  "line": 22,
                  "column": 13,
                  "index": 1044
                },
                "identifierName": "StepTwo"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {
            "setMFAVisible": "setMFAVisible",
            "passwdConfirmCb": "passwdConfirmCb"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/Segments/BeneficiaryAddressBeneficiaryAddressSegment/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "metaActions",
              "sourceValue": "actions/meta",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
              "exportNames": [
                "fetchMetaRequested",
                "fetchMetaSucceed",
                "fetchMetaFailed",
                "resetFetchMeta",
                "hideFetchMetaError"
              ]
            },
            {
              "isNamespace": true,
              "localName": "statusActions",
              "sourceValue": "actions/status",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/status.ts",
              "exportNames": ["toggleEntityStatus"]
            },
            {
              "isNamespace": false,
              "localName": "change",
              "importedName": "change",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 84,
                  "column": 67,
                  "index": 2363
                },
                "end": {
                  "line": 269,
                  "column": 1,
                  "index": 8034
                }
              },
              "actionsMethods": [
                {
                  "name": "fetchMetaRequested",
                  "usage": "EMMetaUsages.BeneficaryAddressCountry"
                },
                {
                  "name": "change"
                },
                {
                  "name": "toggleEntityStatus",
                  "usageVariable": "usage"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "fetchMetaRequested",
                  "importedName": "fetchMetaRequested",
                  "sourceValue": "actions/meta",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
                  "usage": "EMMetaUsages.BeneficaryAddressCountry"
                },
                {
                  "isNamespace": false,
                  "localName": "change",
                  "importedName": "change",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                },
                {
                  "localName": "toggleEntityStatus",
                  "importedName": "toggleEntityStatus",
                  "sourceValue": "actions/status",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/status.ts",
                  "usageVariable": "usage"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 84,
                  "column": 67,
                  "index": 2363
                },
                "end": {
                  "line": 269,
                  "column": 1,
                  "index": 8034
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["metaActions", "statusActions"],
          "objectPropertyMap": {
            "change": "change"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/bizComponents/OrderFormDrawer/CreateOrderForm/index.tsx",
      "localConnect": "connect",
      "localCompose": "compose",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": false,
              "localName": "createTips",
              "importedName": "createTips",
              "sourceValue": "actions/tip",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/tip.ts"
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "PlatformGuard",
              "loc": {
                "start": {
                  "line": 122,
                  "column": 1,
                  "index": 3015
                },
                "end": {
                  "line": 122,
                  "column": 14,
                  "index": 3028
                },
                "identifierName": "PlatformGuard"
              },
              "actionsMethods": [],
              "usedActionsDependencies": [],
              "nodeLoc": {
                "start": {
                  "line": 16,
                  "column": 7,
                  "index": 784
                },
                "end": {
                  "line": 16,
                  "column": 20,
                  "index": 797
                },
                "identifierName": "PlatformGuard"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {
            "createTips": "createTips"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/RegisterForm/StepOne.jsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "userActions",
              "sourceValue": "actions/user",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts",
              "exportNames": [
                "getUserFlowId",
                "getUserFlowIdAndCaptcha",
                "getUserFlowIdSucceed",
                "getUserFlowIdFailed",
                "initUserFlowId",
                "getUserCaptcha",
                "getUserCaptchaSucceed",
                "getUserCaptchaFailed",
                "initUserCaptcha",
                "verifyMfaRequested",
                "verifyMfaSucceed",
                "verifyMfaFailed",
                "initVerifyMfa",
                "setAuthId",
                "resetAuthId",
                "executeAuthIdCallBackRequested",
                "executeAuthIdCallBackSucceed",
                "executeAuthIdCallBackFailed",
                "sendMfaMessageRequested",
                "getMfaCaptchaRequested",
                "getMfaCaptchaSucceed",
                "getMfaCaptchaFailed",
                "initMfaCaptcha",
                "getWhiteListRequested",
                "getWhiteListSucceed",
                "getWhiteListFailed",
                "getWhiteListInit",
                "setMfaJson",
                "resetMfaJson",
                "queryIndustryRequested",
                "queryIndustrySucceed",
                "queryIndustryFailed",
                "queryRestrictionList",
                "queryRestrictionListSucceed",
                "queryRestrictionListFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "vcodeActions",
              "sourceValue": "actions/vcode",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/vcode.ts",
              "exportNames": [
                "updateCountDownSeconds",
                "stopVcodeCountDown",
                "sendVcodeMessage",
                "sendVcodeMessageSucceed",
                "sendVcodeMessageFailed",
                "hideVcodeTip"
              ]
            },
            {
              "isNamespace": true,
              "localName": "actions",
              "sourceValue": "actions/register",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/register.ts",
              "exportNames": [
                "registerStepOneRequested",
                "registerStepOneSucceed",
                "registerStepOneFailed",
                "hideRegisterStepOneError",
                "registerStepTwoRequested",
                "registerStepTwoSucceed",
                "registerStepTwoFailed",
                "hideRegisterStepTwoError",
                "setRegisterStep",
                "resetRegister"
              ]
            },
            {
              "isNamespace": true,
              "localName": "securityActions",
              "sourceValue": "actions/security",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/security.ts",
              "exportNames": [
                "checkABVType",
                "openABVPanel",
                "closeABVPanel",
                "validateCaptchaRequested",
                "validateCaptchaSucceed",
                "validateCaptchaFailed",
                "initValidateCaptcha",
                "setABVVeriType",
                "logSliderVeriInfo",
                "updateXRateLimitRoute"
              ]
            },
            {
              "isNamespace": true,
              "localName": "submitActions",
              "sourceValue": "actions/submit",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/submit.ts",
              "exportNames": [
                "submitRequested",
                "submitSucceed",
                "submitFailed",
                "resetSubmit"
              ]
            },
            {
              "isNamespace": false,
              "localName": "change",
              "importedName": "change",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "initialize",
              "importedName": "initialize",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 82,
                  "column": 59,
                  "index": 2373
                },
                "end": {
                  "line": 200,
                  "column": 1,
                  "index": 5936
                }
              },
              "actionsMethods": [
                {
                  "name": "initialize"
                },
                {
                  "name": "hideRegisterStepOneError"
                },
                {
                  "name": "sendVcodeMessage",
                  "usage": "EMGetUserCaptchaUsages.SignUp"
                },
                {
                  "name": "registerStepOneRequested"
                },
                {
                  "name": "checkABVType",
                  "usage": "EMGetUserCaptchaUsages.SignUp"
                }
              ],
              "usedActionsDependencies": [
                {
                  "isNamespace": false,
                  "localName": "initialize",
                  "importedName": "initialize",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                },
                {
                  "localName": "hideRegisterStepOneError",
                  "importedName": "hideRegisterStepOneError",
                  "sourceValue": "actions/register",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/register.ts"
                },
                {
                  "localName": "sendVcodeMessage",
                  "importedName": "sendVcodeMessage",
                  "sourceValue": "actions/vcode",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/vcode.ts",
                  "usage": "EMGetUserCaptchaUsages.SignUp"
                },
                {
                  "localName": "registerStepOneRequested",
                  "importedName": "registerStepOneRequested",
                  "sourceValue": "actions/register",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/register.ts"
                },
                {
                  "localName": "checkABVType",
                  "importedName": "checkABVType",
                  "sourceValue": "actions/security",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/security.ts",
                  "usage": "EMGetUserCaptchaUsages.SignUp"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 82,
                  "column": 59,
                  "index": 2373
                },
                "end": {
                  "line": 200,
                  "column": 1,
                  "index": 5936
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [
            "userActions",
            "vcodeActions",
            "actions",
            "securityActions",
            "submitActions"
          ],
          "objectPropertyMap": {
            "change": "change",
            "initialize": "initialize"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/RegisterForm/StepTwo.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "actions",
              "sourceValue": "actions/register",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/register.ts",
              "exportNames": [
                "registerStepOneRequested",
                "registerStepOneSucceed",
                "registerStepOneFailed",
                "hideRegisterStepOneError",
                "registerStepTwoRequested",
                "registerStepTwoSucceed",
                "registerStepTwoFailed",
                "hideRegisterStepTwoError",
                "setRegisterStep",
                "resetRegister"
              ]
            },
            {
              "isNamespace": false,
              "localName": "initialize",
              "importedName": "initialize",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 82,
                  "column": 59,
                  "index": 2585
                },
                "end": {
                  "line": 204,
                  "column": 1,
                  "index": 6214
                }
              },
              "actionsMethods": [
                {
                  "name": "initialize"
                },
                {
                  "name": "hideRegisterStepTwoError"
                },
                {
                  "name": "registerStepTwoRequested"
                }
              ],
              "usedActionsDependencies": [
                {
                  "isNamespace": false,
                  "localName": "initialize",
                  "importedName": "initialize",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                },
                {
                  "localName": "hideRegisterStepTwoError",
                  "importedName": "hideRegisterStepTwoError",
                  "sourceValue": "actions/register",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/register.ts"
                },
                {
                  "localName": "registerStepTwoRequested",
                  "importedName": "registerStepTwoRequested",
                  "sourceValue": "actions/register",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/register.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 82,
                  "column": 59,
                  "index": 2585
                },
                "end": {
                  "line": 204,
                  "column": 1,
                  "index": 6214
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["actions"],
          "objectPropertyMap": {
            "initialize": "initialize"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/components/AssociateCrmOrder/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": false,
              "localName": "change",
              "importedName": "change",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "AssociateCrmOrder",
              "loc": {
                "start": {
                  "line": 334,
                  "column": 24,
                  "index": 10017
                },
                "end": {
                  "line": 334,
                  "column": 41,
                  "index": 10034
                },
                "identifierName": "AssociateCrmOrder"
              },
              "actionsMethods": [
                {
                  "name": "change"
                },
                {
                  "name": "push"
                }
              ],
              "usedActionsDependencies": [
                {
                  "isNamespace": false,
                  "localName": "change",
                  "importedName": "change",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                },
                {
                  "isNamespace": false,
                  "localName": "push",
                  "importedName": "push",
                  "sourceValue": "react-router-redux",
                  "dependencyPath": "react-router-redux"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 99,
                  "column": 6,
                  "index": 3390
                },
                "end": {
                  "line": 99,
                  "column": 23,
                  "index": 3407
                },
                "identifierName": "AssociateCrmOrder"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {
            "change": "change",
            "push": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/TicketModal/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "ticketActions",
              "sourceValue": "actions/ticket",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/ticket.ts",
              "exportNames": [
                "ticketListRequested",
                "ticketListSucceed",
                "ticketListFailed"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "TicketModal",
              "loc": {
                "start": {
                  "line": 109,
                  "column": 2,
                  "index": 2530
                },
                "end": {
                  "line": 109,
                  "column": 13,
                  "index": 2541
                },
                "identifierName": "TicketModal"
              },
              "actionsMethods": [
                {
                  "name": "ticketListRequested"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "ticketListRequested",
                  "importedName": "ticketListRequested",
                  "sourceValue": "actions/ticket",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/ticket.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 28,
                  "column": 6,
                  "index": 734
                },
                "end": {
                  "line": 28,
                  "column": 17,
                  "index": 745
                },
                "identifierName": "TicketModal"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["ticketActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Crm/SideFunctions/components/HelpPanel/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": false,
              "localName": "getTagFaqRequested",
              "importedName": "getTagFaqRequested",
              "sourceValue": "actions/faq",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/faq.ts"
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "HelpPanel",
              "loc": {
                "start": {
                  "line": 92,
                  "column": 2,
                  "index": 2207
                },
                "end": {
                  "line": 92,
                  "column": 11,
                  "index": 2216
                },
                "identifierName": "HelpPanel"
              },
              "actionsMethods": [
                {
                  "name": "getTagFaqRequested"
                }
              ],
              "usedActionsDependencies": [
                {
                  "isNamespace": false,
                  "localName": "getTagFaqRequested",
                  "importedName": "getTagFaqRequested",
                  "sourceValue": "actions/faq",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/faq.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 29,
                  "column": 6,
                  "index": 690
                },
                "end": {
                  "line": 29,
                  "column": 15,
                  "index": 699
                },
                "identifierName": "HelpPanel"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {
            "getTagFaqRequested": "getTagFaqRequested"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Crm/SideFunctions/components/AdviseModal/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": false,
              "localName": "securityActions",
              "importedName": "securityActions",
              "sourceValue": "actions",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/index.ts"
            },
            {
              "isNamespace": false,
              "localName": "userActions",
              "importedName": "userActions",
              "sourceValue": "actions",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/index.ts"
            },
            {
              "isNamespace": false,
              "localName": "initialize",
              "importedName": "initialize",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            },
            {
              "isNamespace": false,
              "localName": "change",
              "importedName": "change",
              "sourceValue": "redux-form/es/immutable",
              "dependencyPath": "redux-form/es/immutable"
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "AdviseModal",
              "loc": {
                "start": {
                  "line": 197,
                  "column": 3,
                  "index": 5409
                },
                "end": {
                  "line": 197,
                  "column": 14,
                  "index": 5420
                },
                "identifierName": "AdviseModal"
              },
              "actionsMethods": [
                {
                  "name": "change"
                },
                {
                  "name": "getUserFlowId",
                  "usage": "EMGetUserFlowIdUsages.Feedback"
                },
                {
                  "name": "checkABVType",
                  "usage": "EMGetUserCaptchaUsages.Feedback"
                }
              ],
              "usedActionsDependencies": [
                {
                  "isNamespace": false,
                  "localName": "change",
                  "importedName": "change",
                  "sourceValue": "redux-form/es/immutable",
                  "dependencyPath": "redux-form/es/immutable"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 56,
                  "column": 6,
                  "index": 1841
                },
                "end": {
                  "line": 56,
                  "column": 17,
                  "index": 1852
                },
                "identifierName": "AdviseModal"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["securityActions", "userActions"],
          "objectPropertyMap": {
            "initialize": "initialize",
            "change": "change"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Refund/RefundExchangeModal/StepOne/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "refundAction",
              "sourceValue": "actions/refund",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/refund.ts",
              "exportNames": [
                "setRefundExchangeModal",
                "refundExchangeRequested",
                "refundExchangeSucceed",
                "refundExchangeFailed",
                "refundExchangeInit",
                "exchangeRateRequested",
                "exchangeRateSucceed",
                "exchangeRateFailed",
                "exchangeRateInit",
                "refundApplyRequested",
                "refundApplySucceed",
                "refundApplyFailed",
                "refundApplyInit",
                "setRefundStep",
                "setFxRequestId",
                "refundExchangeAvailableRequested",
                "refundExchangeAvailableSucceed",
                "refundExchangeAvailableFailed",
                "checkFieldRequested",
                "checkSwiftCodeRequested",
                "checkFieldSucceed",
                "checkFieldFailed",
                "refundReasonRequested",
                "refundReasonSucceed",
                "refundReasonFailed",
                "refundLocCreateRequested",
                "refundLocCreateSucceed",
                "refundLocCreateFailed",
                "beneficiaryMsgRequested",
                "beneficiaryMsgSucceed",
                "beneficiaryMsgFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "countdownAction",
              "sourceValue": "actions/countdown",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/countdown.ts",
              "exportNames": ["setCountDown", "setSeconds", "stopSeconds"]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 65,
                  "column": 46,
                  "index": 2023
                },
                "end": {
                  "line": 284,
                  "column": 1,
                  "index": 8985
                }
              },
              "actionsMethods": [
                {
                  "name": "stopSeconds",
                  "usage": "refundExchangeRate"
                },
                {
                  "name": "exchangeRateInit"
                },
                {
                  "name": "refundExchangeRequested",
                  "usageVariable": "usage"
                },
                {
                  "name": "exchangeRateRequested"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "stopSeconds",
                  "importedName": "stopSeconds",
                  "sourceValue": "actions/countdown",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/countdown.ts",
                  "usage": "refundExchangeRate"
                },
                {
                  "localName": "exchangeRateInit",
                  "importedName": "exchangeRateInit",
                  "sourceValue": "actions/refund",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/refund.ts"
                },
                {
                  "localName": "refundExchangeRequested",
                  "importedName": "refundExchangeRequested",
                  "sourceValue": "actions/refund",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/refund.ts",
                  "usageVariable": "usage"
                },
                {
                  "localName": "exchangeRateRequested",
                  "importedName": "exchangeRateRequested",
                  "sourceValue": "actions/refund",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/refund.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 65,
                  "column": 46,
                  "index": 2023
                },
                "end": {
                  "line": 284,
                  "column": 1,
                  "index": 8985
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["refundAction", "countdownAction"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Refund/RefundExchangeModal/StepTwo/index.js",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "refundAction",
              "sourceValue": "actions/refund",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/refund.ts",
              "exportNames": [
                "setRefundExchangeModal",
                "refundExchangeRequested",
                "refundExchangeSucceed",
                "refundExchangeFailed",
                "refundExchangeInit",
                "exchangeRateRequested",
                "exchangeRateSucceed",
                "exchangeRateFailed",
                "exchangeRateInit",
                "refundApplyRequested",
                "refundApplySucceed",
                "refundApplyFailed",
                "refundApplyInit",
                "setRefundStep",
                "setFxRequestId",
                "refundExchangeAvailableRequested",
                "refundExchangeAvailableSucceed",
                "refundExchangeAvailableFailed",
                "checkFieldRequested",
                "checkSwiftCodeRequested",
                "checkFieldSucceed",
                "checkFieldFailed",
                "refundReasonRequested",
                "refundReasonSucceed",
                "refundReasonFailed",
                "refundLocCreateRequested",
                "refundLocCreateSucceed",
                "refundLocCreateFailed",
                "beneficiaryMsgRequested",
                "beneficiaryMsgSucceed",
                "beneficiaryMsgFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "countdownAction",
              "sourceValue": "actions/countdown",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/countdown.ts",
              "exportNames": ["setCountDown", "setSeconds", "stopSeconds"]
            },
            {
              "isNamespace": true,
              "localName": "fundSwapActions",
              "sourceValue": "actions/fundSwap",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fundSwap.ts",
              "exportNames": [
                "setTradeStep",
                "getRateRequested",
                "getRateSucceed",
                "getRateFailed",
                "hideGetRateError",
                "rateReset",
                "tradeRequested",
                "tradeSucceed",
                "tradeFailed",
                "resetTrade",
                "hideTradeFailed",
                "tradeListRequested",
                "tradeListSucceed",
                "tradeListFailed",
                "hideTradeListFailed",
                "updateStatus",
                "setSeconds",
                "stopSeconds",
                "getBalance",
                "getBalanceSucceed",
                "getBalanceFailed",
                "resetBalance",
                "getFxDetail",
                "getFxDetailSucceed",
                "getFxDetailFailed",
                "spotfxMeta",
                "spotfxMetaSucceed",
                "spotfxMetaFailed",
                "resetSpotFxMeta",
                "changeExchangeWay",
                "entrustRequested",
                "entrustSucceed",
                "entrustFailed",
                "hideEntrustError",
                "resetEntrust",
                "entrustRateRequested",
                "entrustRateSucceed",
                "entrustRateFailed",
                "hideEntrustRateError",
                "resetEntrustRate",
                "billExportDownloadRequested",
                "billExportDownloadSucceed",
                "billExportDownloadFailed",
                "toggleBillExportDownloadModal",
                "resetBillExportDownload",
                "enterAccountRequested",
                "enterAccountSucceed",
                "enterAccountFailed",
                "cancelEntrustRequested",
                "cancelEntrustSucceed",
                "cancelEntrustFailed",
                "hideCancelEntrustError",
                "resetCancelEntrust",
                "toggleCancelEntrustPwdModal",
                "tradeMoreListRequested",
                "tradeMoreListSucceed",
                "tradeMoreListFailed",
                "clearMore",
                "queryExchangeArrivalRequested",
                "queryExchangeArrivalSucceed",
                "queryExchangeArrivalFailed",
                "initExchangeArrival",
                "spotBuyRateRequested",
                "spotBuyRateSucceed",
                "spotBuyRateFailed",
                "spotApplyRequested",
                "spotApplySucceed",
                "spotApplyFailed",
                "spotResultRequested",
                "spotResultSucceed",
                "spotResultFailed",
                "spotResultInit"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 33,
                  "column": 61,
                  "index": 940
                },
                "end": {
                  "line": 159,
                  "column": 1,
                  "index": 4657
                }
              },
              "actionsMethods": [
                {
                  "name": "setCountDown",
                  "usage": "refundExchangeApply"
                },
                {
                  "name": "initExchangeArrival"
                },
                {
                  "name": "queryExchangeArrivalRequested",
                  "usage": "refundExchangeApply"
                },
                {
                  "name": "stopSeconds",
                  "usage": "refundExchangeApply"
                },
                {
                  "name": "setRefundStep",
                  "usage": "EXCHANGE"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "setCountDown",
                  "importedName": "setCountDown",
                  "sourceValue": "actions/countdown",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/countdown.ts",
                  "usage": "refundExchangeApply"
                },
                {
                  "localName": "initExchangeArrival",
                  "importedName": "initExchangeArrival",
                  "sourceValue": "actions/fundSwap",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fundSwap.ts"
                },
                {
                  "localName": "queryExchangeArrivalRequested",
                  "importedName": "queryExchangeArrivalRequested",
                  "sourceValue": "actions/fundSwap",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fundSwap.ts",
                  "usage": "refundExchangeApply"
                },
                {
                  "localName": "stopSeconds",
                  "importedName": "stopSeconds",
                  "sourceValue": "actions/countdown",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/countdown.ts",
                  "usage": "refundExchangeApply"
                },
                {
                  "localName": "setRefundStep",
                  "importedName": "setRefundStep",
                  "sourceValue": "actions/refund",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/refund.ts",
                  "usage": "EXCHANGE"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 33,
                  "column": 61,
                  "index": 940
                },
                "end": {
                  "line": 159,
                  "column": 1,
                  "index": 4657
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["refundAction", "countdownAction", "fundSwapActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Settings/BasicSet/BasicSetPreview/DifferCells.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "basicSetActions",
              "sourceValue": "actions/basicSet",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/basicSet.ts",
              "exportNames": [
                "createOrUpdateFirmInfoRequested",
                "createOrUpdateFirmInfoSucceed",
                "createOrUpdateFirmInfoFailed",
                "hideCreateOrUpdateFirmInfoError",
                "resetCreateOrUpdateFirmStepInfo",
                "setNextButtonLoading",
                "setFirmVerificationStep",
                "setFirmVerificationDifferCellsFlag",
                "clearFirmVerificationDifferCellsFlag",
                "toggleOtherArea",
                "updateTargetFirmItem",
                "saveUpdateData"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "DifferCells",
              "loc": {
                "start": {
                  "line": 417,
                  "column": 2,
                  "index": 14511
                },
                "end": {
                  "line": 417,
                  "column": 13,
                  "index": 14522
                },
                "identifierName": "DifferCells"
              },
              "actionsMethods": [
                {
                  "name": "setFirmVerificationDifferCellsFlag"
                },
                {
                  "name": "updateTargetFirmItem"
                },
                {
                  "name": "setFirmVerificationStep"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "setFirmVerificationDifferCellsFlag",
                  "importedName": "setFirmVerificationDifferCellsFlag",
                  "sourceValue": "actions/basicSet",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/basicSet.ts"
                },
                {
                  "localName": "updateTargetFirmItem",
                  "importedName": "updateTargetFirmItem",
                  "sourceValue": "actions/basicSet",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/basicSet.ts"
                },
                {
                  "localName": "setFirmVerificationStep",
                  "importedName": "setFirmVerificationStep",
                  "sourceValue": "actions/basicSet",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/basicSet.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 23,
                  "column": 6,
                  "index": 781
                },
                "end": {
                  "line": 23,
                  "column": 17,
                  "index": 792
                },
                "identifierName": "DifferCells"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["basicSetActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Settings/BasicSet/BasicSetPreview/InfoCell.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "fileActions",
              "sourceValue": "actions/file",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/file.ts",
              "exportNames": [
                "uploadFileRequested",
                "uploadFileSucceed",
                "uploadFileFailed",
                "hideUploadFileError",
                "deleteFile",
                "deleteSyncFile",
                "resetFile",
                "resetCreateTransferAccountFile",
                "resetAllFile",
                "fileDownload",
                "getThumbnailRequested",
                "getThumbnailSucceed",
                "getThumbnailFailed",
                "initGetThumbnail",
                "setAnnexeRenameModal",
                "updateAnnexeFileName"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 33,
                  "column": 33,
                  "index": 992
                },
                "end": {
                  "line": 329,
                  "column": 1,
                  "index": 11287
                }
              },
              "actionsMethods": [
                {
                  "name": "fileDownload"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "fileDownload",
                  "importedName": "fileDownload",
                  "sourceValue": "actions/file",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/file.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 33,
                  "column": 33,
                  "index": 992
                },
                "end": {
                  "line": 329,
                  "column": 1,
                  "index": 11287
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["fileActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Header/WXHeader/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "authActions",
              "sourceValue": "actions/auth",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/auth.ts",
              "exportNames": [
                "oauthRequested",
                "oauthSucceed",
                "logoutRequested",
                "logoutSucceed",
                "unauthorized",
                "signInRequested",
                "signInSucceed",
                "signInFailed",
                "initSignIn",
                "wechatSignInRequested",
                "wechatSignInSucceed",
                "wechatSignInFailed",
                "setWechatSignInSliderData",
                "setWechatSignInSliderError",
                "initWechatSignIn",
                "setWechatSignInState",
                "pollingQRScannedRequested",
                "pollingQRScannedSucceed",
                "pollingQRScannedFailed",
                "pollingQRConfirmedRequested",
                "pollingQRConfirmedSucceed",
                "pollingQRConfirmedFailed",
                "resetQRConfirmed",
                "qrcodeSigninRequested"
              ]
            },
            {
              "isNamespace": true,
              "localName": "uiActions",
              "sourceValue": "actions/ui",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/ui.ts",
              "exportNames": [
                "toggleMobileNavSidebar",
                "toggleSubAppLoading",
                "setSubAppError"
              ]
            },
            {
              "isNamespace": true,
              "localName": "wechatActions",
              "sourceValue": "actions/wechat",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/wechat.ts",
              "exportNames": [
                "wechatAuthRequested",
                "wechatAuthSucceed",
                "wechatAuthFailed",
                "expandOneAndCloseOthers",
                "unbindWechatRequested",
                "unbindWechatSucceed",
                "unbindWechatFailed",
                "toggleUnbindWechatModal",
                "resetUnbindWechat",
                "wechatConfigRequested",
                "wechatConfigSucceed",
                "wechatConfigFailed"
              ]
            },
            {
              "isNamespace": false,
              "localName": "push",
              "importedName": "push",
              "sourceValue": "react-router-redux",
              "dependencyPath": "react-router-redux"
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 43,
                  "column": 58,
                  "index": 1144
                },
                "end": {
                  "line": 134,
                  "column": 1,
                  "index": 3764
                }
              },
              "actionsMethods": [
                {
                  "name": "unbindWechatRequested"
                },
                {
                  "name": "push"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "unbindWechatRequested",
                  "importedName": "unbindWechatRequested",
                  "sourceValue": "actions/wechat",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/wechat.ts"
                },
                {
                  "isNamespace": false,
                  "localName": "push",
                  "importedName": "push",
                  "sourceValue": "react-router-redux",
                  "dependencyPath": "react-router-redux"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 43,
                  "column": 58,
                  "index": 1144
                },
                "end": {
                  "line": 134,
                  "column": 1,
                  "index": 3764
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["authActions", "uiActions", "wechatActions"],
          "objectPropertyMap": {
            "push": "push"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/UsingTicket/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "idsActions",
              "sourceValue": "actions/ids",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/ids.ts",
              "exportNames": ["setIds", "setCurIds", "resetIds"]
            }
          ],
          "actionsComponents": [
            {
              "type": "ClassBody",
              "loc": {
                "start": {
                  "line": 120,
                  "column": 53,
                  "index": 3270
                },
                "end": {
                  "line": 238,
                  "column": 1,
                  "index": 6827
                }
              },
              "actionsMethods": [
                {
                  "name": "setCurIds",
                  "usage": "EMIdsUsages.UsedTicketInBusiness"
                },
                {
                  "name": "resetIds",
                  "usage": "EMIdsUsages.UsedTicketInBusiness"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "setCurIds",
                  "importedName": "setCurIds",
                  "sourceValue": "actions/ids",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/ids.ts",
                  "usage": "EMIdsUsages.UsedTicketInBusiness"
                },
                {
                  "localName": "resetIds",
                  "importedName": "resetIds",
                  "sourceValue": "actions/ids",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/ids.ts",
                  "usage": "EMIdsUsages.UsedTicketInBusiness"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 120,
                  "column": 53,
                  "index": 3270
                },
                "end": {
                  "line": 238,
                  "column": 1,
                  "index": 6827
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["idsActions"],
          "objectPropertyMap": {}
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Refund/RefundTT/StepTwo/formilyCom/Input/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": false,
              "localName": "checkFieldSucceed",
              "importedName": "checkFieldSucceed",
              "sourceValue": "actions/refund",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/refund.ts"
            },
            {
              "isNamespace": false,
              "localName": "checkFieldRequested",
              "importedName": "checkFieldRequested",
              "sourceValue": "actions/refund",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/refund.ts"
            },
            {
              "isNamespace": false,
              "localName": "checkSwiftCodeRequested",
              "importedName": "checkSwiftCodeRequested",
              "sourceValue": "actions/refund",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/refund.ts"
            }
          ],
          "actionsComponents": [
            {
              "type": "CallExpression",
              "loc": {
                "start": {
                  "line": 32,
                  "column": 1,
                  "index": 1021
                },
                "end": {
                  "line": 153,
                  "column": 3,
                  "index": 5013
                }
              },
              "actionsMethods": [
                {
                  "name": "checkFieldSucceed"
                },
                {
                  "name": "checkFieldRequested"
                },
                {
                  "name": "checkSwiftCodeRequested"
                }
              ],
              "usedActionsDependencies": [
                {
                  "isNamespace": false,
                  "localName": "checkFieldSucceed",
                  "importedName": "checkFieldSucceed",
                  "sourceValue": "actions/refund",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/refund.ts"
                },
                {
                  "isNamespace": false,
                  "localName": "checkFieldRequested",
                  "importedName": "checkFieldRequested",
                  "sourceValue": "actions/refund",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/refund.ts"
                },
                {
                  "isNamespace": false,
                  "localName": "checkSwiftCodeRequested",
                  "importedName": "checkSwiftCodeRequested",
                  "sourceValue": "actions/refund",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/refund.ts"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 32,
                  "column": 1,
                  "index": 1021
                },
                "end": {
                  "line": 153,
                  "column": 3,
                  "index": 5013
                }
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": [],
          "objectPropertyMap": {
            "checkFieldSucceed": "checkFieldSucceed",
            "checkFieldRequested": "checkFieldRequested",
            "checkSwiftCodeRequested": "checkSwiftCodeRequested"
          }
        }
      ]
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/FirmVerification/stepThree/PhoneVerification/index.tsx",
      "localConnect": "connect",
      "localCompose": "",
      "groups": [
        {
          "actionsDependencies": [
            {
              "isNamespace": true,
              "localName": "userActions",
              "sourceValue": "actions/user",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts",
              "exportNames": [
                "getUserFlowId",
                "getUserFlowIdAndCaptcha",
                "getUserFlowIdSucceed",
                "getUserFlowIdFailed",
                "initUserFlowId",
                "getUserCaptcha",
                "getUserCaptchaSucceed",
                "getUserCaptchaFailed",
                "initUserCaptcha",
                "verifyMfaRequested",
                "verifyMfaSucceed",
                "verifyMfaFailed",
                "initVerifyMfa",
                "setAuthId",
                "resetAuthId",
                "executeAuthIdCallBackRequested",
                "executeAuthIdCallBackSucceed",
                "executeAuthIdCallBackFailed",
                "sendMfaMessageRequested",
                "getMfaCaptchaRequested",
                "getMfaCaptchaSucceed",
                "getMfaCaptchaFailed",
                "initMfaCaptcha",
                "getWhiteListRequested",
                "getWhiteListSucceed",
                "getWhiteListFailed",
                "getWhiteListInit",
                "setMfaJson",
                "resetMfaJson",
                "queryIndustryRequested",
                "queryIndustrySucceed",
                "queryIndustryFailed",
                "queryRestrictionList",
                "queryRestrictionListSucceed",
                "queryRestrictionListFailed"
              ]
            },
            {
              "isNamespace": true,
              "localName": "vcodeActions",
              "sourceValue": "actions/vcode",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/vcode.ts",
              "exportNames": [
                "updateCountDownSeconds",
                "stopVcodeCountDown",
                "sendVcodeMessage",
                "sendVcodeMessageSucceed",
                "sendVcodeMessageFailed",
                "hideVcodeTip"
              ]
            },
            {
              "isNamespace": true,
              "localName": "securityActions",
              "sourceValue": "actions/security",
              "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/security.ts",
              "exportNames": [
                "checkABVType",
                "openABVPanel",
                "closeABVPanel",
                "validateCaptchaRequested",
                "validateCaptchaSucceed",
                "validateCaptchaFailed",
                "initValidateCaptcha",
                "setABVVeriType",
                "logSliderVeriInfo",
                "updateXRateLimitRoute"
              ]
            }
          ],
          "actionsComponents": [
            {
              "type": "Identifier",
              "name": "PhoneVerification",
              "loc": {
                "start": {
                  "line": 129,
                  "column": 2,
                  "index": 3750
                },
                "end": {
                  "line": 129,
                  "column": 19,
                  "index": 3767
                },
                "identifierName": "PhoneVerification"
              },
              "actionsMethods": [
                {
                  "name": "checkABVType",
                  "usageVariable": "userCaptchaUsage"
                },
                {
                  "name": "sendVcodeMessage",
                  "usageVariable": "userCaptchaUsage"
                }
              ],
              "usedActionsDependencies": [
                {
                  "localName": "checkABVType",
                  "importedName": "checkABVType",
                  "sourceValue": "actions/security",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/security.ts",
                  "usageVariable": "userCaptchaUsage"
                },
                {
                  "localName": "sendVcodeMessage",
                  "importedName": "sendVcodeMessage",
                  "sourceValue": "actions/vcode",
                  "dependencyPath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/vcode.ts",
                  "usageVariable": "userCaptchaUsage"
                }
              ],
              "nodeLoc": {
                "start": {
                  "line": 20,
                  "column": 6,
                  "index": 878
                },
                "end": {
                  "line": 20,
                  "column": 66,
                  "index": 938
                },
                "identifierName": "PhoneVerification"
              }
            }
          ],
          "unknownElements": [],
          "spreadElementNames": ["userActions", "vcodeActions", "securityActions"],
          "objectPropertyMap": {}
        }
      ]
    }
  ],
  "warnings": [
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/browser/index.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/public-path.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/browser/deferred.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/browser/bootstrap.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/bridgeConnection/route.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/bridgeConnection/sagas.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Provider/index.jsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/constants/env/index.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/store/index.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/browser/helpers.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/routes/index.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/NoMatch/index.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/index.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/bridgeConnection/reducer.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/utils/platform.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/constants/router.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/routes/index.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/routes/async.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/form.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/auth.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/fixRate.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/file.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/rate.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/router.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/trade.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/earnExchange.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/order.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/withdraw.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/password.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/util.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/basicSet.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/withdrawals.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/vcode.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/register.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/forgotPw.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/me.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/bind.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/collection.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/firm.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/fundSwap.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/partner.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/logger.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/statement.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/message.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/wechat.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/coupon.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/earnRefund.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/home.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/staff.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/nav.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/tip.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/intl.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/ticket.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/invitation.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/protocol.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/info.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/trend.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/faq.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/ocr.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/record.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/xshield.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/user.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/fund.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/countdown.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/meta.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/xtPartner.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/xpTransfer.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/xpReceive.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/content.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/annex.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/refund.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/security.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/submit.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/download.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/app.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/ids.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/error.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/modal.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/status.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/task.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/exchange.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/sagas/index.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/sagas/addressLocations.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/index.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/reducers/index.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/home.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/intl.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/me.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/router.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/security.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/user.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/util.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/vcode.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xshield.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/DocumentTitle/index.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/ReactRouterPatch/index.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/constants/basic.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/constants/index.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Order/OrderCreate/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Order/OrderUpdate/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/selectors/intl.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/utils/trackManager/index.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/types/security.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/constants/routes.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/routes/async.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/DynamicComponent/index.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/index.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/index.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/BillReceiptCreate/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/BillReceiptDetail/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/EarnExchange/RelateOrderNew/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/FixRate/FixRateTrade/index.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Order/index.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Statement/index.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/AddedServices/Records/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Collection/CollectionNew/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Collection/CollectionAdvantage/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Collection/CollectionRecmd/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Withdrawal/WithdrawalFX/WithdrawalFXAdd/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Withdrawal/WithdrawalFX/WithdrawalFXAddLimit/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XTPartner/index.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XTPartner/XTPartnerLogin/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XtBean/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XtBean/XtBeanHistory/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Benefit/deduction/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Benefit/deduction/deductionDetail/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Benefit/deduction/deductionHome/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Settings/GrantFxWithdraw/OrderExchangeStep/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/SystemUpdatePage/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/WithdrawSetting/WithdrawEasyResult/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/SettlementProviders/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/SettlementProviders/ProvidersTable/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/SettlementProviders/ProvidersForm/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/SettlementProviders/ProvidersDetail/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Refund/RefundInner/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/file.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/firm.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fixRate.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fundSwap.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/preview.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/pwStrength.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/record.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/tip.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/trend.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdraw.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/withdrawals.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/SwapExchangeForm/helper.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/constants/city.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/constants/firm.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/constants/form.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/constants/fund.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/constants/radio.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/constants/record.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/constants/regexp.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/constants/select.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/constants/trackPointCode.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/constants/upload.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/constants/withdrawal.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/effects/form/address.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/effects/form/basic.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/effects/form/promotion.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/effects/form/transfer.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/helpers/form.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/utils/index.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/utils/api.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/utils/math.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/utils/validate.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/types/meta.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/types/order.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/types/refund.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/types/tip.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/auth.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/collection.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/content.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/nav.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/ocr.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/constants/platforms.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/effects/app/router.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/helpers/auth.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/utils/errorMessage.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/utils/localForage.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/types/auth.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/types/firm.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/types/user.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/effects/submit/fund.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/error.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/meta.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/types/file.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/rate.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/count.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/modal.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/types/modal.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/trade.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/earnExchange.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/utils/normalize.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/ids.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/order.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/constants/order.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/effects/addressLocations/index.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/actions/loanWithdraw.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/utils/reduxHelpers.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/types/ids.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/types/api.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/types/coupon.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/password.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/types/status.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/status.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/utils/apiCache.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/constants/address.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/basicSet.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/FirmVerification/utils.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Settings/BasicSet/Common/utils.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/types/basicSet.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/fund.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/utils/address.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/forgotPw.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/partner.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/register.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/RegisterForm/helper.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/types/partner.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/wechat.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/app.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/bind.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/types/app.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/types/bind.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/types/collection.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/refund.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/countdown.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/types/countdown.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/step.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/types/spot.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/types/step.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/helpers/router.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/helpers/benefit.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/invitation.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/submit.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/constants/partner.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/types/submit.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/statement.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/message.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/constants/oauth.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/coupon.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/earnRefund.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/staff.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/helpers/tip.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/effects/me/profile.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/ticket.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/protocol.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/types/protocol.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/info.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/faq.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xpTransfer.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/effects/meta/benefits.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/effects/meta/ocr.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/effects/meta/promotion.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/effects/submit/benefit.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/helpers/meta.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xtPartner.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/types/xtPartner.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/constants/xtPartner.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/xpReceive.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/types/xpReceive.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/effects/marketing/ad.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/annex.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/constants/protocol.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/effects/submit/address.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/effects/submit/mobile.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/effects/submit/partner.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/effects/submit/promotion.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/helpers/submit.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/download.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/helpers/download.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/types/download.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/helpers/app.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/utils/ModalManager/index.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/effects/ids/benefit.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/utils/log.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/effects/ga/benefit.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/effects/modal/dbs.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/effects/status/promotion.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/task.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/types/task.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/effects/task/activity.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/exchange.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Settings/GrantFxWithdraw/config.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/sagas/orderLoan.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/sagas/loanWithdraw.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/sagas/myLoans.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/sagas/repayment.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/addressLocations.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/ui.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/intl.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/rate.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/auth.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/query.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/fixRate.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/file.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/trade.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/count.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/earnExchange.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/order.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/withdraw.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/password.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/util.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/basicSet.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/withdrawals.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/pwStrength.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/vcode.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/register.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/forgotPw.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/me.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/bind.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/firm.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/preview.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/cache.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/fundSwap.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/partner.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/collection.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/statement.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/message.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/wechat.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/coupon.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/earnRefund.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/home.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/staff.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/nav.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/ticket.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/invitation.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/protocol.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/trend.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/tip.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/faq.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/info.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/ocr.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/record.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/xshield.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/step.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/uuid.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/user.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/fund.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/countdown.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/meta.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/xtPartner.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/xpTransfer.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/xpReceive.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/content.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/annex.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/refund.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/security.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/submit.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/modal.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/status.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/ids.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/download.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/platform.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/addressLocations.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/reducers/exchange.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/reducers/orderLoan.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/reducers/loanWithdraw.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/reducers/myLoans.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/reducers/repayment.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/uw3.0/Modal/index.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/TradePasswordForm/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Vcode/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/utils/rsa.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/CloseIcon.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/MiddleCloseIcon.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Modal/AgreementModal/index.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Loading/index.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Tip/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Order/api.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/constants/home.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/containers/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/FirstRegisterStep/FundPlatformCarousel/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/utils/isCCCountry.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/middlewares/Auth.jsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/ui.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Protocol/UserAgree/UserAgreeContent/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/AuthLimite/index.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Modal/NewFuncIntroTipModal/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/middlewares/IsPhone.jsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/middlewares/AccountType.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/middlewares/PlatformGuard.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/SidebarPopover/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/index.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/GuideModal.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/NoContentIcon.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/Spinner/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Advertise/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Charts/index.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Modal/ReplenishModal/ReplenishModal.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Steps/SubAccountFirstLoginSteps/index.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/uw3.0/Tips/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/constants/permisson.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Asset/AssetItem/index.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/middlewares/OnlyCaiNiaoFirmForbid.jsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/EarnExchange/components/AddFundSourceDrawer/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/EarnExchange/components/SupplyOrderInfoDrawer/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/DashboardHome/DBAlert.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/DashboardHome/TodoItem/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/DashboardHome/TodoItem/helper.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/DashboardHome/help.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/types/benefit.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/types/content.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/types/platform.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/middlewares/PhoneNotAdapt.jsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/ErrorPage/index.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Guide/FuncUpdModal/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/middlewares/Qualification.jsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Collection/hooks/useFilterData.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Collection/hooks/useVaList.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Collection/CollectionList/components/CainiaoCard/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Collection/CollectionList/components/XTransferCard/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Collection/CollectionList/types.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/types/limit.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/uw3.0/ITabs/index.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/NavPanelDesc/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/question.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/bizComponents/RelateOrderDrawer/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/NoData/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/constants/earn.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/constants/earnExchange.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/EarnExchange/GuideCard/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/EarnExchange/type.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/types/bank-slip.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/types/staff.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/EarnExchange/EarnExchangeDetail/StaffCard/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/EarnExchange/EarnExchangeDetail/StatusCard/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/EarnExchange/EarnExchangeDetail/StatusInfo/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/EarnExchange/EarnExchangeDetail/StatusSteps/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/EarnExchange/EarnExchangeDetail/hooks.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/EarnExchange/EarnExchangeDetail/utils.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/hooks/useRouter.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/BillReceiptRecord/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/components/NotOpenBillReceipt/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/components/ProtocolModal/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/components/StatusBar/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/constant.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/hooks/useBillReceiptStatus.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/hooks/useNavPanel.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/hooks/useOpenBillReceipt.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/hooks/useProtocol.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/types.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/BillReceiptCreate/components/StepOne/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/BillReceiptCreate/components/StepOne/types.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/BillReceiptCreate/components/StepThree/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/BillReceiptCreate/components/StepTwo/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/BillReceiptCreate/hooks/useBillReceiptDetail.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/BillReceiptCreate/hooks/useStep.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/BillReceiptCreate/types.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/BillReceiptDetail/components/ReceiptCard/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/BillReceiptDetail/components/ShopCard/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/BillReceiptDetail/components/StatusCard/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/BillReceiptDetail/components/TimelineCard/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/BillReceiptDetail/helper.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/BillReceiptDetail/hooks/useDetail.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/BillReceiptDetail/type.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Panel/DetailPanel/index.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/constants/annex.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/constants/refund.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/constants/usertype.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/middlewares/FirewallRefuse.jsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/utils/format.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Refund/RefundChoose/helper.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/uw3.0/ISteps/index.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/uw3.0/ITable/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/ReceiveMoney/help.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/WithdrawReverse.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/WithdrawSuccess.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/components/index.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/help.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/EarnExchange/RelateOrderNew/RelateOrderComp.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/EarnExchange/RelateOrderNew/components/RelateResult/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Button/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Protocol/CCProtocol/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/common/auditing.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/common/reversed.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/common/success.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Order/OrderDetail/component/BaseInfo/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Order/OrderDetail/component/CellWrapper/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Order/OrderDetail/component/LogisticInfo/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Order/OrderDetail/component/LogisticInfo/helper.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Order/OrderDetail/component/OperationCard/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Order/OrderDetail/component/OtherInfo/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Order/OrderDetail/component/RelateInfo/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Order/OrderDetail/component/ShopInfo/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/helper.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Order/OrderDraft/helper.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Order/OrderDraft/useHook.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/uw3.0/SelectButton/index.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/WithdrawSetting/WithdrawChoose/protocol.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/components/Modal/WithdrawalChooseModal/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/types/withdraw.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/WithdrawSetting/WithdrawChoose/ProtocolPage/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/WithdrawSetting/WithdrawChoose/EasyWithdrawGuideModal/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/SettlementProviders/hooks/useABTest.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/AccountFrozenIcon.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/uw3.0/Bread/index.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/helpers/fund/order.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/WithdrawClose.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/WithdrawProcessing.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/FastOrderTag/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Benefit/CustomerPlan/helper.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/WithdrawSetting/WithdrawDetail/config.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Statement/util.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/constants/bill.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/helpers/bill.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Statement/StatementAll/config.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/types/bill.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Statement/StatementDetail/help.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Statement/StatementDetail/util.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Modal/ConfirmModal/index.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/utils/map.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Statement/utils.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/types/statement.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Statement/PaymentDetail/util.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/constants/trade.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Benefit/SuperMember/SuperMemberUsing/util.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Ticket/TicketItem/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/types/ticket.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Benefit/SuperMember/components/IntroTitle/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Asset/Amount.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Asset/util.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/utils/jsxMethods.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/utils/index.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/SelectedIcon.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/AddedServices/constants.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Action/constants.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/FirmVerification/helper.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/uw3.0/ITitle/index.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/PartnerBindCodeIcon.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/PartnerHowBecomeIcon.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/PartnerProcessIcon.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/PartnerStepIcon.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/PartnerIntroIcon.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/PartnerGiftIcon.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/DropdownArrowIcon.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/uw3.0/ITable/util.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Settings/OperationRecords/helper.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Collection/CollectionNew/components/CainiaoAccount/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Collection/CollectionNew/components/NoramlAccount/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Collection/CollectionNew/context.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Collection/CollectionNew/hooks/useOpenVa.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/constants/agreement.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Collection/CollectionDetail/components/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Collection/CollectionDetail/components/AccountDetailHeader/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Collection/CollectionDetail/components/ActivationOrDormancyModal/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Collection/CollectionDetail/components/CommonPart/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Collection/CollectionDetail/components/DBSXTPrefixModal/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Collection/CollectionDetail/components/RemoveXTPrefixModal/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Collection/CollectionDetail/components/RenameAccountModal/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Collection/CollectionDetail/components/RenderCustomButton/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Collection/CollectionDetail/components/RenderTemplate/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Collection/CollectionDetail/components/RenderTopTips/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Collection/CollectionDetail/components/hooks/useVaDetail.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Collection/CollectionDetail/helper.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Collection/CollectionDetail/index.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/FixedBottomBar/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Protocol/InfoTransport/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Collection/CollectionNew/hooks/useMutateVa.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Collection/CollectionNew/util.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Collection/components/AccountCheckBox/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Collection/components/ApplyResult/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Collection/components/ApplyVaConfirmModal/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Collection/hooks/useAgreement.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Collection/CollectionRecmd/type.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/middlewares/OnlyMainLandAndHKFirm.jsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/NavToPosition/index.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/FirmNotAudtingIcon.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Modal/GuideModal/util.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/Exclamatory.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/DocuPreview/index.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/ImgPreview/index.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Withdrawal/WithdrawalDetail/ConfirmStatus/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/VA/Auditing.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/NeedTradePasswordForm/index.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Agreement/XPartnerAgreement/index.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Panel/index.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/middlewares/CancelAccLimit.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XTPartner/XTPartnerInviter/XTPartnerInviterSign/helper.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XTPartner/XTPartnerInviter/XTPartnerInviterList/helper.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/DeclareOrder/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/WithdrawApplyForm/helper.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/LimitPage/WithdrawAndDebtLimit/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XTPartner/XTPartnerTransfer/XTPartnerTransferApply/helper.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Modal/FormModal/index.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Panel/QueryPanel/index.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XTPartner/XTPartnerTransfer/helper.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XTPartner/XTPartnerTransfer/XTPartnerTransferList/helper.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/types/xpTransfer.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XTPartner/XTPartnerInvitee/XTPartnerInviteeList/helper.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/uw3.0/SplitPanelTable/index.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XTPartner/XTPartnerReceive/helper.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XTPartner/XTPartnerReceive/XTPartnerReceiveList/helper.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XTPartner/XTPartnerReceive/XTPartnerReceiveDetail/helper.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XTPartner/XTPartnerRefund/XTPartnerRefundApply/components/RefundConfirm/index.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XTPartner/XTPartnerRefund/XTPartnerRefundApply/helper.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Agreement/UpgradeAgreement/index.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XtBean/components/XtBeanBoard/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XtBean/components/XtBeanDetail/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XtBean/components/XtBeanEarn/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/types/xtBean-3.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XtBean/components/XtBeanTask/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XtBean/hooks/index.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XtBean/utils/index.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/constants/superMember.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Benefit/SuperMember/SuperMemberUsingNew/MemberCard.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/bridgeConnection/api.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Benefit/deduction/components/DeductionModal/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/constants/customerPlan.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Benefit/SuperMember/components/BuyFeedBack/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Benefit/SuperMember/components/SuperMemberBuyCard/util.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Benefit/CustomerPlan/components/CustomerPackage/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Benefit/CustomerPlan/components/RateDrawer/RateDrawer.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Benefit/CustomerPlan/CustomerPlanBuyPage/help.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Benefit/CustomerPlan/components/table/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Benefit/CustomerPlan/components/QueryOperationForm/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Benefit/CustomerPlan/CustomerPlanHistory/helper.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/hooks/useOnlyCaiNiaoFirmForbid.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/hooks/useQualification.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Settings/GrantFxWithdraw/component/ExchangeTable/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/types/exchange.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/ErrorIcon.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/hooks/useSteps.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/SettlementProviders/ProvidersForm/utils.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Settings/GrantFxWithdraw/OrderExchangeScene/FormScene.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/SettlementProviders/ProvidersForm/const.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/SettlementProviders/helper.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/components/DetailInfo/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Settings/GrantFxWithdraw/api.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Settings/GrantFxWithdraw/component/PasswordModal/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Settings/GrantFxWithdraw/const.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Settings/GrantFxWithdraw/hooks/useDeleteOrder.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Withdrawal/WithdrawalEasyAdd/StepOne/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Withdrawal/WithdrawalEasyAdd/StepThree/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Withdrawal/WithdrawalEasyAdd/StepTwo/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Withdrawal/WithdrawalEasyAdd/config.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Withdrawal/WithdrawalEasyAdd/useHook.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/AuditingIcon.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/WithdrawSetting/WithdrawEasyResult/useHook.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/SettlementProviders/component/PasswordModal/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/SettlementProviders/hooks/useDeleteSupplier.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/SettlementProviders/ProvidersTable/const.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/SettlementProviders/ProvidersTable/useHook.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/SettlementProviders/ProvidersForm/components/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/types/supplier.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/hooks/useSensorUtil.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/SettlementProviders/hooks/useSettlementDetail.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/SettlementProviders/ProvidersDetail/const.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Refund/components/InfoPanel/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Refund/RefundInner/components/FillAmount/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Refund/RefundInner/components/VerifyInfo/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Refund/RefundInner/components/Result/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Refund/RefundInner/hooks/useRefundInnerForm.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Refund/RefundInner/hooks/useInfoItems.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/hooks/useFrozenList.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/hooks/useDepositClaimDetail.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/SubmitConfirmProvider/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/helpers/address.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/utils/isEurCountry.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/utils/withdraw.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/Segments/BeneficiaryAddressBeneficiaryAddressSegment/util.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/WithdrawApplyForm/StepOne/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Fields/SelectSearchInput/util.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/constants/activity.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Collection/CollectionNew/type.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Asset/useCurrency.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/utils/cutomExceptions/HttpException.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/types/base.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/types/xtBean-0.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/types/xtBean-1.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/types/xtBean-2.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/bizComponents/OrderFormDrawer/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/types/index.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/constants/actions.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/utils/string.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/helpers/firm.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/utils/symbolReplace.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/constants/benefit.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/helpers/ocr.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/constants/ga.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/utils/count.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/types/activity.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/helpers/ids.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/actions/orderLoan.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/api/index.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/constants/index.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/actions/myLoans.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/constants/enums.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/actions/repayment.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/utils/feedReducer.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/query.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/cache.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/platform.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/CaptchaIcon.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/ABVPanel/util.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Modal/RenameFormModal/index.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/MutipleEmailInput/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/PicturePreview/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/foreignTradePlatform/components/CloudDiskUploader/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/foreignTradePlatform/components/NetDistAuthorized/LinksModal/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/ClipIcon.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/SmallCloseIcon.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/UploadNewIcon.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/file/ImgIcon.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/file/PdfIcon.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/CheckIcon.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/DeleteIcon.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/utils/jsbn.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/utils/rng.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/NewPasswordIcon.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/ErrorTipIcon.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/CorrectTipIcon.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/constants/password.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/bizComponents/Fields/ReduxForm/FormAbstraction/Form/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/OrderForm.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/context/Provider.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Crm/SideFunctions/types.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/constants/breadcrumb.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/CloseDayIcon.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Tip/types.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/components/LoanNavPanel/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/components/LoanSearchBar/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/components/LoanTable/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/containers/LoanWithdraw/InfoBar.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/hooks/useEventCallback.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/components/AgreementLink/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/components/LoanDetailTables/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/components/LoanMainInfo/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/components/LoanTimeLine/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/containers/Repayment/RightBar.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/containers/Repayment/InfoBar.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/components/XTTabs/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Carousel/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/constants/subnav.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/SidebarNav/helper.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/constants/authMapRoute.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/BoldText/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/TipLightIcon.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Protocol/PrivatePolicy/PrivatePolicyContent/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Crm/SideFunctions/components/index.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Crm/SideFunctions/components/HelperService/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Crm/SideFunctions/icons/index.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/useGuideModalHook.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/constants/time.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Modal/ReplenishModal/ModalStyle.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Modal/ReplenishModal/ReplenishSucesspage.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/utils/currency.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/EarnExchange/components/AddFundSourceDrawer/hooks/useAddFundSource.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/EarnExchange/components/AddFundSourceDrawer/hooks/useHookForm.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/EarnExchange/components/SupplyOrderInfoDrawer/components/OrderTable/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/EarnExchange/components/SupplyOrderInfoDrawer/helper.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/EarnExchange/components/SupplyOrderInfoDrawer/hooks/useIssueOrder.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/EarnExchange/components/SupplyOrderInfoDrawer/type.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/MessageNewIcon.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/AppDownloadGuide/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/VA/ServerError.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/constants/limit.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Collection/CollectionList/components/AccountListEmpty/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Collection/CollectionList/components/CollectionCard/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Collection/CollectionList/components/Notice/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/utils/restriction.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Collection/helper/index.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Collection/hooks/useRestriction.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Collection/CollectionList/components/HistoryAccountModal/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Collection/CollectionList/components/HistoryAccountTips/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/types/restriction.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/bizComponents/RelateOrderDrawer/CollectionTable/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/bizComponents/RelateOrderDrawer/RelateProcess/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/bizComponents/RelateOrderDrawer/hooks/useRelateOrder.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/actions/form.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/EarnExchange/EarnExchangeDetail/SelectStaff/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/hooks/useUserWhiteListFunction.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/EarnExchange/EarnExchangeDetail/StatusSteps/utils.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/EarnExchange/EarnExchangeDetail/InnerRefundDetailModal/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/EarnExchange/EarnExchangeDetail/hooks/useDrawerHook.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/components/QuestionPopover/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/BillReceiptRecord/components/GuideCard/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/BillReceiptRecord/components/NormalPage/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/hooks/useSupportCountry.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/components/CustomTitle/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/BillReceiptRecord/hooks/usePayerList.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/BillReceiptCreate/constant.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/BillReceiptCreate/hooks/useForm.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/BillReceiptCreate/components/StepOne/BuyerModal.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/BillReceiptCreate/components/StepOne/ProductDrawer.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/BillReceiptCreate/components/StepOne/hooks/useBuyerInfo.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/BillReceiptCreate/components/StepOne/hooks/useNext.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/BillReceiptCreate/components/StepOne/hooks/usePaymentType.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/BillReceiptCreate/components/StepOne/hooks/useProductInfo.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/BillReceiptCreate/components/StepOne/hooks/useSupportCountry.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/BillReceiptRecord/hooks/useCopyBillLink.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/BillReceiptCreate/components/StepTwo/InvoiceBill/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/BillReceiptDetail/api.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/BillReceiptDetail/components/CellWrapper/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/BillReceiptDetail/components/ReceiptCard/helper.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/BillReceiptDetail/hooks/useCloseBill.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/BillReceiptDetail/hooks/useCopy.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/common/failed.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/utils/refund.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Refund/RefundTT/StepOne/utils.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/FormItem/NormalFormItem/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Refund/RefundTT/StepTwo/FillArea/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Refund/RefundTT/StepTwo/FormilyFrom.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Refund/RefundTT/StepTwo/utils.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/types/annex.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Refund/RefundMSG/StepOne/utils.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/sort/asc.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/sort/default.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/sort/desc.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/components/MiddleBank/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/EarnExchange/RelateOrderNew/components/OrderOperationTable/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/EarnExchange/RelateOrderNew/components/SearchPanel/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/EarnExchange/RelateOrderNew/components/SearchPanel/type.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/EarnExchange/RelateOrderNew/hooks/index.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/EarnExchange/RelateOrderNew/hooks/useSelectOrder.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/EarnExchange/RelateOrderNew/pageIndex.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/utils/mapStatus.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Order/OrderTable/helper.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Order/OrderDetail/component/Item/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Order/OrderDetail/component/BaseInfo/useHook.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Order/OrderDetail/helper.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Order/util.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Order/components/OrderSwitchStatus/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Order/OrderDetail/component/OperationCard/helper.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Order/OrderDetail/component/OperationCard/useHook.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Order/OrderDetail/component/OtherInfo/helper.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Order/OrderDetail/component/RelateInfo/RelateCollectTable.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Order/OrderDetail/component/RelateInfo/RelateWithdrawTable.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Order/OrderDetail/component/RelateInfo/FundTransferTable.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/config.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Order/hooks/useDeleteOrder.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Order/helper.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/utils/ticket.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/WithdrawFXApplyForm/Modal/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/WithdrawFXApplyForm/StepOne/stepone.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/WithdrawFXApplyForm/StepThree/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/WithdrawFXApplyForm/helper.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/constants/math.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/TransferAddMaterialForm/RenderComments/index.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/helpers/ticket.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/TransferApplyForm/helper.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/ColorText/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/CornerLabelIcon.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/utils/coupon.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Ticket/TicketItem/util.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Asset/types.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/foreignTradePlatform/types/payment.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/foreignTradePlatform/svg/BalancePayment.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/foreignTradePlatform/svg/NikeCornerLabel.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/foreignTradePlatform/svg/OnlinePayment.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/foreignTradePlatform/svg/Wechat.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/comps/Button/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/utils/verify.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/foreignTradePlatform/api/mall.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/foreignTradePlatform/error/mall/index.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/foreignTradePlatform/types/mall.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Action/hooks.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/MarkedText/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/constants/status.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Collection/CollectionNew/components/NoramlAccount/FixedBottomBar.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Collection/CollectionNew/components/NoramlAccount/GlobalBankList.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Collection/CollectionNew/components/NoramlAccount/LocalBankList.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Collection/CollectionDetail/components/Tip/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Collection/CollectionDetail/components/AccRecords/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Collection/CollectionDetail/components/CopyModal/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Collection/CollectionDetail/components/hooks/useData.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Collection/CollectionDetail/components/RenderTemplate/ConstContent.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/VA/CFSB.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/VA/Currency.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/ResultProcessing.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/ResultSuccess.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Collection/CollectionNew/hooks/useVaStatus.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Agreement/FetchProtocolFail/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/index.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/NoWithdrawAccount.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/NotBindEmail.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/NotBindPhone.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/NotSetLoginPassword.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/PasswordLockIcon.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/WXIcon.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/WXLoadErrorIcon.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/WechatHasNoVaIcon.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/subAccount/OperationLogLimitIcon.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Fields/SelectAddressField/types.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Fields/SelectAddressField/withCountryMethods.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Withdrawal/WithdrawalDetail/ConfirmStatus/RnderErrMsg/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/constants/message.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/types/message.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/MessageItem/message.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/utils/public.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/DeclareOrder/components/OrderOperationTable/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/DeclareOrder/constant.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/DeclareOrder/hooks/index.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/DeclareOrder/hooks/useSelectOrder.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XTPartner/XTPartnerTransfer/XTPartnerTransferApply/components/TransferInformation/helper.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/AccountIcon.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/PartnerLoginForm/helper.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/MegCaptureIcon.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XtBean/components/XtBeanRules/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XtBean/components/XtBeanBindModal/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XtBean/components/XtBeanExchgModal/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XtBean/components/XtBeanGoods/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XtBean/components/XtBeanUnbindModal/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XtBean/constants.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XtBean/hooks/useXTBeanTotal.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XtBean/hooks/useXTBeanToExpire.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XtBean/hooks/useXTBeanTaskList.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XtBean/hooks/useXTBeanCashGoods.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XtBean/hooks/useXTBeanEquityGoods.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XtBean/hooks/useXTBeanReceiveAll.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XtBean/hooks/useXTBeanHistory.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Benefit/CustomerPlan/components/CustomerPackage/CustomerPackageWrapper.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Benefit/CustomerPlan/components/CustomerPackage/CustomerPackage.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Benefit/CustomerPlan/CustomerPlanHistory/protocol/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/SuccessTipIcon.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/components/AppDownloadLink/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/components/ExpiableQRCode/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/FileUploadPro/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Settings/GrantFxWithdraw/hooks/useInitOrder.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Settings/GrantFxWithdraw/hooks/useOrderSceneForm.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Settings/GrantFxWithdraw/type.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/SettlementProviders/component/Preview/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/SettlementProviders/component/CellWrapper/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Settings/GrantFxWithdraw/component/PasswordModal/helper.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Withdrawal/WithdrawalEasyAdd/StepOne/helper.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Withdrawal/WithdrawalEasyAdd/StepTwo/useStepTwoHook.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/WithdrawEasyFXApplyForm/StepOne/stepone.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/WithdrawEasyFXApplyForm/StepThree/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/WithdrawEasyFXApplyForm/helper.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/SettlementProviders/component/PasswordModal/helper.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/SettlementProviders/ProvidersForm/components/StepThree.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Refund/RefundExchangeModalNew/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Refund/RefundInner/hooks/useBalanceAmount.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Refund/RefundInner/hooks/useCalculateRefundAmount.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Refund/RefundInner/hooks/useCanExchange.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Refund/RefundInner/hooks/useExchangeModal.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Refund/RefundInner/hooks/useInnerRefundDetail.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Refund/RefundInner/hooks/useRefundReasons.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Refund/RefundInner/utils.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Refund/RefundInner/hooks/useRefundSubmit.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Refund/RefundInner/types.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Order/OrderDetail/component/Preview/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/types/utils.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/SuperMemberAdWhenNoTicket/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/WithdrawApplyForm/StepOne/hook.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Asset/constants.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/uw3.0/DimensionTable/index.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/components/LoanOrderSearchBtn/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/containers/LoanWithdraw/helper.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/containers/LoanWithdraw/hooks/useTransformedContractsList.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/MutipleEmailInput/isEmail.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/MutipleEmailInput/ReactMultiEmail.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/foreignTradePlatform/components/NetDistAuthorized/useCloudDiskPermission.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/foreignTradePlatform/components/CloudDiskUploader/Footer.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/foreignTradePlatform/components/CloudDiskUploader/types.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/foreignTradePlatform/components/CloudDiskUploader/ModalContent.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/utils/prng4.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/PartnerHscodeForm/index.jsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/CreateSuccess.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/components/BaseInfo/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/components/ClearLogistic/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/components/LogisticInfo/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/components/OtherInfo/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/components/ShopInfo/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/hooks/useHandleOrder.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/hooks/useHistoryBlock.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/hooks/useSaveState.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/utils/util.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/context/reducer.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/components/AdBoard/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/components/StepsInfo/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/containers/OrderLoan/components/FirstDingdanrongActivity/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/components/LoanBoard/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/components/CardInfo/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/components/OperationResult/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/components/FormItem/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/hocs/WithVCodeStatus.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/containers/OrderLoanApplication/helper.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/containers/OrderLoanApplication/hooks/index.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/components/ColTable/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/ApplyingIcon.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/hooks/useRepaymentStatus.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/containers/Repayment/Error.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/containers/Repayment/ExRepaymentTable.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/containers/Repayment/Processing.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/containers/Repayment/ReservedTransferProcessing.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/containers/Repayment/Success.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/containers/Repayment/hooks/useTicketAndDeduction.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/containers/LegalMobileModify/helper.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/SideItemNav/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/containers/OrderLoan/components/ActivityIcon/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/foreignTradePlatform/components/NetDistAuthorized/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/ForeignTradeIcon.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/NavCardIcon.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/NavCollectionIcon.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/NavCrownIcon.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/NavExchangeIcon.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/NavFinancingIcon.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/NavHomeIcon.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/NavPartnerIcon.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/NavSettingIcon.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/NavWalletIcon.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/NetDiskNavIcon.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/tradePlatform/BetaIcon.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/utils/storage.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/types/storage.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Crm/SideFunctions/components/Header/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Crm/SideFunctions/icons/QuestionIcon.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Crm/SideFunctions/icons/ToolIcon.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Crm/SideFunctions/icons/RightArrow.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/comps/FormItem/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/comps/Uploader/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/actions/upload.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/hocs/withReduxForm.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/EarnExchange/components/SupplyOrderInfoDrawer/hooks/useCancelAddMaterial.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/EarnExchange/components/SupplyOrderInfoDrawer/hooks/useInitQuery.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/EarnExchange/components/SupplyOrderInfoDrawer/hooks/useSubmit.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/EarnExchange/components/SupplyOrderInfoDrawer/hooks/useWarningTips.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Collection/CollectionList/components/ApplyAccountTips/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/bizComponents/RelateOrderDrawer/hooks/useCollectionTable.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/BillReceiptRecord/constant.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/BillReceiptRecord/hooks/useTotalAmount.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/BillReceiptRecord/components/NormalPage/config.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/BillReceiptRecord/types.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/BillReceiptCreate/hooks/useSchema.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/BillReceiptCreate/components/StepOne/hooks/useBuyerForm.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/BillReceiptCreate/components/StepOne/hooks/useProductForm.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/components/Cell/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/BillReceiptCreate/components/StepTwo/InvoiceBill/helper.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Refund/RefundTT/StepOneForm/utils.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/utils/localization.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Refund/RefundTT/StepTwo/formilyCom/index.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/EarnExchange/RelateOrderNew/components/RelateAmountInput/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/EarnExchange/RelateOrderNew/hooks/useRelateDetail.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/EarnExchange/RelateOrderNew/hooks/useCanRelateOrders.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/EarnExchange/RelateOrderNew/hooks/useTracking.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/EarnExchange/RelateOrderNew/hooks/useRelateOrder.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Order/OrderTable/components/ActionsGroup/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Order/OrderDetail/component/BaseInfo/helper.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Order/components/OrderSwitchStatus/helper.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Order/components/OrderSwitchStatus/useHook.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Order/OrderDetail/component/RelateInfo/helper.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/WithdrawFXApplyForm/Modal/renderErrMsg/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/WithdrawFXApplyForm/StepOne/RateLadder.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/WithdrawFXApplyForm/StepOne/hook.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/WithdrawFXApplyForm/StepOne/useMallCustomer.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/WithdrawFXApplyForm/StepThree/hook.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/helpers/order.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/DeclareOrder/helper.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/TransferApplyForm/StepOne/hook.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/RequestUI/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Upload/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/foreignTradePlatform/utils/utilityFuncs.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Settings/BasicSet/BasicSetPreview/utils.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/FirmVerification/stepThree/OtherAttachments/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/FirmVerification/stepTwo/messages.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Settings/BasicSet/BasicSetPreview/PreviewFile.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Collection/CollectionNew/components/NoramlAccount/SelectedAccModal.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Account/Collection/CollectionDetail/components/CopyModal/template.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/DeclareOrder/components/RelateAmountInput/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/DeclareOrder/hooks/useCanRelateOrders.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XtBean/components/XtBeanCash/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/XtBean/api.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Benefit/CustomerPlan/components/table/help.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Benefit/CustomerPlan/CustomerPlanHistory/features/protocol/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/WithdrawEasyFXApplyForm/StepOne/hook.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/WithdrawEasyFXApplyForm/StepThree/hook.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/SettlementProviders/ProvidersForm/hooks/useInitSupplier.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/SettlementProviders/ProvidersForm/hooks/useSaveSupplier.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/SettlementProviders/ProvidersForm/hooks/useStepOne.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/SettlementProviders/ProvidersForm/components/ImgModal/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/SettlementProviders/ProvidersForm/components/UploadImg/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/SettlementProviders/ProvidersForm/components/helper.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/SettlementProviders/ProvidersForm/hooks/useStepTwo.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Refund/RefundExchangeModalNew/StepOne/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Refund/RefundExchangeModalNew/StepTwo/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/hooks/useSpotfxMeta.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Refund/RefundExchangeModalNew/useRefundExchangeModalForm.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/hooks/useAccountBalance.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/hooks/usePlayIdMutation.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/hooks/usePublicKey.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Fields/SelectSearchInput/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/types/address.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/bizComponents/OrderFormDrawer/CreateOrderForm/OrderForm.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/containers/LoanWithdraw/StepTwoThings.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/foreignTradePlatform/components/CloudDiskUploader/FileName.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/foreignTradePlatform/components/CloudDiskUploader/query.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/foreignTradePlatform/components/CloudDiskUploader/util.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/foreignTradePlatform/components/CloudDiskUploader/Content.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/foreignTradePlatform/components/CloudDiskUploader/Search/SearchBar.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/foreignTradePlatform/components/CloudDiskUploader/Search/SearchResult.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/utils/pdf.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/components/AssociateCrmOrder/BasicOrderPreview/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/components/AssociateCrmOrder/OrderList/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/components/AssociateCrmOrder/useHtml2canvas.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/components/AssociateCrmOrder/useJsPdf.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/bizComponents/Fields/ReduxForm/CheckboxField/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/bizComponents/Fields/ReduxForm/DatePickerField/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/bizComponents/Fields/ReduxForm/InputField/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/bizComponents/Fields/ReduxForm/InputNumberField/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/bizComponents/Fields/ReduxForm/RadioGroupField/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/bizComponents/Fields/ReduxForm/UploadProField/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/hooks/useOrderDetails.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/utils/showFieldsByWithdrawal.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/components/FormItem/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/components/BaseInfo/components/BuyerAddress.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/components/BaseInfo/components/ImportCompany.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/components/BaseInfo/components/OrderCurrency.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/components/BaseInfo/helper.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/components/BaseInfo/hooks/useBaseInfo.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/components/LogisticInfo/components/RenderUnDeliver/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/components/LogisticInfo/helper.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/bizComponents/XtUploadPro/index.d.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/components/OtherInfo/components/RenderOrderRemarks/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/components/OtherInfo/helper.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/bizComponents/Fields/ReduxForm/AutoCompleteField/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/bizComponents/Fields/ReduxForm/SelectField/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/components/ShopInfo/helper.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/components/ShopInfo/useHook.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/utils/initialOrder.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/utils/transferOrderData.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/hooks/useDraftCreate.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/context/constants.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/containers/OrderLoan/hooks/useActivityIcon.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/components/OperationResult/iconMapping.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/TicketModal/utils.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/enterpriseFinancing/containers/Repayment/ExRepaymentSelectTicket.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/foreignTradePlatform/components/NetDistAuthorized/SideNavMenuItem/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/foreignTradePlatform/components/NetDistAuthorized/ExperienceModal/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/foreignTradePlatform/components/NetDistAuthorized/Protocol/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Crm/FormItem/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Crm/withReduxForm/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/hooks/index.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Crm/SideFunctions/util.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Crm/SideFunctions/constant.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Crm/Uploader/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/BillReceiptCreate/components/StepOne/hooks/useBuyerSchema.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/BillReceipt/BillReceiptCreate/components/StepOne/hooks/useProductSchema.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Refund/RefundTT/StepTwo/formilyCom/FormItem/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/HookForm/Fields/index.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/hooks/usePlayId.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Order/OrderTable/components/ActionsGroup/useHook.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/WithdrawFXApplyForm/hooks/useRateLadder.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/FirmVerificationHelper/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Modal/InforModal/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/FirmVerification/stepTwo/validate.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/FirmVerification/stepTwo/AccountOpeningAgreement.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/FirmVerification/stepThree/faceDetectionForm/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/FirmVerification/stepTwo/utils.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/SpmCrownLogo/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/XtransferLogo.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/SettlementProviders/ProvidersForm/components/DifferItem/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Refund/RefundExchangeModalNew/useSpotfxBuyRateMutation.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Refund/RefundExchangeModalNew/useSellCurrencyOptions.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Refund/RefundExchangeModalNew/types.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/containers/App/Dashboard/Fund/Refund/RefundExchangeModalNew/useSpotfxCreateOrderMutation.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/bizComponents/OrderFormDrawer/CreateOrderForm/hooks/useBottomWidth.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/bizComponents/OrderFormDrawer/CreateOrderForm/hooks/useHandleOrder.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/foreignTradePlatform/components/CloudDiskUploader/FilePrefix.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/foreignTradePlatform/components/CloudDiskUploader/FileList.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/foreignTradePlatform/components/CloudDiskUploader/Search/SearchFileItem.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/foreignTradePlatform/components/CloudDiskUploader/Search/useSearchItems.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/components/AssociateCrmOrder/BasicOrderPreview/components/Header/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/components/AssociateCrmOrder/BasicOrderPreview/components/PersonInfo/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/components/AssociateCrmOrder/BasicOrderPreview/components/ProductTable/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/components/AssociateCrmOrder/BasicOrderPreview/components/Protocol/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/components/AssociateCrmOrder/BasicOrderPreview/components/BankInfo/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/components/AssociateCrmOrder/BasicOrderPreview/api.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/components/AssociateCrmOrder/BasicOrderPreview/types.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/components/AssociateCrmOrder/BasicOrderPreview/constant.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/bizComponents/XtUploadPro/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/components/BaseInfo/hooks/useCompanyName.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/components/BaseInfo/constant.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/components/BaseInfo/hooks/useInvoiceOcr.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/components/LogisticInfo/components/RenderUnDeliver/useHook.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/components/LogisticInfo/components/RenderBookingNotes/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/components/LogisticInfo/components/RenderCustomsDeclaration/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/hooks/useDealAddress.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/TicketSelect/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/resources/icons/ticket.js",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/foreignTradePlatform/components/NetDistAuthorized/Protocol/CloudDiskProtocolContent.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/hooks/customer.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/hooks/measured.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/hooks/roll.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/HookForm/Fields/Input/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/HookForm/Fields/Checkbox/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/constants/sanctionList.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/DownloadApp/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/FirmVerification/stepThree/faceDetectionForm/detectionResult/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/bizComponents/OrderFormDrawer/CreateOrderForm/hooks/useOrderCreate.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/foreignTradePlatform/components/CloudDiskUploader/Navigator.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/foreignTradePlatform/components/CloudDiskUploader/hooks.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/foreignTradePlatform/components/CloudDiskUploader/Search/types.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/foreignTradePlatform/components/CloudDiskUploader/Search/utils.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/foreignTradePlatform/components/CloudDiskUploader/constants.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/foreignTradePlatform/components/CloudDiskUploader/Search/query.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/components/AssociateCrmOrder/BasicOrderPreview/components/CommonTitle.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/components/AssociateCrmOrder/BasicOrderPreview/components/PersonInfo/config.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/components/AssociateCrmOrder/BasicOrderPreview/components/PicAttachmentPreview/index.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/bizComponents/XtUploadPro/useUploadHook.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/components/LogisticInfo/components/RenderBookingNotes/helper.tsx",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/components/LogisticInfo/components/RenderBookingNotes/hooks/useBookingNotes.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/components/LogisticInfo/components/RenderBookingNotes/hooks/useShipCompany.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/components/LogisticInfo/components/RenderCustomsDeclaration/useHook.ts",
      "result": null
    },
    {
      "filePath": "/Users/alexwang/workspace/xTransfer/mfe-user-fund/shared/components/Form/CreateOrderForm/components/LogisticInfo/components/RenderBookingNotes/hooks/useLogisticBillOcr.ts",
      "result": null
    }
  ]
}
